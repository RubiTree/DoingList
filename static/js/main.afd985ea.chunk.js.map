{"version":3,"sources":["utils/Utils.ts","utils/DateUtils.ts","utils/Format.ts","model/model.ts","stores/MainStore.ts","stores/CurrentTaskStore.ts","stores/CurrentDoingTaskStore.ts","stores/index.ts","stores/CurrentDayOffsetStore.ts","stores/SearchTextStore.ts","stores/SearchModeStore.ts","utils/TaskInfoFormat.ts","layouts/TaskListContainer.tsx","layouts/ContentLayout.tsx","layouts/TimeLineLayout.tsx","layouts/TodayWorkConatiner.tsx","layouts/App.tsx","serviceWorker.ts","index.tsx"],"names":["Utils","obj","content","transfer","document","createElement","style","cssText","body","appendChild","value","focus","select","execCommand","blur","removeChild","fileName","console","log","eleLink","download","display","blob","Blob","href","URL","createObjectURL","click","Date","getTime","src","regex","search","RegExp","regExp","Math","random","toString","start1","end1","start2","end2","array","object","length","this","i","shift","pop","splice","DateUtils","hour","today","setHours","someStamp","day","dayZeroTime","offsetHour","result","Duration","init","end","dayMills","dur","startDay","getSomeDayStamp","start","endDay","push","offsetDay","dayOffset","getCurrentDayStamp","getOffsetedDayDur","getMyCurrentDayStamp","time1","time2","getDay","Format","timeMs","date","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","time","天","floor","小时","分","秒","Object","entries","filter","val","map","key","join","d","时","Task","Type","Note","AdjustConsume","ChildTask","id","title","level","createTime","doneTime","pendingDeadline","pendingReason","deadlines","expectConsumes","expectStartTime","cycleId","getTimestamp","generateId","idCounter","task","undefined","doingDurs","duration","currentTime","delay","isTimeDangers","getActualDeadline","isDangerousPending","isDangerousDeadline","deadline","index","getDur","reduce","a","b","allAdjusts","adjusts","adjust","limitDur","getLimitDur","allDurAdjusts","isIn","adjustTime","getActualExpectConsume","getAllDuration","timeline","timelines","note","timeLines","timeStamp","startOrEnd","isValid","childTask","childTasks","sort","isDone","order","name","isDoing","getDurDur","error","create","getJoin","max","min","CycleRecord","_startTime","_gap","gap","startTime","getStartTime","getGap","newTask","formatTimeInDay2","TimeLine","hasTimeLine","lines","createStartEndAutoNode","flatMap","concat","all","getStartEndWrappedTimeLines","isDivder","addDivders","isStartEndAutoGen","copy","assign","t","getDurationCoveredDays","dayStamp","createDivNode","StoreModel","totalAdjustConsumeTime","isNeedFuture","tasks","find","taskDur","containsProject","cycleRecord","containsCycleRecord","cycleRecords","forEach","record","isTimeToCreateTask2","isSameId","isTodayTask","getMyCurrentDayDur","addTask","createTask","item","currentDay","invokeAddCycleTask","orderTasks","isFutureTask","isDangerous","storage","isDebug","fetch","_getMockStoreModel","storageJson","localStorage","getItem","plainToClass","JSON","parse","adaptData","save","storeModel","setItem","stringify","newLocal","model","setModel","currentTaskStore","currentTask","setCurrentTask","currentDoingTaskStore","currentDoingTask","setCurrentDoingTask","storeManager","Store","registerStore","mainmodel","currentDayOffset","setCurrentDayOffset","offset","searchText","setSearchText","isSearchMode","setSearchMode","TaskInfoFormat","formatDuration2","isStringEmpty","pendingStatus","getPendingStatus","getDeadlineStatus","leftTime","left","getLeftExpectConsumeTime","Container","styled","div","Div","Container2","span","ButtonGroup","Input","Group","Button","AlertTips","props","NoteItem","choosed","isFuture","NoteList","stores","useStore","useEffect","doingTasks","stop","getMenu","onClick","param","Number","normalUpdate","domEvent","preventDefault","onClickMenu","Item","startTask","event","message","formatTimeInMs","lastStartTime","size","backgroundColor","margin","bordered","dataSource","indexOf","getTasks","renderItem","isSameTask","e","onDoubleClick","align","flex","paddingLeft","getDoingStatusTips","getDeadline","getConsumeExpected","getShowTips","overlay","className","formartLevel","DownOutlined","marginLeft","marginRight","NoteItemInput","useState","setContent","background","fontWeight","onChange","target","onBlur","TaskListContainer","setTitle","searchTextUI","setSearchTextUI","isNeedExceptTime","setNeedExceptTimeUI","expectTime","setExpectTime","setLevel","isCycleTask","setCycleTaskUI","cycleGap","setCycleGap","isLongTask","setLongTaskUI","exceptWorkday","setExceptWorkday","exceptHoliDay","setExceptHoliDay","isStartNow","setStartNow","setExpectStartTime","setNeedExceptTime","setCycleTask","setLongTask","changeOffsetDay","isAdd","downloadFile","formatTimeInMsToFileName","type","padding","formatTimeInDay","base","getOffsetString","width","multiple","file","files","reader","FileReader","onload","uploadContent","Modal","confirm","onOk","onCancel","readAsText","upload","checkedChildren","unCheckedChildren","checked","isSearchModeLocal","placeholder","onPressEnter","newRecord","setStartTime","valueOf","addCycleRecord","addResult","prefix","suffix","color","showTime","moment","notDoneTasks","consumeFormat","consumes","formatDuration","getAllTaskStatus","Editor","TextArea","ContentLayout","setTimeline","childTaskInput","setChildTaskInput","isExpectConsume","setExpectConsumeUI","newAdjustTime","setNewAdjustTime","isHaveDeadline","setHaveDeadlineUI","setDeadlineUI","isPending","setPendingUI","setPendingReason","pendingTime","setPendingTimeUI","hoverTimeline","hoverTask","setExpectStartTimeUI","lastTask","setLastTask","isManual","info","saveToLocal","_realDone","done","success","getDeadlineTime","isTimeValid","timeName","formatTimeInMinute","getPendingDeadlineTime","setExpectConsume","setHaveDeadline","onOrderChildTask","addOrder","downOrder","isStarted","TimeLinesContainer","ChildTaskItem","DeleteBtn","isHover","ChildTaskBtn","removeTask","undoneChildTask","doneTask","getConsumed","getStartExpected","marginTop","marginBottom","onChangeExpectStartTime","newAdjustTimeHours","NaN","newAdjustTimeMills","msg","onChooseDeadline","pendingLine","onChoosePendingDeadline","createContentNode","getFormartTimeLines","getKey","paddingRight","formatTimeInSecond","removeDuration","removeTimeline","onDeleteTimeline","getOrderedChildTasks","reStart","onDoneChildTask","removeChildTask","onDeleteChildTask","TimeLineLayout","timelineSize","setTimelineSize","defaultValue","getTitled","slice","getCurrentDayDoingTasksTimelines","verticalAlign","maxWidth","whiteSpace","overflow","textOverflow","TodayWorkConatiner","getCurrentDayDoingTasks","formatDuration3","getAllDurationInDur","AppContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.afd985ea.chunk.js","sourcesContent":["\nclass Utils {\n    public static isStringEmpty(obj: any): boolean {\n        if (typeof obj === \"undefined\" || obj === null || obj === \"\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static exportContentToClipboard(content: string) {\n        let transfer = document.createElement('textarea');\n        // 不这么设置屏幕会跳，具体哪儿有问题还没确定\n        transfer.style.cssText = \"width:30%;padding:2%;min-width: 100px;opacity: 0.5;color: rgb(255, 255, 255);line-height: 18px;text-align: center;border-radius: 5px;position: fixed;top: 50%;left: 30%;z-index: 999999;background: rgb(0, 0, 0);font-size: 15px;\";\n        document.body.appendChild(transfer);\n        transfer.value = content;  // 这里表示想要复制的内容\n        transfer.focus();\n        transfer.select();\n        if (document.execCommand('copy')) {\n            document.execCommand('copy');\n        }\n        transfer.blur();\n        document.body.removeChild(transfer);\n    }\n\n    public static downloadFile(fileName: string, content: string) {\n        console.log(\"download\")\n        // 创建隐藏的可下载链接\n        var eleLink = document.createElement('a');\n        eleLink.download = fileName;\n        eleLink.style.display = 'none';\n        // 字符内容转变成blob地址\n        var blob = new Blob([content]);\n        eleLink.href = URL.createObjectURL(blob);\n        // 触发点击\n        document.body.appendChild(eleLink);\n        eleLink.click();\n        // 然后移除\n        document.body.removeChild(eleLink);\n    }\n\n    public static generateId(): number {\n        return (new Date()).getTime()\n    }\n\n    // rename currentTimpstamp\n    public static getTimestamp(): number {\n        return (new Date()).getTime()\n    }\n\n    public static match(src: string, regex: string): boolean {\n        return src.search(new RegExp(regex, 'i')) > -1\n    }\n\n    // todo 不能重载吗？\n    public static matchs(src: string, regExp: RegExp): boolean {\n        return src.search(regExp) > -1\n    }\n\n    public static getRandomColor(): string {\n        return '#' + (Math.random() * 0xffffff << 0).toString(16);\n    }\n\n    public static hasIntersection(start1: number, end1: number, start2: number, end2: number): boolean {\n\n        if (end2 < start1 || end1 < start2) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    public static removeObject(array: any[], object: any): boolean {\n        let length = this.length;\n        for (let i = 0; i < length; i++) {\n            if (array[i] === object) {\n                if (i === 0) {\n                    array.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    array.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    array.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n\n        return false\n    }\n}\n\nexport default Utils","import { Duration } from \"../model/model\";\n\nclass DateUtils {\n    private static dayMills: number = 24 * 60 * 60 * 1000\n    public static dayOffset: number = 6\n\n    // 获得今天某个小时的时间戳\n    public static getCurrentDayStamp(hour: number): number {\n        let today = new Date();\n        today.setHours(hour, 0, 0, 0);\n        return today.getTime();\n    }\n\n    // 获得某个时间戳那天某个小时的时间戳\n    public static getSomeDayStamp(someStamp: number, hour: number): number {\n        let day = new Date(someStamp)\n        day.setHours(hour, 0, 0, 0)\n        return day.getTime();\n    }\n\n    // 获得某天偏移某个小时后的dur\n    // 暂时 offsetHour 只支持 0-24 之间的数\n    public static getOffsetedDayDur(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    // 返回某个dur覆盖到的所有天的0点时间戳\n    public static getDurationCoveredDays(dur: Duration): number[]{\n        let startDay = DateUtils.getSomeDayStamp(dur.start, 0)\n        const endDay = DateUtils.getSomeDayStamp(dur.end, 0)\n        const result = []\n        result.push(startDay)\n        while (startDay < endDay) {\n            startDay += DateUtils.dayMills\n            result.push(startDay)\n        }\n        result.push(endDay)\n        return result\n    }\n\n    //-------------------- 以下业务相关 --------------------\n\n    /**\n     * 获得今天（是否当天按 dayOffset 判断） offset 某些天的 0 点时间戳\n     */\n    public static getMyCurrentDayStamp(offsetDay: number, dayOffset: number): number {\n        let now = new Date().getTime()\n        // 今天6点\n        let todayOffset = DateUtils.getCurrentDayStamp(dayOffset)\n\n        if (now > todayOffset) {\n            return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay\n        } else {\n            return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay\n        }\n    }\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 dur，这个某些天本身也 offset 6\n     */\n    public static getMyCurrentDayDur(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, DateUtils.dayOffset), DateUtils.dayOffset)\n    }\n\n    /**\n     * 获得今天（是否当天按0点判断） offset 某些天的 dur, 这个是0\n     */\n    public static getMyCurrentDayDur2(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, 0), 0)\n    }\n\n    public static isSameDay(time1: number, time2: number): boolean {\n        return new Date(time1).getDay() ===  new Date(time2).getDay()\n    }\n\n\n}\n\nexport default DateUtils","class Format {\n    public static formatTimeInMs(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + ':';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return \"[\" + Y + M + D + h + m + s + msString + \"]\";\n    }\n\n    public static formatTimeInMsToFileName(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '_';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '_';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + '_';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + '_';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + '_';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return Y + M + D + h + m + s + msString;\n    }\n\n    public static formatTimeInMinute(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\n\n        return Y + M + D + h + m;\n    }\n\n    // 时-分-秒\n    public static formatTimeInSecond(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n\n        return \"[\" + h + m + s + \"]\";\n    }\n\n    // 时-分\n    public static formatTimeInSecond3(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\n\n        return \"[\" + h + m  + \"]\";\n    }\n\n    // 日-时-分-秒\n    public static formatTimeInSecond2(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n\n        return \"[\" + D + h + m + s + \"]\";\n    }\n\n    // 年-月-日\n    public static formatTimeInDay(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return Y + M + D;\n    }\n\n    // 月-日\n    public static formatTimeInDay2(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return M + D;\n    }\n\n    public static formatDuration(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            天: Math.floor(timeMs / 86400000),\n            小时: Math.floor(timeMs / 3600000) % 24,\n            分: Math.floor(timeMs / 60000) % 60,\n            秒: Math.floor(timeMs / 1000) % 60,\n            //   毫秒: Math.floor(timeMs) % 1000\n        };\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n\n    public static formatDuration2(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            d: Math.floor(timeMs / 86400000),\n            h: Math.floor(timeMs / 3600000) % 24,\n            m: Math.floor(timeMs / 60000) % 60,\n            s: Math.floor(timeMs / 1000) % 60,\n        };\n\n        if (time.d > 0) {\n            time.m = 0\n            time.s = 0\n        }\n        if (time.h > 0) {\n            time.s = 0\n        }\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n\n    public static formatDuration3(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            时: Math.floor(timeMs / 3600000) % 24,\n            分: Math.floor(timeMs / 60000) % 60,\n        };\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n}\n\nexport default Format\n\n","import Utils from '../utils/Utils'\nimport { Type } from \"class-transformer\";\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport { Timeline } from 'antd';\n\nclass Task {\n    // todo delete 内存id增加器（因为mock初始化太快了，都在一个毫秒内）\n    private static idCounter = 0\n\n    public id: number = -1\n\n    public title: string = \"undefine\"\n\n    @Type(() => Note)\n    public note: Note = new Note()\n\n    public level: number = 3\n\n    public createTime: number = -1\n    public doneTime: number = -1\n\n    // 这两个其实独立存储的\n    public pendingDeadline: number = -1\n    public pendingReason: string = \"\"\n\n    // 可修改，最后一个有效\n    public deadlines: number[] = []\n    // 预计花费时间，单位毫秒，可修改，最后一个有效\n    public expectConsumes: number[] = []\n    // 预期开始时间，默认是createTime，可以设置成不同时间，如果在 expectStartTime 前开始任务，此时间会自动变成这个开始任务的时间（显示逻辑一致）\n    public expectStartTime: number = -1\n\n    @Type(() => AdjustConsume)\n    public adjusts: AdjustConsume[] = []\n\n    @Type(() => Duration)\n    public doingDurs: Duration[] = []\n\n    @Type(() => ChildTask)\n    public childTasks: ChildTask[] = []\n\n    public cycleId: number = -1\n\n    // 反序列化不能有带参数的构造器\n    // public constructor(title: string) {\n    //     this.title = title\n    //     this.createTime = Utils.getTimestamp()\n\n    //     this.id = Utils.generateId() + Task.idCounter\n    //     Task.idCounter = Task.idCounter + 1000\n    // }\n\n    public init(title: string) {\n        this.title = title\n        this.createTime = Utils.getTimestamp()\n        this.expectStartTime = this.createTime\n\n        this.id = Utils.generateId() + Task.idCounter\n        Task.idCounter = Task.idCounter + 1000\n    }\n\n    public adaptData() {\n        if (this.expectStartTime === -1) {\n            this.expectStartTime = this.createTime\n        }\n    }\n\n    public isSameTask(task: Task | undefined): boolean {\n        if (task === undefined) {\n            return false\n        } else {\n            return this.id === task.id\n        }\n    }\n\n    public isDoing(): boolean {\n        if (this.doingDurs.length === 0) {\n            return false\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.end === -1\n        }\n    }\n\n    public isStarted(): boolean {\n        return this.doingDurs.length !== 0\n    }\n\n    public lastStartTime(): number {\n        if (this.doingDurs.length === 0) {\n            return -1\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.start\n        }\n    }\n\n    public start() {\n        let duration = new Duration()\n        const currentTime = Utils.getTimestamp();\n        duration.init(currentTime)\n        this.doingDurs.push(duration)\n\n        if (currentTime < this.expectStartTime) {\n            this.expectStartTime = currentTime\n        }\n    }\n\n    public stop() {\n        // 避免 timeline 出现这一个先开始，下一个后结束的排序问题（同一个毫秒），这里做一个偏移\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() - 1\n    }\n\n    public stopDelay(delay: number) {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() + delay\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public isFutureTask(dur: Duration): boolean {\n        return this.expectStartTime > dur.end\n    }\n\n    public isPending(): boolean {\n        return this.pendingDeadline !== -1\n    }\n\n    public isDangerousPending(): boolean {\n        return this.isTimeDangers(this.pendingDeadline)\n    }\n\n    public isDangerousDeadline(): boolean {\n        return this.isTimeDangers(this.getActualDeadline())\n    }\n\n    public isDangerous(): boolean {\n        return this.isDangerousPending() || this.isDangerousDeadline()\n    }\n\n    /**\n     * dealine 距离还有2个小时，或者已经过了\n     */\n    private isTimeDangers(deadline: number): boolean {\n        if (deadline <= 0) {\n            return false\n        }\n\n        if (deadline - Utils.getTimestamp() <= 2 * 60 * 60 * 1000) {\n            return true\n        }\n\n        return false\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    // 返回毫秒数\n    // todo rename getAllDoingDuration\n    public getAllDuration(): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b) + this.allAdjusts()\n    }\n\n    public allAdjusts(): number {\n        if (this.adjusts.length === 0) {\n            return 0\n        }\n        return this.adjusts.map((adjust) => adjust.adjust).reduce((a, b) => a + b);\n    }\n\n    public getAllDurationInDur(limitDur: Duration): number {\n        // 完全没开始就不算了，起码点击下开始\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs\n            .map((value, index) => value.getLimitDur(index === this.doingDurs.length - 1, limitDur))\n            .reduce((a, b) => a + b)\n            + this.allDurAdjusts(limitDur)\n    }\n\n    public allDurAdjusts(limitDur: Duration): number {\n        const s = this.adjusts.filter((adjust) => limitDur.isIn(adjust.adjustTime))\n        if (s.length === 0) {\n            return 0\n        }\n        return s.map((adjust) => adjust.adjust).reduce((a, b) => a + b);\n    }\n\n    public getActualDeadline(): number {\n        if (this.deadlines.length === 0) {\n            return -1\n        }\n\n        return this.deadlines[this.deadlines.length - 1]\n    }\n\n    public isHaveDeadline(): boolean {\n        return this.getActualDeadline() > 0\n    }\n\n    public getActualExpectConsume(): number {\n        if (this.expectConsumes.length === 0) {\n            return -1\n        }\n\n        return this.expectConsumes[this.expectConsumes.length - 1]\n    }\n\n    public isExpectConsume(): boolean {\n        return this.getActualExpectConsume() > 0\n    }\n\n    // 超出预期时间返回多花的时间，负值\n    // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n    public getLeftExpectConsumeTime(): number {\n        let left = this.getActualExpectConsume() - this.getAllDuration()\n\n        // 不用打印\n        // if (left < 0) {\n        //     console.error(\"超出预期时间\")\n        // }\n\n        return left\n    }\n\n    // todo 重复代码\n    public removeTimeline(timeline: TimeLine): boolean {\n        const timelines = this.note.timeLines;\n        let length = timelines.length;\n        for (let i = 0; i < length; i++) {\n            if (timelines[i].timeStamp === timeline.timeStamp) {\n                if (i === 0) {\n                    timelines.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    timelines.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    timelines.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    // todo 重复代码\n    public removeDuration(startOrEnd: number): boolean {\n        let length = this.doingDurs.length;\n        for (let i = 0; i < length; i++) {\n            if (this.doingDurs[i].isValid(false) && (this.doingDurs[i].start === startOrEnd || this.doingDurs[i].end === startOrEnd)) {\n                if (i === 0) {\n                    this.doingDurs.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.doingDurs.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.doingDurs.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    public removeChildTask(childTask: ChildTask): boolean {\n        let length = this.childTasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.childTasks[i].createTime == childTask.createTime) {\n                if (i === 0) {\n                    this.childTasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.childTasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.childTasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    public getOrderedChildTasks(): ChildTask[] {\n        return this.childTasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 然后比较level\n                if (a.order > b.order) {\n                    return -1\n                } else if (a.order < b.order) {\n                    return 1\n                } else {\n                    // 同样 level 比较创建时间\n                    if (a.createTime > b.createTime) {\n                        return -1\n                    } else if (a.createTime < b.createTime) {\n                        return 1\n                    } else {\n                        return 0\n                    }\n                }\n            }\n        })\n    }\n}\n\nclass Duration {\n    public start: number = -1\n    public end: number = -1\n    public name: string = \"\"\n\n    // todo 没法重载\n    public init(start: number) {\n        this.start = start\n    }\n    public init2(start: number, end?: number) {\n        this.start = start\n        if (end != undefined) {\n            this.end = end\n        }\n    }\n\n    public isIn(timeStamp: number) {\n        return timeStamp >= this.start && timeStamp <= this.end\n    }\n\n    public getDur(isDoing: boolean = false): number {\n        const dur = this.getDurDur(isDoing)\n        if (dur === null) {\n            return 0\n        }\n        return dur.end - dur.start\n    }\n\n    public getDurDur(isDoing: boolean = false): Duration | null {\n        let end = this.end\n        if (end == -1 && isDoing) {\n            end = Utils.getTimestamp()\n        }\n        if (end == -1) {\n            console.error(\"这段时间未结束\")\n            return null\n        }\n        return Duration.create(this.start, end)\n    }\n\n    /**\n     * 计算跟 limitDur 的交集时长\n     */\n    public getLimitDur(isDoing: boolean, limitDur: Duration): number {\n        const dur = this.getDurDur(isDoing)?.getJoin(limitDur)\n        if (dur === null || dur === undefined) {\n            return 0\n        }\n        return dur.end - dur.start\n    }\n\n    public isValid(isDoing: boolean) {\n        if (!isDoing && this.end == -1) return false\n        return true\n    }\n\n    public static create(start?: number, end?: number, name?: string): Duration {\n        let dur = new Duration()\n        if (start != undefined) {\n            dur.start = start\n        }\n        if (end != undefined) {\n            dur.end = end\n        }\n        if (name != undefined) {\n            dur.name = name\n        }\n        return dur\n    }\n\n    public getJoin(limitDur: Duration): Duration | null {\n        if (this.end <= limitDur.start || this.start >= limitDur.end) {\n            return null\n        }\n\n        return Duration.create(Math.max(limitDur.start, this.start), Math.min(limitDur.end, this.end))\n    }\n}\n\nclass AdjustConsume {\n    // 调整耗时 单位毫秒\n    public adjust: number = -1\n    public adjustTime: number = -1\n\n    public static create(adjust: number): AdjustConsume {\n        let dur = new AdjustConsume()\n        dur.adjust = adjust\n        dur.adjustTime = Utils.getTimestamp()\n        return dur\n    }\n}\n\nclass ChildTask {\n    public name: string = \"\"\n    public createTime: number = -1\n    public doneTime: number = -1\n    public order: number = -1\n\n    public static create(name: string): ChildTask {\n        let dur = new ChildTask()\n        dur.name = name\n        dur.createTime = Utils.getTimestamp()\n        return dur\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public addOrder() {\n        return this.order++\n    }\n\n    public downOrder() {\n        return this.order--\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    public reStart() {\n        this.doneTime = -1\n    }\n}\n\nclass CycleRecord {\n    public id: number = -1\n    // 可以不断更新\n    public _startTime: number[] = []\n    // 单位天，其实不是gap，是 gap-1\n    public _gap: number[] = []\n\n    // ---- 模板\n    public title: string = \"undefine\"\n    public level: number = 3\n    public expectConsumes: number = -1\n    // ---- 模板\n\n    public init(gap: number, title: string, level: number) {\n        this.id = Utils.generateId()\n        this.title = title\n        this.level = level\n        this._gap.push(gap)\n        this._startTime.push(Utils.getTimestamp())\n    }\n\n    public getGap(): number {\n        if (this._gap.length === 0) {\n            return -1\n        }\n        return this._gap[this._gap.length - 1]\n    }\n\n    public setGap(gap: number) {\n        this._gap.push(gap)\n    }\n\n    public getStartTime(): number {\n        if (this._startTime.length === 0) {\n            return -1\n        }\n        return this._startTime[this._startTime.length - 1]\n    }\n\n    public setStartTime(startTime: number) {\n        this._startTime.push(startTime)\n    }\n\n    /**\n     * 只要 currentTimeStamp 这天 0点-24点 在 starttime + n*gap 的这天 0点-24点，就创建任务\n     * 创建的方式是找最新创建的一个任务，然后拷贝它的属性（这个有点复杂，要考虑没有最新创建任务的情况，暂时不这么实现，而是使用模板吧）\n     */\n    public isTimeToCreateTask(): boolean {\n        let currentZero = DateUtils.getCurrentDayStamp(0)\n        let startZero = DateUtils.getSomeDayStamp(this.getStartTime(), 0)\n        return (currentZero - startZero) % (this.getGap() * 24 * 3600 * 1000) === 0\n    }\n\n    /**\n     * 后来改成偏移 6小时\n     * 有点乱，直接改成0-6点不刷新吧？好像不行，应该是 0-6 点会刷新昨天的\n     */\n    public isTimeToCreateTask2(): boolean {\n        let currentZero = DateUtils.getMyCurrentDayStamp(0, DateUtils.dayOffset)\n        let startZero = DateUtils.getSomeDayStamp(this.getStartTime(), 0)\n        return (currentZero - startZero) % (this.getGap() * 24 * 3600 * 1000) === 0\n    }\n\n    public createTask(): Task {\n        const newTask = new Task()\n        newTask.init(`[周|${Format.formatTimeInDay2(DateUtils.getMyCurrentDayStamp(0, DateUtils.dayOffset))}] ${this.title}`)\n        newTask.level = this.level\n        newTask.expectConsumes.push(this.expectConsumes)\n        newTask.cycleId = this.id\n        return newTask\n    }\n}\n\nclass Note {\n    public content: string = \"\"\n\n    @Type(() => TimeLine)\n    public timeLines: TimeLine[] = []\n\n    public hasTimeLine(): boolean {\n        return this.timeLines.length !== 0\n    }\n\n    public endTimeLine(): TimeLine | null {\n        if (!this.hasTimeLine()) return null\n        return this.timeLines[this.timeLines.length - 1]\n    }\n\n    /**\n     * 在普通的timeline上合并 start end 数据\n     */\n    public getStartEndWrappedTimeLines(doingDurs: Duration[]): TimeLine[] {\n        return doingDurs.map((dur) => {\n            const lines: TimeLine[] = []\n            if (dur.start > 0) {\n                // lines.push(TimeLine.createContentNode2(\"开始任务\", dur.start))\n                lines.push(TimeLine.createStartEndAutoNode(\"└┈┈┈┘\", dur.start))\n                // lines.push(TimeLine.createContentNode2(\"┗━━━━━━━━━━━┛\", dur.start))\n                // lines.push(TimeLine.createContentNode2(\"┏━━━━━━━━━━━┓\", dur.start))\n                // lines.push(TimeLine.createContentNode2(\"┌┈┈┈┈┈┈┈┈┈┈┈┐\", dur.start))\n            }\n            if (dur.end > 0) {\n                // lines.push(TimeLine.createContentNode2(\"停下任务\", dur.end))\n                lines.push(TimeLine.createStartEndAutoNode(\"┌┈┈┈┐\", dur.end))\n            }\n            return lines\n        }).flatMap((lines) => lines).concat(this.timeLines)\n    }\n\n    public getFormartTimeLines(doingDurs: Duration[]): TimeLine[] {\n        const all = this.getStartEndWrappedTimeLines(doingDurs)\n            .filter((timeline) => !timeline.isDivder) // 旧数据适配\n            .sort((a, b) => {\n                if (a.timeStamp > b.timeStamp) {\n                    return -1\n                } else if (a.timeStamp < b.timeStamp) {\n                    return 1\n                } else {\n                    return 0\n                }\n            })\n        return TimeLine.addDivders(all)\n    }\n}\n\nclass TimeLine {\n    public timeStamp: number = -1\n    public isDivder: boolean = false\n    public content: string = \"\"\n\n    // 渲染用的中间字段\n    public title: string = \"\"\n    public isStartEndAutoGen: boolean = false\n\n    public static createContentNode(content: string): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = Utils.getTimestamp()\n        t.content = content\n        return t\n    }\n\n    public static createStartEndAutoNode(content: string, timeStamp: number): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = timeStamp\n        t.content = content\n        t.isStartEndAutoGen = true\n        return t\n    }\n\n    public static createDivNode(timeStamp: number): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = timeStamp\n        t.isDivder = true\n        return t\n    }\n\n    public getTitled(title: string): TimeLine {\n        const copy = Object.assign({}, this)\n        // copy.content = `【${title}】${copy.content}`\n        copy.title = title\n        return copy\n    }\n\n    public getKey(): number {\n        return this.timeStamp * (this.isDivder ? -1 : 1)\n    }\n\n    public static addDivders(src: TimeLine[]): TimeLine[] {\n        if (src.length === 0) return []\n\n        return DateUtils.getDurationCoveredDays(Duration.create(src[src.length - 1].timeStamp, src[0].timeStamp))\n            .map((dayStamp) => {\n                return TimeLine.createDivNode(dayStamp)\n            })\n            .concat(src)\n            .sort((a, b) => {\n                if (a.timeStamp > b.timeStamp) {\n                    return -1\n                } else if (a.timeStamp < b.timeStamp) {\n                    return 1\n                } else {\n                    return 0\n                }\n            })\n            // 去掉重复的div，这个倒叙顺序只留第一个就好\n            .filter((timeline, index, array) => {\n                if (timeline.isDivder) {\n                    if (index == 0) {\n                        // 不应该\n                        return true\n                    } else {\n                        return !array[index - 1].isDivder\n                    }\n                } else {\n                    return true\n                }\n            })\n    }\n}\n\nclass StoreModel {\n    @Type(() => Task)\n    public tasks: Task[] = []\n\n    @Type(() => CycleRecord)\n    public cycleRecords: CycleRecord[] = []\n\n    public totalAdjustConsumeTime: number = 0\n\n    /**\n     * 筛选规则：\n     * 1. 所有 未完成 且 [预期开始时间在今天endtime之前](划掉) 的任务\n     * 2. 今天完成的任务\n     */\n    public getTasks(dur: Duration, isNeedFuture: boolean = true): Task[] {\n        return this.tasks.filter((value) => {\n            if (isNeedFuture) {\n                return (!value.isDone()) || dur.isIn(value.doneTime)\n            } else {\n                return (!value.isDone() && value.expectStartTime <= dur.end) || dur.isIn(value.doneTime)\n            }\n        })\n    }\n\n    public getCurrentDayDoingTasks(dur: Duration): Task[] {\n        return this.tasks.filter((task) => {\n            return task.doingDurs.find((taskDur) => {\n                return dur.isIn(taskDur.start)\n            }) !== undefined\n        })\n    }\n\n    public addTask(task: Task): string {\n        if (this.containsProject(task.id)) return \"same id\"\n        if (this.tasks.find((t) => !t.isDone() && t.title === task.title) !== undefined) return \"same title\"\n        this.tasks.push(task)\n        return \"\"\n    }\n\n    public addCycleRecord(cycleRecord: CycleRecord) {\n        if (this.containsCycleRecord(cycleRecord.id)) return\n        this.cycleRecords.push(cycleRecord)\n    }\n\n    public invokeAddCycleTask() {\n        this.cycleRecords.forEach(record => {\n            if (record.isTimeToCreateTask2()) {\n                const isNotCreated = this.tasks.filter((task) => {\n                    const isSameId = task.cycleId === record.id\n                    const isTodayTask = DateUtils.getMyCurrentDayDur(0).isIn(task.createTime)\n                    // console.log(`isNotCreated, isSameId:${isSameId} isTodayTask:${isTodayTask}`)\n                    return isSameId && isTodayTask\n                }).length === 0\n                if (isNotCreated) {\n                    // console.log(`create cycle task, record:${record.title}`)\n                    this.addTask(record.createTask())\n                }\n            }\n        });\n    }\n\n    public removeTask(task: Task): boolean {\n        if (!this.containsProject(task.id)) return false\n\n        let length = this.tasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.tasks[i].id === task.id) {\n                if (i === 0) {\n                    this.tasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.tasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.tasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    private containsProject(id: number): boolean {\n        return this.tasks.find(item => item.id === id) !== undefined\n    }\n\n    private containsCycleRecord(id: number): boolean {\n        return this.cycleRecords.find(item => item.id === id) !== undefined\n    }\n\n    public normalUpdate(currentDay: Duration) {\n        this.invokeAddCycleTask()\n        this.orderTasks(currentDay)\n    }\n\n    // todo 应该是每次渲染的时候排序\n    public orderTasks(currentDay: Duration) {\n        this.tasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 未来的任务也放后面\n                if (a.isFutureTask(currentDay) && !b.isFutureTask(currentDay)) {\n                    return 1\n                } else if (!a.isFutureTask(currentDay) && b.isFutureTask(currentDay)) {\n                    return -1\n                } else {\n                    // 正在做的放最前\n                    if (a.isDoing()) {\n                        return -1\n                    } else if (b.isDoing()) {\n                        return 1\n                    } else {\n                        // 到时间的放前面\n                        if (a.isDangerous() && !b.isDangerous()) {\n                            return -1\n                        } else if (!a.isDangerous() && b.isDangerous()) {\n                            return 1\n                        } else {\n                            // 然后比较level\n                            if (a.level > b.level) {\n                                return 1\n                            } else if (a.level < b.level) {\n                                return -1\n                            } else {\n                                // 同样 level 比较创建时间\n                                if (a.createTime > b.createTime) {\n                                    return -1\n                                } else if (a.createTime < b.createTime) {\n                                    return 1\n                                } else {\n                                    return 0\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        })\n    }\n}\n\n\nexport { Task, Duration, StoreModel, AdjustConsume, Note, CycleRecord, TimeLine, ChildTask }","import { Task, Duration, StoreModel } from '../model/model'\nimport Utils from '../utils/Utils';\nimport stores from '../stores';\nimport 'reflect-metadata'\nimport '../../node_modules/reflect-metadata/Reflect.js'\nimport { plainToClass } from \"class-transformer\";\n\n\nconst STORAGE_KEY = 'DoingList3'\nconst storage = {\n    isDebug: false,\n    fetch: function (): StoreModel {\n        if (this.isDebug) {\n            return this._getMockStoreModel()\n        }\n\n        let result = new StoreModel()\n\n        let storageJson = localStorage.getItem(STORAGE_KEY)\n        if (storageJson != null) {\n            result = plainToClass(StoreModel, JSON.parse(storageJson))\n            result.tasks.forEach((task) => {task.adaptData()})\n            return result\n        }\n        \n        return result\n    },\n\n    save: function (storeModel: StoreModel) {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(storeModel))\n    },\n\n    _getMockStoreModel(): StoreModel {\n        let result = new StoreModel()\n\n        for (let index = 0; index < 12; index++) {\n            const newLocal = new Task();\n        newLocal.init(\"我的第 \" + index + \" 个任务\")\n            result.addTask(newLocal)\n        }\n\n        return result\n    },\n}\n\nconst model = {\n    storeModel: storage.fetch(),\n\n    save() {\n        storage.save(this.storeModel)\n    },\n\n    setModel(model: StoreModel) {\n        this.storeModel = model\n        this.save()\n    },\n};\n\nexport default model","import { Task } from '../model/model'\n\nconst CurrentTaskKey = \"CurrentTaskKey\"\n\nconst currentTaskStore = {\n    currentTask: undefined as Task|undefined,\n\n    setCurrentTask(task: Task|undefined) {\n        this.currentTask = task\n    },\n};\n\nexport {CurrentTaskKey, currentTaskStore}","import { Task } from '../model/model'\n\nconst CurrentDoingTaskKey = \"CurrentDoingTaskKey\"\n\nconst currentDoingTaskStore = {\n    currentDoingTask: undefined as Task|undefined,\n\n    setCurrentDoingTask(task: Task| undefined) {\n        this.currentDoingTask = task\n    },\n};\n\nexport {CurrentDoingTaskKey, currentDoingTaskStore}","import mainmodel from './MainStore';\nimport Store from '@ice/store';\n\nimport { CurrentTaskKey, currentTaskStore } from './CurrentTaskStore';\nimport { CurrentDoingTaskKey, currentDoingTaskStore } from './CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey, currentDayOffsetStore } from './CurrentDayOffsetStore';\nimport { SearchModeStoreKey, SearchModeStore } from './SearchModeStore';\nimport { SearchTextStoreKey, SearchTextStore } from './SearchTextStore';\n\nconst storeManager = new Store();\n//  *（@@@？todo 使用常量 mainmodel？）* \nstoreManager.registerStore('mainmodel', mainmodel);\nstoreManager.registerStore(CurrentTaskKey, currentTaskStore);\nstoreManager.registerStore(CurrentDoingTaskKey, currentDoingTaskStore);\nstoreManager.registerStore(CurrentDayOffsetKey, currentDayOffsetStore);\nstoreManager.registerStore(SearchTextStoreKey, SearchTextStore);\nstoreManager.registerStore(SearchModeStoreKey, SearchModeStore);\n\nexport default storeManager;","\nconst CurrentDayOffsetKey = \"CurrentDayOffsetKey\"\n\nconst currentDayOffsetStore = {\n    currentDayOffset: 0,\n\n    setCurrentDayOffset(offset: number) {\n        this.currentDayOffset = offset\n    },\n};\n\nexport {CurrentDayOffsetKey, currentDayOffsetStore}","\nconst SearchTextStoreKey = \"SearchTextStoreKey\"\n\nconst SearchTextStore = {\n    searchText: \"\",\n\n    setSearchText(searchText: string) {\n        this.searchText = searchText\n    },\n};\n\nexport {SearchTextStoreKey, SearchTextStore}","\nconst SearchModeStoreKey = \"SearchModeStoreKey\"\n\nconst SearchModeStore = {\n    isSearchMode: false,\n\n    setSearchMode(isSearchMode: boolean) {\n        this.isSearchMode = isSearchMode\n    },\n};\n\nexport {SearchModeStoreKey, SearchModeStore}","import { Task } from '../model/model'\nimport Format from '../utils/Format'\nimport Utils from '../utils/Utils'\n\nclass TaskInfoFormat {\n\n    public static getDoingStatusTips(task: Task): string {\n        if (task.isDoing()) {\n            return \"Doing 🔴\"\n            // ⛑🏃‍♀️🧠 🏄‍♂️ 🌟 🔴\n        } else {\n            return \"\"\n        }\n    }\n\n    public static getConsumed(task: Task): string {\n        let time = Format.formatDuration2(task.getAllDuration());\n        if (Utils.isStringEmpty(time)) {\n            return \"\"\n        }\n        return `进行${time}(${task.doingDurs.length}次) `\n    }\n\n    public static getDeadline(task: Task): string {\n        const pendingStatus = TaskInfoFormat.getPendingStatus(task)\n        if (Utils.isStringEmpty(pendingStatus)) {\n            return TaskInfoFormat.getDeadlineStatus(task)\n        } else {\n            return pendingStatus\n        }\n    }\n\n    private static getDeadlineStatus(task: Task): string {\n        let deadline = task.getActualDeadline()\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Dead超期❗ `\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Dead剩余${time} `\n    }\n\n    // todo 合并重复函数\n    private static getPendingStatus(task: Task): string {\n        let deadline = task.pendingDeadline\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Pend超期(${task.pendingReason})❗`\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Pend剩余${time} `\n    }\n\n    public static getConsumeExpected(task: Task): string {\n        if (task.getActualExpectConsume() <= 0) {\n            return \"\"\n        }\n\n        let left = task.getLeftExpectConsumeTime()\n        if (left <= 0) {\n            return `多用${Format.formatDuration2(-left)} `\n        } else {\n            return `还要${Format.formatDuration2(left)} `\n        }\n    }\n\n    public static getStartExpected(task: Task): string {\n        const currentTime = Utils.getTimestamp()\n        if (currentTime > task.expectStartTime) {\n            return \"\"\n        }\n\n        return `还有${Format.formatDuration2(task.expectStartTime - currentTime)}开始`\n    }\n}\n\nexport default TaskInfoFormat","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, Row, Col, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\n// 这样居然真的行\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport stores from '../stores';\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { Task, Note, CycleRecord } from '../model/model'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport { SearchModeStoreKey } from '../stores/SearchModeStore';\nimport { SearchTextStoreKey } from '../stores/SearchTextStore';\nimport 'antd/dist/antd.css';\nimport { plainToClass } from \"class-transformer\";\nimport moment from 'moment'\n\nconst Container = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst ParamTag = styled.span`\n  width:100px;\n  display:inline-block;\n  text-align:center;\n`\n\nconst Container2 = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  overflow:auto;\n  /* height: 800px; */\n  /* height: 83vh; */\n  margin-top:10px;\n\n  /* flex: 0 1 auto 居然效果一样 */\n  flex: 1 1 auto;\n`\n\nconst InputGroup = styled(Input.Group)`\nmargin: 1%;\n`\nconst ButtonGroup = styled(Button.Group)`\nmargin: 1%;\n`\n\nconst AlertTips = styled.span`\n padding: 4px;\nbackground-color: ${(props: { isDangerous: boolean }) => {\n    if (props.isDangerous) {\n      return '#ff0000'\n    } else {\n      return '#ffffff'\n    }\n  }\n  };\ncolor: ${(props: { isDangerous: boolean }) => {\n    if (props.isDangerous) {\n      return '#ffff00'\n    } else {\n      return '#000000aa'\n    }\n  }\n  };\n  font-weight: ${(props: { isDangerous: boolean }) => {\n    if (props.isDangerous) {\n      return 'bold'\n    } else {\n      return 'normal'\n    }\n  }\n  };\n`\n\nconst TaskListContainer: React.FC = () => {\n  const { storeModel, save, setModel } = stores.useStore('mainmodel') as { storeModel: StoreModel, save: () => void, setModel: (storeModel: StoreModel) => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n  const { isSearchMode, setSearchMode } = stores.useStore(SearchModeStoreKey) as { isSearchMode: boolean, setSearchMode: (isSearchMode: boolean) => void }\n  const { searchText, setSearchText } = stores.useStore(SearchTextStoreKey) as { searchText: string, setSearchText: (searchText: string) => void }\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task|undefined) => void }\n\n  const [title, setTitle] = useState(\"\");\n  const [searchTextUI, setSearchTextUI] = useState(\"\");\n\n  const [isNeedExceptTime, setNeedExceptTimeUI] = useState(true);\n  const [expectTime, setExpectTime] = useState(2);\n\n  const [level, setLevel] = useState(3);\n\n  const [isCycleTask, setCycleTaskUI] = useState(false);\n  const [cycleGap, setCycleGap] = useState(1);\n\n  const [isLongTask, setLongTaskUI] = useState(false);\n  const [exceptWorkday, setExceptWorkday] = useState(3);\n  const [exceptHoliDay, setExceptHoliDay] = useState(1);\n\n  const [isStartNow, setStartNow] = useState(true);\n  const [expectStartTime, setExpectStartTime] = useState<any>(null);\n\n  // React.useEffect(() => {\n  //   console.log(\"TaskListContainer useEffect\")\n  // },[])\n\n  function setNeedExceptTime(isNeedExceptTime: boolean) {\n    if (!isNeedExceptTime && isLongTask) {\n      message.error(\"长任务必须估时\")\n      return\n    }\n\n    setNeedExceptTimeUI(isNeedExceptTime)\n  }\n\n  function setCycleTask(isCycleTask: boolean) {\n    if (isCycleTask) {\n      setLongTask(false)\n    }\n\n    setCycleTaskUI(isCycleTask)\n  }\n\n  function setLongTask(isLongTask: boolean) {\n    if (isLongTask) {\n      setNeedExceptTime(true)\n      setCycleTask(false)\n    }\n\n    setLongTaskUI(isLongTask)\n  }\n\n  function onAddTask(event: any) {\n    event.preventDefault();\n\n    if (Utils.isStringEmpty(title)) {\n      message.error(\"请输入内容\")\n      return\n    }\n    if (isLongTask && isCycleTask) {\n      message.error(\"不能同时是长任务和周期任务\")\n      return\n    }\n\n    if (isCycleTask) {\n      const newRecord = new CycleRecord()\n      newRecord.init(cycleGap, title, level)\n\n      if (!isStartNow && expectStartTime !== null) {\n        newRecord.setStartTime(expectStartTime.valueOf())\n      }\n\n      if (isNeedExceptTime) {\n        newRecord.expectConsumes = expectTime * 3600 * 1000 // 单位小时，转换\n      } else {\n        newRecord.expectConsumes = -1 // 表示不设置时间\n      }\n\n      storeModel.addCycleRecord(newRecord)\n      storeModel.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    } else {\n      const newTask = new Task()\n      newTask.init(title)\n      newTask.level = level\n\n      if (!isStartNow && expectStartTime !== null) {\n        newTask.expectStartTime = expectStartTime.valueOf()\n      }\n\n      if (isNeedExceptTime) {\n        newTask.expectConsumes.push(expectTime * 3600 * 1000) // 单位小时，转换\n      } else {\n        newTask.expectConsumes.push(-1) // 表示不设置时间\n      }\n\n      const addResult = storeModel.addTask(newTask)\n      if (!Utils.isStringEmpty(addResult)) {\n        message.error(`添加失败 ${addResult}`)\n        return\n      }\n\n      storeModel.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    }\n\n    save()\n\n    setTitle(\"\")\n    setExpectStartTime(null)\n  }\n\n  function changeOffsetDay(isAdd: boolean) {\n    if (isAdd) {\n      setCurrentDayOffset(currentDayOffset + 1)\n    } else {\n      setCurrentDayOffset(currentDayOffset - 1)\n    }\n  }\n\n  function download() {\n    Utils.downloadFile(`DoingList_${Format.formatTimeInMsToFileName(Utils.getTimestamp())}.dl`, JSON.stringify(storeModel))\n  }\n\n  function upload(e: any) {\n    let file = e.target.files[0];\n    console.log(file)\n\n    let reader = new FileReader();\n    reader.onload = function (this) {\n      let uploadContent = this.result\n      if (typeof uploadContent === 'string') {\n        Modal.confirm({\n          title: '确定要导入嘛？',\n          content: `导入会覆盖当前所有任务`,\n          onOk() {\n            Modal.confirm({\n              title: '是否需要先下载当前任务？',\n              content: ``,\n              onOk() {\n                download()\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              },\n              onCancel() {\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              }\n            });\n          },\n        })\n      } else {\n        message.error(\"导入文件有问题，导入失败\")\n      }\n    }\n    //读取文件内容\n    reader.readAsText(file);\n  }\n\n  function getOffsetString() {\n    let base = \"\" + currentDayOffset\n    if (currentDayOffset > 0) {\n      base = \"+\" + base\n    }\n    return base\n  }\n\n  function getAllTaskStatus(): string {\n    let notDoneTasks = storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset), false).filter((task) => { return !task.isDone() })\n\n    if (notDoneTasks.length === 0) {\n      return \"\"\n    }\n\n    let consumeFormat = \"\"\n    let consumes: number = notDoneTasks.map((task) => {\n      let left = task.getLeftExpectConsumeTime()\n      if (left < 0) return 0\n      return left\n    }).reduce((a, b) => a + b)\n\n    // console.log(\"getAllTaskStatus\" + consumes)\n    if (consumes > 0) {\n      consumeFormat = `，总剩余预估需要花费${Format.formatDuration(consumes)}`\n    }\n\n    return `共${notDoneTasks.length}个任务未完成${consumeFormat}`\n  }\n\n  function getMenu(): React.ReactElement {\n    return (\n      <Menu onClick={(param) => setLevel(Number(param.key))}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n\n  function search() {\n    setSearchText(searchTextUI)\n  }\n\n  function switchSearchMode(isSearchModeLocal: boolean){\n    setCurrentTask(undefined)\n    setSearchMode(isSearchModeLocal)\n  }\n\n  return (\n    <Container>\n\n      <Div style={{ flex: \"0 1 auto\" }}>\n        <ButtonGroup>\n          <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(false)}>←</Button>\n\n          <span style={{ backgroundColor: \"#ffffff\", padding: 4 }} >\n            {Format.formatTimeInDay(DateUtils.getMyCurrentDayStamp(currentDayOffset, DateUtils.dayOffset))}({getOffsetString()})\n        </span>\n\n          <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(true)}>→</Button>\n          <span style={{ paddingLeft: 10 }} ></span>\n          <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导出</Button>\n          <input style={{ width: \"100px\", marginRight: \"20px\" }} type=\"file\" id=\"upload-file\" multiple onChange={(event) => upload(event)} />\n          {/* <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导入</Button> */}\n\n          {/* <span style={{ backgroundColor: \"#ffffff\", padding: 4 }} >\n            需平衡时间：{-storeModel.totalAdjustConsumeTime / (3600 * 1000)}h\n        </span> */}\n\n          <AlertTips isDangerous={storeModel.totalAdjustConsumeTime !== 0}>\n            需平衡时间：{-storeModel.totalAdjustConsumeTime / (3600 * 1000)}h\n        </AlertTips>\n\n          <Switch style={{ marginLeft: '10px', marginRight: '3px' }} checkedChildren=\"Search\" unCheckedChildren=\"Normal\" checked={isSearchMode} onChange={(event) => switchSearchMode(event)} />\n\n        </ButtonGroup>\n\n        {\n          !isSearchMode &&\n          <div>\n            <Row align=\"middle\" style={{ margin: \"10px\" }}>\n              <Col flex=\"1 1 auto\">\n                <Input placeholder=\"输入任务，回车添加\" value={title} onChange={(event) => setTitle(event.target.value)} onPressEnter={onAddTask} />\n              </Col>\n              <Col flex=\"0 1 auto\">\n\n                <Dropdown overlay={getMenu()}>\n                  <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                    {formartLevel(level)} <DownOutlined />\n                  </a>\n                </Dropdown>\n\n                {isNeedExceptTime &&\n                  <Input style={{ width: '100px', marginLeft: \"15px\" }} value={expectTime} placeholder=\"花费时间\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} />\n                }\n\n                <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isNeedExceptTime} onChange={(event) => setNeedExceptTime(event)} />\n\n                <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"立刻开始\" unCheckedChildren=\"之后开始\" checked={isStartNow} onChange={(event) => setStartNow(event)} />\n\n                {/* 长任务、短任务 */}\n                {/* <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"长\" unCheckedChildren=\"短\" checked={isLongTask} onChange={(event) => setLongTask(event)} /> */}\n\n                <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"周期\" unCheckedChildren=\"单个\" checked={isCycleTask} onChange={(event) => setCycleTask(event)} />\n\n              </Col>\n            </Row>\n\n            <Div style={{ margin: \"10px\", color: \"#ffffff\" }}>\n\n              {!isStartNow &&\n                <span style={{ marginLeft: \"15px\" }} >开始时间：\n        <DatePicker showTime value={expectStartTime} onOk={value => setExpectStartTime(moment(value.valueOf()))} /></span>\n              }\n\n              {isLongTask &&\n                <span style={{ marginLeft: \"15px\" }} >长任务：\n        <Input style={{ width: '100px' }} value={exceptWorkday} prefix=\"计划\" suffix=\"天\" onChange={(event) => setExceptWorkday(Number(event.target.value))} />\n                  <Input style={{ width: '100px' }} value={exceptHoliDay} prefix=\"假期\" suffix=\"天\" onChange={(event) => setExceptHoliDay(Number(event.target.value))} />\n                </span>\n              }\n\n              {isCycleTask &&\n                <Input style={{ width: '100px', marginLeft: \"15px\" }} value={cycleGap} placeholder=\"1表示不间隔\" prefix=\"每\" suffix=\"天\" onChange={(event) => setCycleGap(Number(event.target.value))} />\n              }\n\n            </Div>\n\n            <span style={{ backgroundColor: \"#ffffff\", padding: 2, margin: \"10px\" }} >\n              {getAllTaskStatus()}\n            </span>\n          </div>\n        }\n\n        {isSearchMode &&\n          <div style={{ marginLeft: '10px', marginRight: '10px' }}>\n            <Input placeholder=\"回车进行搜索\" value={searchTextUI} onChange={(event) => setSearchTextUI(event.target.value)} onPressEnter={search}/>\n          </div>\n        }\n\n\n      </Div>\n\n      <NoteList />\n    </Container>\n  );\n}\n\n\nconst NoteItem = styled.div`\n:hover{\n\t/* background-color:#b4e7fc; */\n  background-color: ${(props: { choosed: boolean, isDone: boolean, isFuture: boolean, level: number }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean, isDone: boolean, isFuture: boolean, level: number }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      switch (props.level) {\n        case 1:\n          return '#fdf0ee'\n        case 2:\n          return '#fdfcee'\n        case 3:\n          return '#eefdfc'\n        case 4:\n          return '#eefdef'\n        default:\n          return '#ffffff'\n      }\n    }\n  }\n  };\nopacity : ${(props: { choosed: boolean, isDone: boolean, isFuture: boolean, level: number }) => {\n    if (props.isDone) {\n      return 0.1\n    } else if (props.isFuture) { // todo 之后再考虑这个 future UI怎么优化下\n      return 0.5\n    } else {\n      return 1\n    }\n  }\n  };\n`\nconst NoteList: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task|undefined) => void }\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n  const { isSearchMode, setSearchMode } = stores.useStore(SearchModeStoreKey) as { isSearchMode: boolean, setSearchMode: (isSearchMode: boolean) => void }\n  const { searchText, setSearchText } = stores.useStore(SearchTextStoreKey) as { searchText: string, setSearchText: (searchText: string) => void }\n\n  useEffect(() => {\n    // console.log(\"NoteList useEffect\")\n\n    if (currentDoingTask === undefined) {\n      let doingTasks = storeModel.tasks.filter((value) => { return value.isDoing() })\n\n      if (doingTasks.length === 0) {\n        return\n      }\n\n      if (doingTasks.length > 1) {\n        console.error(`有 ${doingTasks.length} 个任务在运行中，自动关闭`)\n\n        for (let i = 1; i < doingTasks.length; i++) {\n          doingTasks[i].stop()\n        }\n      }\n\n      setCurrentDoingTask(doingTasks[0])\n    }\n  });\n\n  function onChooseNote(event: any, note: Task) {\n    event.preventDefault()\n    setCurrentTask(note)\n  }\n\n  const onClickMenu = (param: ClickParam, task: Task) => {\n    task.level = Number(param.key)\n\n    storeModel.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    save()\n\n    param.domEvent.preventDefault()\n\n    // 怎么阻止对 parent 的点击事件\n    // param.domEvent.stopPropagation()\n  };\n\n  function getMenu(task: Task): React.ReactElement {\n    return (\n      <Menu onClick={(param) => onClickMenu(param, task)}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n\n  function startTask(event: any, task: Task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n      return\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop()\n    }\n\n    task.start()\n    setCurrentDoingTask(task)\n    storeModel.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    save()\n  }\n\n  function getShowTips(task: Task): string {\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  function getTasks(): Task[] {\n    if (isSearchMode) {\n      if(Utils.isStringEmpty(searchText)){\n        return []\n      }\n      return storeModel.tasks.filter((task) => {\n        return task.title.indexOf(searchText) !== -1 || task.childTasks.find((childTask) => childTask.name.indexOf(searchText) !== -1) !== undefined\n      })\n    } else {\n      return storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    }\n  }\n\n  return (\n    <Container2>\n      <List\n        size=\"small\"\n        style={{ backgroundColor: 'white', margin: \"1%\" }}\n        bordered\n        dataSource={getTasks()}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => onChooseNote(e, task)} isDone={task.isDone()} isFuture={task.isFutureTask(DateUtils.getMyCurrentDayDur(currentDayOffset))} onDoubleClick={(e) => startTask(e, task)} level={task.level}>\n\n            <Row align=\"middle\">\n              <Col flex=\"1 1 auto\">\n                <NoteItemInput key={task.id} task={task} />\n              </Col>\n              <Col flex=\"0 1 auto\" style={{ backgroundColor: \"rgb(226, 226, 226)\" }}>\n\n                <span style={{ paddingLeft: \"5px\" }}>\n                  {getShowTips(task)}\n                </span>\n\n                <Dropdown overlay={getMenu(task)}>\n                  <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                    {formartLevel(task.level)} <DownOutlined />\n                  </a>\n                </Dropdown>\n\n                <Button style={{ marginLeft: \"5px\", marginRight: \"2px\" }} size=\"small\" onClick={(e) => startTask(e, task)}>Start</Button>\n\n              </Col>\n            </Row>\n\n          </NoteItem>\n        )}\n      />\n    </Container2>\n  );\n}\n\nfunction formartLevel(level: number): string {\n  switch (level) {\n    case 1:\n      return \"🌟\"\n    case 2:\n      return \"🎏\"\n    case 3:\n      return \"3️⃣\"\n    case 4:\n      return \"4️\"\n    case 5:\n      return \"5️\"\n    default:\n      return \"\"\n  }\n\n  // switch (level) {\n  //   case 1:\n  //     return \"🥇\"\n  //   case 2:\n  //     return \"🥈\"\n  //   case 3:\n  //     return \"🥉\"\n  //   case 4:\n  //     return \"4️⃣\"\n  //   case 5:\n  //     return \"5️\"\n  //   default:\n  //     return \"\"\n  // }\n}\n\ninterface NoteItemInputProps {\n  task: Task;\n}\n\nconst NoteItemInput: React.FC<NoteItemInputProps> = (props) => {\n  const [content, setContent] = useState(props.task.title)\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n\n  function saveTaskTitle(event: any) {\n    props.task.title = content\n    save()\n  }\n\n  return (\n    <Input style={{ background: \"#ffffff70\", fontWeight: \"bold\" }} value={content} onChange={(e) => setContent(e.target.value)} onBlur={saveTaskTitle} />\n  );\n}\n\nexport default TaskListContainer;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, List, Row, Col, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration, TimeLine, AdjustConsume, ChildTask } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport MomentUtils from '../utils/MomentUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n\n  const [content, setContent] = useState(\"\")\n  const [timeline, setTimeline] = useState(\"\")\n  const [childTaskInput, setChildTaskInput] = useState(\"\")\n  \n  const [isExpectConsume, setExpectConsumeUI] = useState(false);\n  const [expectTime, setExpectTime] = useState(-1);\n\n  const [newAdjustTime, setNewAdjustTime] = useState(\"\");\n\n  const [isHaveDeadline, setHaveDeadlineUI] = useState(false);\n  const [deadline, setDeadlineUI] = useState<any>(null);\n\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState<any>(null);\n\n  const [hoverTimeline, setHoverTimeline] = useState<TimeLine|null>(null);\n  const [hoverTask, setHoverTask] = useState<ChildTask|null>(null);\n\n  const [expectStartTime, setExpectStartTimeUI] = useState<any>(null);\n\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      // todo 这部分逻辑抽出去\n      const expectTime = currentTask.getActualExpectConsume()\n      if (expectTime < 0) {\n        setExpectTime(expectTime)\n        setExpectConsume(false)\n      } else {\n        setExpectConsume(true)\n        setExpectTime(expectTime / (3600 * 1000))\n      }\n\n      setNewAdjustTime(\"\")\n\n      setPendingUI(currentTask.isPending())\n      setPendingReason(currentTask.pendingReason)\n      setPendingTimeUI(getPendingDeadlineTime(currentTask))\n\n      setDeadlineUI(getDeadlineTime(currentTask))\n      setHaveDeadline(currentTask.isHaveDeadline())\n\n      if (currentTask !== undefined && !currentTask.isStarted()) {\n        setExpectStartTimeUI(moment(currentTask.expectStartTime))\n      } else {\n        setExpectStartTimeUI(null)\n      }\n\n      // todo 优化，别在这刷新1\n      storeModel.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    const undoneChildTask = task.childTasks.find((task) => !task.isDone())\n    if (undoneChildTask !== undefined) {\n      message.error(`有子任务未完成:${undoneChildTask.name}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    setDeadlineUI(getDeadlineTime(currentTask))\n    save()\n  }\n\n  function getDeadlineTime(task: Task): any {\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task) + TaskInfoFormat.getStartExpected(task)\n    return result\n  }\n\n  function setAdjustTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    const newAdjustTimeHours = Number(newAdjustTime)\n    if (newAdjustTimeHours === 0 || newAdjustTimeHours === NaN) {\n      message.error(`请输入合法数字`)\n      return\n    }\n\n    const newAdjustTimeMills = newAdjustTimeHours * 3600 * 1000\n\n    if (newAdjustTimeMills + task.getAllDuration() < 0) {\n      message.error(`调整时间超过已消耗时间`)\n      return\n    }\n\n    task.adjusts.push(AdjustConsume.create(newAdjustTimeMills))\n    storeModel.totalAdjustConsumeTime += newAdjustTimeMills\n\n    let msg = \"\"\n    if (newAdjustTimeHours > 0) {\n      msg = `增加 ${newAdjustTimeHours} `\n    } else {\n      msg = `减少 ${-newAdjustTimeHours} `\n    }\n    message.success(`耗时已${msg}小时`)\n\n    setNewAdjustTime(\"\")\n\n    save()\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000)\n    }\n\n    save()\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onChoosePendingDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`)\n      return\n    }\n\n    const pendingLine = value.valueOf()\n    if (!isTimeValid(pendingLine, \"Pending时间\", Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    task.pendingDeadline = pendingLine\n    setPendingTimeUI(getPendingDeadlineTime(task))\n    save()\n  }\n\n  function onChangeExpectStartTime(value: any, task: Task) {\n    const expectStartTime = value.valueOf()\n\n    if (!isTimeValid(expectStartTime, \"预期开始时间\", Duration.create(undefined, task.pendingDeadline, \"PendLine\"), Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    setExpectStartTimeUI(moment(expectStartTime))\n    task.expectStartTime = expectStartTime\n    save()\n  }\n\n  function isTimeValid(time: number, timeName: string, ...limitDurations: Duration[]): boolean {\n    let isValid = true\n    for (let index = 0; index < limitDurations.length; index++) {\n      const dur = limitDurations[index];\n      if (dur.start > 0 && time < dur.start) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})早于${dur.start}(${Format.formatTimeInMinute(dur.start)})，请重新设置`)\n        isValid = false\n      } else if (dur.end > 0 && time > dur.end) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})晚于${dur.end}(${Format.formatTimeInMinute(dur.end)})，请重新设置`)\n        isValid = false\n      }\n      if (!isValid) {\n        return false\n      }\n    }\n    return true\n  }\n\n  function getPendingDeadlineTime(task: Task): any {\n    const deadline = task.pendingDeadline\n\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    task.pendingReason = pendingReason\n    save()\n  }\n\n  function setPending(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1\n      setPendingTimeUI(null)\n      save()\n    }\n    setPendingUI(pendingStatus)\n  }\n\n  function setExpectConsume(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      task.expectConsumes.push(-1)\n      setExpectTime(-1)\n      save()\n    }\n    setExpectConsumeUI(pendingStatus)\n  }\n\n  function setHaveDeadline(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      task.deadlines.push(-1)\n      setDeadlineUI(null)\n      save()\n    }\n    setHaveDeadlineUI(pendingStatus)\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onDeleteTimeline(task: Task, timeline: TimeLine) {\n    // 区分自动生成的开始结束\n    if (timeline.isStartEndAutoGen) {\n      Modal.confirm({\n        title: '确定要删除此 Dur 吗？',\n        content: `是否删除此 Dur，这意味着消耗时间也会重新计算，将不可恢复，请仔细确认`,\n        onOk() {\n          if (task.removeDuration(timeline.timeStamp)) {\n            message.success(\"删除 Dur 成功\")\n            save()\n          } else {\n            message.error(\"删除 Dur 失败\")\n          }\n        },\n      });\n    } else {\n      Modal.confirm({\n        title: '确定要删除此 TimeLine 吗？',\n        content: `是否删除 ${timeline.content}，将不可恢复`,\n        onOk() {\n          if (task.removeTimeline(timeline)) {\n            message.success(\"删除TimeLine成功\")\n            save()\n          } else {\n            message.error(\"删除TimeLine失败\")\n          }\n        },\n      });\n    }\n  }\n\n  function onAddTimeline(event: any) {\n    event.preventDefault();\n\n    if (currentTask === undefined) return\n\n    if (Utils.isStringEmpty(timeline)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    // const endTimeline = currentTask.note.endTimeLine();\n    // if (endTimeline == null || !DateUtils.isSameDay(endTimeline.timeStamp, Utils.getTimestamp())) {\n    // currentTask.note.timeLines.push(TimeLine.createDivNode())\n    // }\n\n    currentTask.note.timeLines.push(TimeLine.createContentNode(timeline))\n\n    save()\n\n    setTimeline(\"\")\n  }\n\n  function onAddChildTask(task: Task) {\n    if (Utils.isStringEmpty(childTaskInput)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    task.childTasks.push(ChildTask.create(childTaskInput))\n\n    save()\n\n    setChildTaskInput(\"\")\n  }\n\n\n  /* ---------------------------------------------------------- */\n\n  function onDeleteChildTask(task: Task, childTask: ChildTask) {\n    Modal.confirm({\n      title: '确定要删除此 ChildTask 吗？',\n      content: `是否删除 ChildTask: ${childTask.name}，将不可恢复，请仔细确认`,\n      onOk() {\n        if (task.removeChildTask(childTask)) {\n          message.success(\"删除 ChildTask 成功\")\n          save()\n        } else {\n          message.error(\"删除 ChildTask 失败\")\n        }\n      },\n    });\n  }\n\n  function onDoneChildTask(task: Task, childTask: ChildTask) {\n    if (childTask.isDone()) {\n      childTask.reStart()\n      message.success(\"任务已重新开始\")\n    } else {\n      childTask.done()\n      message.success(\"任务已完成\")\n    }\n    save()\n  }\n\n  function onOrderChildTask(task: Task, childTask: ChildTask, isAdd: boolean) {\n    if (isAdd) {\n      childTask.addOrder()\n    } else {\n      childTask.downOrder()\n    }\n    save()\n  }\n\n  /* ---------------------------------------------------------- */\n\n  const TimeLinesContainer = styled.div`\n  height: 250px;\noverflow-y: scroll;\nmargin-left:5px;\n/* margin-top:1px; */\nmargin-bottom:5px;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n/* background-color:rgb(227, 233, 231); */\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\n\n  const ChildTaskItem = styled.div`\npadding-top:1px;\npadding-bottom:1px;\npadding-left:2px;\npadding-right:2px;\n:hover{\nbackground-color: #ffcdc5;\n};\nbackground-color:#fdf0ee;\nfont-size:14px;\n\nopacity : ${(props: { isDone: boolean }) => {\n      if (props.isDone) {\n        return 0.15\n      } else {\n        return 1\n      }\n    }\n    };\n`\n\n  const NoteItem = styled.div`\n    padding-top:1px;\n    padding-bottom:1px;\n    padding-left:2px;\n    padding-right:2px;\n    :hover{\n  background-color: #a2e3cd;\n  };\n  background-color:#e3e9e7;\n    font-size:12px;\n  `\n\n  const DeleteBtn = styled.span`\n  padding-left:4px;\n  padding-right:4px;\n  margin-left:2px;\n  margin-right:2px;\n  color:#fff;\n  :hover{\n    background-color: #02472f;\n    opacity:1;\n    };\n    background-color:#00b477;\n    opacity : ${(props: { isHover: boolean }) => {\n      if (props.isHover) {\n        return 1\n      } else {\n        return 0.05\n      }\n    }\n    };\n`\n\n  const ChildTaskBtn = styled(DeleteBtn)`\n  padding-left:2px;\n  padding-right:2px;\n  margin-left:1px;\n  margin-right:1px;\n  :hover{\n    background-color: #901401;\n    opacity:1;\n    };\n    background-color:#fd7560;\n    opacity : ${(props: { isHover: boolean }) => {\n      if (props.isHover) {\n        return 1\n      } else {\n        return 0.05\n      }\n    }\n    };\n`\n\n  /* ---------------------------------------------------------- */\n\n  if (currentTask === undefined) return (<Div></Div>)\n\n  return (\n    <Container >\n      {/* 不加这个 div 会换行 */}\n      {currentTask !== undefined &&\n        <Div style={{ margin: \"5px\" }}>\n          <ButtonGroup>\n            {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n            <Button onClick={(e) => deleteTask(e)}>D</Button>\n            {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n            <Button onClick={(e) => doneTask(e)}>Done</Button>\n          </ButtonGroup>\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isExpectConsume} onChange={(event) => setExpectConsume(event)} />\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"截止时间\" unCheckedChildren=\"没有截止\" checked={isHaveDeadline} onChange={(event) => setHaveDeadline(event)} />\n\n          <Switch style={{ marginLeft: '9px', marginRight: '5px' }} checkedChildren=\"Pending\" unCheckedChildren=\"NoPend\" checked={isPending} onChange={(event) => setPending(event)} />\n\n        </Div>\n      }\n\n      <div style={{ marginLeft: \"15px\", marginRight: \"15px\", fontWeight: \"bold\" }} >{getShowTips()}</div>\n\n\n      {currentTask !== undefined &&\n        <Div style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n          {expectStartTime !== null &&\n            <span style={{ marginLeft: \"15px\" }} >预期开始时间：\n          <DatePicker showTime value={expectStartTime} onOk={value => onChangeExpectStartTime(value, currentTask)} />\n            </span>\n          }\n\n          {currentTask.isStarted() &&\n            <Input style={{ marginLeft: \"15px\", width: '150px' }} value={newAdjustTime} placeholder={`${currentTask.allAdjusts() / (3600 * 1000)} 回车保存`} prefix=\"调整耗时\" suffix=\"h\" onChange={(event) => setNewAdjustTime(event.target.value)} onPressEnter={setAdjustTime} />\n          }\n\n          {isExpectConsume &&\n            <span style={{ marginLeft: \"15px\" }} >估时：\n        <Input style={{ width: '100px' }} value={expectTime} placeholder=\"花费时间 自动保存\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onBlur={changeExceptTime} />\n            </span>\n          }\n\n\n          {isHaveDeadline &&\n            <span style={{ marginLeft: \"15px\" }} >DeadLine：\n        <DatePicker showTime value={deadline} onOk={value => onChooseDeadline(value)} />\n            </span>\n          }\n\n          {isPending &&\n            <span style={{ marginLeft: \"15px\" }} >Pending：\n      <DatePicker showTime value={pendingTime} onOk={value => onChoosePendingDeadline(value)} />\n\n              <Input style={{ width: '200px' }} value={pendingReason} prefix=\"原因:\" placeholder=\"（自动保存）\" onChange={(event) => setPendingReason(event.target.value)} onBlur={savePendingStatus} />\n            </span>\n          }\n\n        </Div>\n      }\n\n      {currentTask !== undefined &&\n        <div style={{ display: \"flex\" }}>\n          <Div style={{ marginLeft: \"15px\", marginRight: \"5px\", width: \"60%\" }} >\n            <Input placeholder=\"输入时间线，回车添加\" value={timeline} onChange={(event) => setTimeline(event.target.value)} onPressEnter={onAddTimeline} />\n\n            <TimeLinesContainer>\n              <List\n                size=\"small\"\n                bordered\n                dataSource={currentTask.note.getFormartTimeLines(currentTask.doingDurs)}\n                renderItem={timeline => (\n                  <NoteItem key={timeline.getKey()}>\n\n{/* <NoteItem key={timeline.getKey()} onMouseEnter={(event) => setHoverTimeline(timeline)} onMouseLeave={(event) => setHoverTimeline(null)}> */}\n                    {\n                      timeline.isDivder ? (\n                        <span style={{ backgroundColor: \"#f9e6ba\", color: \"#ce9100\" }}>{`┗━ ${Format.formatTimeInDay(timeline.timeStamp)} ━━━━`}</span>\n                      ) : (\n                          <span>\n                            <span style={{ color: \"#ce9100\", paddingRight: \"2px\" }}> {Format.formatTimeInSecond(timeline.timeStamp)}</span>\n                            {timeline.content}\n                            {/* todo 可以做成悬浮在最后的按钮，然后hover的时候显示 */}\n                            <DeleteBtn isHover={hoverTimeline?.timeStamp === timeline.timeStamp} onClick={(e) => onDeleteTimeline(currentTask, timeline)}>删除</DeleteBtn>\n                          </span>\n                        )\n                    }\n                  </NoteItem>\n                )}\n              />\n            </TimeLinesContainer>\n          </Div>\n\n          <Div style={{ marginLeft: \"5px\", marginRight: \"15px\", width: \"40%\" }} >\n            <Input placeholder=\"输入子任务，回车添加\" value={childTaskInput} onChange={(event) => setChildTaskInput(event.target.value)} onPressEnter={(event) => onAddChildTask(currentTask)} />\n\n            <TimeLinesContainer>\n              <List\n                size=\"small\"\n                bordered\n                dataSource={currentTask.getOrderedChildTasks()}\n                renderItem={childTask => (\n                  <ChildTaskItem key={childTask.createTime} isDone={childTask.isDone()} >\n\n{/* <ChildTaskItem key={childTask.createTime} isDone={childTask.isDone()} onMouseEnter={(event) => setHoverTask(childTask)} onMouseLeave={(event) => setHoverTask(null)}> */}\n                    {/* <span style={{ color: \"#ce9100\", paddingRight: \"2px\" }}> {Format.formatTimeInSecond(timeline.timeStamp)}</span> */}\n                    \n                    <span style={{ fontWeight:\"bold\" }}>{childTask.name}</span>\n                <span style={{ color: \"#00000055\" }}> ({childTask.order}) </span>\n                    {/* todo 可以做成悬浮在最后的按钮，然后hover的时候显示 */}\n                  \n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onDoneChildTask(currentTask, childTask)}>完</ChildTaskBtn>\n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onOrderChildTask(currentTask, childTask, true)}>↑</ChildTaskBtn>\n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onOrderChildTask(currentTask, childTask, false)}>↓</ChildTaskBtn>\n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onDeleteChildTask(currentTask, childTask)}>删</ChildTaskBtn>\n                  </ChildTaskItem>\n                )}\n              />\n            </TimeLinesContainer>\n          </Div>\n\n\n        </div>\n      }\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List,Radio } from 'antd';\nimport { StoreModel, Task, Duration, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\nconst Div = styled.div`\nheight: 55vh;\noverflow-y: scroll;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n/* background-color:rgb(227, 233, 231); */\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst TimeLineLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const [timelineSize, setTimelineSize] = useState(200);\n\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n\n  // function getCurrentDayDoingTasksTimelines(): TimeLine[] {\n  //   return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n  //     .flatMap((task) => task.note.getStartEndWrappedTimeLines(task.doingDurs).map((timeline) => {\n  //       return timeline.getTitled(task.title)\n  //     })).sort((a, b) => {\n  //       if (a.timeStamp > b.timeStamp) {\n  //         return -1\n  //       } else if (a.timeStamp < b.timeStamp) {\n  //         return 1\n  //       } else {\n  //         return 0\n  //       }\n  //     }\n  //     ).filter((timeline) => !timeline.isDivder)\n  // }\n\n  function getCurrentDayDoingTasksTimelines(): TimeLine[] {\n    const all = storeModel.tasks\n      .flatMap((task) => task.note.getStartEndWrappedTimeLines(task.doingDurs).map((timeline) => {\n        return timeline.getTitled(task.title)\n      }))\n      .filter((timeline) => !timeline.isDivder)\n      .sort((a, b) => {\n        if (a.timeStamp > b.timeStamp) {\n          return -1\n        } else if (a.timeStamp < b.timeStamp) {\n          return 1\n        } else {\n          return 0\n        }\n      })\n      .slice(0, timelineSize) \n\n    return TimeLine.addDivders(all)\n  }\n\n  const NoteItem = styled.div`\n    padding-top:1px;\n    padding-bottom:1px;\n    padding-left:2px;\n    padding-right:2px;\n    :hover{\n    background-color: #a2e3cd;\n    };\n    background-color:#e3e9e7;\n    font-size:11px;\n  `\n\n  return (\n    <Div>\n      <Radio.Group onChange={(event) => setTimelineSize(Number(event.target.value))} defaultValue=\"200\" size=\"small\">\n      <Radio.Button value=\"200\">200</Radio.Button>\n      <Radio.Button value=\"400\">400</Radio.Button>\n      <Radio.Button value=\"600\">600</Radio.Button>\n      <Radio.Button value=\"800\">800</Radio.Button>\n      <Radio.Button value=\"1000\">1000</Radio.Button>\n    </Radio.Group>\n\n      {/* // todo 下面这个 key 不能用 getKey() 非常奇怪 */}\n      <List\n        size=\"small\"\n        bordered\n        dataSource={getCurrentDayDoingTasksTimelines()}\n        renderItem={timeline => (\n          <NoteItem key={timeline.timeStamp}> \n            {\n              timeline.isDivder ? (\n                <span style={{ backgroundColor: \"#f9e6ba\", color: \"#ce9100\" }}>{`┗━ ${Format.formatTimeInDay(timeline.timeStamp)} ━━━━`}</span>\n              ) : (\n                  <span>\n                    <span style={{ color: \"#ce9100\", paddingRight: \"2px\" }}>{Format.formatTimeInSecond(timeline.timeStamp)}</span>\n                    <span style={{ color: \"#229a72\", display: \"inline-block\", verticalAlign: \"top\", maxWidth: \"110px\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>  {timeline.title} </span>\n                    {timeline.content}\n                  </span>\n                )\n            }\n          </NoteItem>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TimeLineLayout;\n","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List } from 'antd';\nimport { StoreModel, Task, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\n\n\n\nconst Div = styled.div`\nheight: 45vh;\noverflow-y: scroll;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst NoteItem = styled.div`\npadding:2px;\nmargin:1px;\n:hover{\n  background-color: ${(props: { choosed: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return 'rgba(194, 226, 255, 0.495)'\n    }\n  }\n  };\n\n`\n\nconst TodayWorkConatiner: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task) => void }\n\n  function getCurrentDayDoingTasks(): Task[] {\n    return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(0))\n      .sort((a, b) => {\n        if (a.lastStartTime() > b.lastStartTime()) {\n          return -1\n        } else if (a.lastStartTime() < b.lastStartTime()) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n  }\n\n  return (\n    <Div>\n      <List\n        size=\"small\"\n        bordered\n        dataSource={getCurrentDayDoingTasks()}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => setCurrentTask(task)}>\n            {task.title} \n            <span style={{ color:\"#0295d2\" }}>{Format.formatDuration3(task.getAllDurationInDur(DateUtils.getMyCurrentDayDur(0)))}</span>\n          </NoteItem>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TodayWorkConatiner;\n","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport TaskListContainer from './TaskListContainer'\nimport ContentLayout from './ContentLayout'\nimport TimeLineLayout from './TimeLineLayout'\nimport TodayWorkConatiner from './TodayWorkConatiner';\n\n\nconst AppContainer = styled.div`\n  display: grid;\n  min-height: 100vh;\n  height: 100%;\n  width: 100%;\n  grid-template-columns: 35% 45% 20%;\n  grid-template-rows: 100%;\n`\n\nconst App: React.FC = () => {\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  return (\n    <AppContainer>\n      <TaskListContainer />\n      <ContentLayout />\n\n      <div>\n        <TimeLineLayout />\n        <TodayWorkConatiner />\n      </div>\n\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}