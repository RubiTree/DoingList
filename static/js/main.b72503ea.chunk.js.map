{"version":3,"sources":["utils/Utils.ts","utils/DateUtils.ts","utils/Format.ts","model/model.ts","stores/MainStore.ts","stores/CurrentTaskStore.ts","stores/CurrentDoingTaskStore.ts","stores/index.ts","stores/CurrentDayOffsetStore.ts","utils/TaskInfoFormat.ts","layouts/TaskListContainer.tsx","layouts/ContentLayout.tsx","layouts/TimeLineLayout.tsx","layouts/TodayWorkConatiner.tsx","layouts/App.tsx","serviceWorker.ts","index.tsx"],"names":["Utils","obj","content","transfer","document","createElement","style","cssText","body","appendChild","value","focus","select","execCommand","blur","removeChild","fileName","console","log","eleLink","download","display","blob","Blob","href","URL","createObjectURL","click","Date","getTime","src","regex","search","RegExp","regExp","Math","random","toString","start1","end1","start2","end2","array","object","length","this","i","shift","pop","splice","DateUtils","hour","today","setHours","someStamp","day","dayZeroTime","offsetHour","result","Duration","init","end","dayMills","offsetDay","dayOffset","getCurrentDayStamp","getOffsetedDayDur","getMyCurrentDayStamp","time1","time2","getDay","Format","timeMs","date","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","time","天","floor","小时","分","秒","Object","entries","filter","val","map","key","join","d","时","Task","Type","Note","AdjustConsume","id","title","level","createTime","doneTime","pendingDeadline","pendingReason","deadlines","expectConsumes","expectStartTime","cycleId","getTimestamp","generateId","idCounter","task","undefined","doingDurs","start","duration","currentTime","push","delay","isTimeDangers","getActualDeadline","isDangerousPending","isDangerousDeadline","deadline","index","getDur","reduce","a","b","allAdjusts","adjusts","adjust","limitDur","getLimitDur","allDurAdjusts","isIn","adjustTime","getActualExpectConsume","getAllDuration","name","timeStamp","isDoing","dur","getDurDur","error","create","getJoin","max","min","CycleRecord","_startTime","_gap","gap","startTime","getSomeDayStamp","getStartTime","getGap","newTask","formatTimeInDay2","TimeLine","timeLines","hasTimeLine","slice","reverse","timeline","isDivder","formatTimeInDay","formatTimeInSecond","copy","assign","t","StoreModel","totalAdjustConsumeTime","tasks","isDone","find","taskDur","containsProject","cycleRecord","containsCycleRecord","cycleRecords","forEach","record","isTimeToCreateTask","isSameId","isTodayTask","getMyCurrentDayDur2","addTask","createTask","item","invokeAddCycleTask","orderTasks","sort","isDangerous","storage","isDebug","fetch","_getMockStoreModel","storageJson","localStorage","getItem","plainToClass","JSON","parse","adaptData","save","storeModel","setItem","stringify","newLocal","model","setModel","currentTaskStore","currentTask","setCurrentTask","currentDoingTaskStore","currentDoingTask","setCurrentDoingTask","storeManager","Store","registerStore","mainmodel","currentDayOffset","setCurrentDayOffset","offset","TaskInfoFormat","formatDuration2","isStringEmpty","pendingStatus","getPendingStatus","getDeadlineStatus","leftTime","left","getLeftExpectConsumeTime","Container","styled","div","Div","Container2","span","ButtonGroup","Input","Group","Button","NoteItem","props","choosed","NoteList","stores","useStore","useEffect","doingTasks","stop","getMenu","onClick","param","Number","normalUpdate","domEvent","preventDefault","onClickMenu","Item","startTask","event","message","formatTimeInMs","lastStartTime","size","backgroundColor","margin","bordered","dataSource","getTasks","getMyCurrentDayDur","renderItem","isSameTask","e","note","onDoubleClick","flex","getDoingStatusTips","getDeadline","getConsumeExpected","getShowTips","overlay","paddingLeft","className","formartLevel","DownOutlined","NoteItemInput","useState","setContent","background","fontWeight","onChange","target","onBlur","TaskListContainer","setTitle","isNeedExceptTime","setNeedExceptTimeUI","expectTime","setExpectTime","setLevel","isCycleTask","setCycleTaskUI","cycleGap","setCycleGap","isLongTask","setLongTaskUI","exceptWorkday","setExceptWorkday","exceptHoliDay","setExceptHoliDay","isStartNow","setStartNow","setExpectStartTime","setNeedExceptTime","setCycleTask","setLongTask","changeOffsetDay","isAdd","downloadFile","formatTimeInMsToFileName","type","padding","base","getOffsetString","multiple","file","files","reader","FileReader","onload","uploadContent","Modal","confirm","onOk","onCancel","readAsText","upload","placeholder","onPressEnter","newRecord","setStartTime","addCycleRecord","width","marginLeft","prefix","suffix","marginRight","checkedChildren","unCheckedChildren","checked","color","showTime","moment","valueOf","notDoneTasks","consumeFormat","consumes","formatDuration","getAllTaskStatus","Editor","TextArea","ContentLayout","setTimeline","isExpectConsume","setExpectConsumeUI","newAdjustTime","setNewAdjustTime","isHaveDeadline","setHaveDeadlineUI","setDeadlineUI","isPending","setPendingUI","setPendingReason","pendingTime","setPendingTimeUI","setExpectStartTimeUI","lastTask","setLastTask","isManual","info","saveToLocal","_realDone","done","success","getDeadlineTime","isTimeValid","timeName","isValid","formatTimeInMinute","getPendingDeadlineTime","setExpectConsume","setHaveDeadline","isStarted","removeTask","doneTask","getConsumed","getStartExpected","marginTop","marginBottom","onChangeExpectStartTime","newAdjustTimeHours","NaN","newAdjustTimeMills","msg","onChooseDeadline","pendingLine","onChoosePendingDeadline","endTimeline","endTimeLine","isSameDay","createDivNode","createContentNode","height","overflow","whiteSpace","getFormartTimeLines","TimeLineLayout","flatMap","getTitled","formatTimeInSecond2","TodayWorkConatiner","getCurrentDayDoingTasks","formatDuration3","getAllDurationInDur","AppContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b72503ea.chunk.js","sourcesContent":["\nclass Utils {\n    public static isStringEmpty(obj: any): boolean {\n        if (typeof obj === \"undefined\" || obj === null || obj === \"\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static exportContentToClipboard(content: string) {\n        let transfer = document.createElement('textarea');\n        // 不这么设置屏幕会跳，具体哪儿有问题还没确定\n        transfer.style.cssText = \"width:30%;padding:2%;min-width: 100px;opacity: 0.5;color: rgb(255, 255, 255);line-height: 18px;text-align: center;border-radius: 5px;position: fixed;top: 50%;left: 30%;z-index: 999999;background: rgb(0, 0, 0);font-size: 15px;\";\n        document.body.appendChild(transfer);\n        transfer.value = content;  // 这里表示想要复制的内容\n        transfer.focus();\n        transfer.select();\n        if (document.execCommand('copy')) {\n            document.execCommand('copy');\n        }\n        transfer.blur();\n        document.body.removeChild(transfer);\n    }\n\n    public static downloadFile(fileName: string, content: string) {\n        console.log(\"download\")\n        // 创建隐藏的可下载链接\n        var eleLink = document.createElement('a');\n        eleLink.download = fileName;\n        eleLink.style.display = 'none';\n        // 字符内容转变成blob地址\n        var blob = new Blob([content]);\n        eleLink.href = URL.createObjectURL(blob);\n        // 触发点击\n        document.body.appendChild(eleLink);\n        eleLink.click();\n        // 然后移除\n        document.body.removeChild(eleLink);\n    }\n\n    public static generateId(): number {\n        return (new Date()).getTime()\n    }\n\n    // rename currentTimpstamp\n    public static getTimestamp(): number {\n        return (new Date()).getTime()\n    }\n\n    public static match(src: string, regex: string): boolean {\n        return src.search(new RegExp(regex, 'i')) > -1\n    }\n\n    // todo 不能重载吗？\n    public static matchs(src: string, regExp: RegExp): boolean {\n        return src.search(regExp) > -1\n    }\n\n    public static getRandomColor(): string {\n        return '#' + (Math.random() * 0xffffff << 0).toString(16);\n    }\n\n    public static hasIntersection(start1: number, end1: number, start2: number, end2: number): boolean {\n\n        if (end2 < start1 || end1 < start2) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    public static removeObject(array: any[], object: any): boolean {\n        let length = this.length;\n        for (let i = 0; i < length; i++) {\n            if (array[i] === object) {\n                if (i === 0) {\n                    array.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    array.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    array.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n\n        return false\n    }\n}\n\nexport default Utils","import { Duration } from \"../model/model\";\n\nclass DateUtils {\n    private static dayMills: number = 24 * 60 * 60 * 1000\n    public static dayOffset: number = 6\n\n    // 获得今天某个小时的时间戳\n    public static getCurrentDayStamp(hour: number): number {\n        let today = new Date();\n        today.setHours(hour, 0, 0, 0);\n        return today.getTime();\n    }\n\n    // 获得某个时间戳那天某个小时的时间戳\n    public static getSomeDayStamp(someStamp: number, hour: number): number {\n        let day = new Date(someStamp)\n        day.setHours(hour, 0, 0, 0)\n        return day.getTime();\n    }\n\n    // 获得某天偏移某个小时后的dur\n    // 暂时 offsetHour 只支持 0-24 之间的数\n    public static getOffsetedDayDur(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    //-------------------- 以下业务相关 --------------------\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 0 点时间戳\n     */\n    public static getMyCurrentDayStamp(offsetDay: number, dayOffset: number): number {\n        let now = new Date().getTime()\n        // 今天6点\n        let todayOffset = DateUtils.getCurrentDayStamp(dayOffset)\n\n        if (now > todayOffset) {\n            return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay\n        } else {\n            return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay\n        }\n    }\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 dur，这个某些天本身也 offset 6\n     */\n    public static getMyCurrentDayDur(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, DateUtils.dayOffset), DateUtils.dayOffset)\n    }\n\n    /**\n     * 获得今天（是否当天按0点判断） offset 某些天的 dur, 这个是0\n     */\n    public static getMyCurrentDayDur2(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, 0), 0)\n    }\n\n    public static isSameDay(time1: number, time2: number): boolean {\n        return new Date(time1).getDay() ===  new Date(time2).getDay()\n    }\n}\n\nexport default DateUtils","class Format {\n    public static formatTimeInMs(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + ':';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return \"[\" + Y + M + D + h + m + s + msString + \"]\";\n    }\n\n    public static formatTimeInMsToFileName(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '_';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '_';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + '_';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + '_';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + '_';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return Y + M + D + h + m + s + msString;\n    }\n\n    public static formatTimeInMinute(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\n\n        return Y + M + D + h + m;\n    }\n\n    // 时-分-秒\n    public static formatTimeInSecond(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n\n        return \"[\" + h + m + s + \"]\";\n    }\n\n    // 时-分\n    public static formatTimeInSecond3(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\n\n        return \"[\" + h + m  + \"]\";\n    }\n\n    // 日-时-分-秒\n    public static formatTimeInSecond2(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n\n        return \"[\" + D + h + m + s + \"]\";\n    }\n\n    // 年-月-日\n    public static formatTimeInDay(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return Y + M + D;\n    }\n\n    // 月-日\n    public static formatTimeInDay2(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return M + D;\n    }\n\n    public static formatDuration(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            天: Math.floor(timeMs / 86400000),\n            小时: Math.floor(timeMs / 3600000) % 24,\n            分: Math.floor(timeMs / 60000) % 60,\n            秒: Math.floor(timeMs / 1000) % 60,\n            //   毫秒: Math.floor(timeMs) % 1000\n        };\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n\n    public static formatDuration2(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            d: Math.floor(timeMs / 86400000),\n            h: Math.floor(timeMs / 3600000) % 24,\n            m: Math.floor(timeMs / 60000) % 60,\n            s: Math.floor(timeMs / 1000) % 60,\n        };\n\n        if (time.d > 0) {\n            time.m = 0\n            time.s = 0\n        }\n        if (time.h > 0) {\n            time.s = 0\n        }\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n\n    public static formatDuration3(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            时: Math.floor(timeMs / 3600000) % 24,\n            分: Math.floor(timeMs / 60000) % 60,\n        };\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n}\n\nexport default Format\n\n","import Utils from '../utils/Utils'\nimport { Type } from \"class-transformer\";\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\nclass Task {\n    // todo delete 内存id增加器（因为mock初始化太快了，都在一个毫秒内）\n    private static idCounter = 0\n\n    public id: number = -1\n\n    public title: string = \"undefine\"\n\n    @Type(() => Note)\n    public note: Note = new Note()\n\n    public level: number = 3\n\n    public createTime: number = -1\n    public doneTime: number = -1\n\n    public pendingDeadline: number = -1\n    public pendingReason: string = \"\"\n\n    // 可修改，最后一个有效\n    public deadlines: number[] = []\n    // 预计花费时间，单位毫秒，可修改，最后一个有效\n    public expectConsumes: number[] = []\n    // 预期开始时间，默认是createTime，可以设置成不同时间，如果在 expectStartTime 前开始任务，此时间会自动变成这个开始任务的时间（显示逻辑一致）\n    public expectStartTime: number = -1\n\n    @Type(() => AdjustConsume)\n    public adjusts: AdjustConsume[] = []\n\n    @Type(() => Duration)\n    public doingDurs: Duration[] = []\n\n    public cycleId: number = -1\n\n    // 反序列化不能有带参数的构造器\n    // public constructor(title: string) {\n    //     this.title = title\n    //     this.createTime = Utils.getTimestamp()\n\n    //     this.id = Utils.generateId() + Task.idCounter\n    //     Task.idCounter = Task.idCounter + 1000\n    // }\n\n    public init(title: string) {\n        this.title = title\n        this.createTime = Utils.getTimestamp()\n        this.expectStartTime = this.createTime\n\n        this.id = Utils.generateId() + Task.idCounter\n        Task.idCounter = Task.idCounter + 1000\n    }\n\n    public adaptData() {\n        if (this.expectStartTime === -1) {\n            this.expectStartTime = this.createTime\n        }\n    }\n\n    public isSameTask(task: Task | undefined): boolean {\n        if (task === undefined) {\n            return false\n        } else {\n            return this.id === task.id\n        }\n    }\n\n    public isDoing(): boolean {\n        if (this.doingDurs.length === 0) {\n            return false\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.end === -1\n        }\n    }\n\n    public isStarted(): boolean {\n        return this.doingDurs.length !== 0\n    }\n\n    public lastStartTime(): number {\n        if (this.doingDurs.length === 0) {\n            return -1\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.start\n        }\n    }\n\n    public start() {\n        let duration = new Duration()\n        const currentTime = Utils.getTimestamp();\n        duration.init(currentTime)\n        this.doingDurs.push(duration)\n\n        if (currentTime < this.expectStartTime) {\n            this.expectStartTime = currentTime\n        }\n    }\n\n    public stop() {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp()\n    }\n\n    public stopDelay(delay: number) {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() + delay\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public isPending(): boolean {\n        return this.pendingDeadline !== -1\n    }\n\n    public isDangerousPending(): boolean {\n        return this.isTimeDangers(this.pendingDeadline)\n    }\n\n    public isDangerousDeadline(): boolean {\n        return this.isTimeDangers(this.getActualDeadline())\n    }\n\n    public isDangerous(): boolean {\n        return this.isDangerousPending() || this.isDangerousDeadline()\n    }\n\n    /**\n     * dealine 距离还有2个小时，或者已经过了\n     */\n    private isTimeDangers(deadline: number): boolean {\n        if (deadline <= 0) {\n            return false\n        }\n\n        if (deadline - Utils.getTimestamp() <= 2 * 60 * 60 * 1000) {\n            return true\n        }\n\n        return false\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    // 返回毫秒数\n    // todo rename getAllDoingDuration\n    public getAllDuration(): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b) + this.allAdjusts()\n    }\n\n    public allAdjusts(): number {\n        if(this.adjusts.length === 0){\n            return 0\n        }\n        return this.adjusts.map((adjust) => adjust.adjust).reduce((a, b) => a + b);\n    }\n\n    public getAllDurationInDur(limitDur: Duration): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getLimitDur(index === this.doingDurs.length - 1, limitDur)).reduce((a, b) => a + b) + this.allDurAdjusts(limitDur)\n    }\n\n    public allDurAdjusts(limitDur: Duration): number {\n        const s = this.adjusts.filter((adjust) => limitDur.isIn(adjust.adjustTime))\n        if(s.length === 0){\n            return 0\n        }\n        return s.map((adjust) => adjust.adjust).reduce((a, b) => a + b);\n    }\n\n    public getActualDeadline(): number {\n        if (this.deadlines.length === 0) {\n            return -1\n        }\n\n        return this.deadlines[this.deadlines.length - 1]\n    }\n\n    public isHaveDeadline(): boolean {\n        return this.getActualDeadline() > 0\n    }\n\n    public getActualExpectConsume(): number {\n        if (this.expectConsumes.length === 0) {\n            return -1\n        }\n\n        return this.expectConsumes[this.expectConsumes.length - 1]\n    }\n\n    public isExpectConsume(): boolean {\n        return this.getActualExpectConsume() > 0\n    }\n\n    // 超出预期时间返回多花的时间，负值\n    // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n    public getLeftExpectConsumeTime(): number {\n        let left = this.getActualExpectConsume() - this.getAllDuration()\n\n        // 不用打印\n        // if (left < 0) {\n        //     console.error(\"超出预期时间\")\n        // }\n\n        return left\n    }\n}\n\nclass Duration {\n    public start: number = -1\n    public end: number = -1\n    public name: string = \"\"\n\n    // todo 没法重载\n    public init(start: number) {\n        this.start = start\n    }\n    public init2(start: number, end?: number) {\n        this.start = start\n        if (end != undefined) {\n            this.end = end\n        }\n    }\n\n    public isIn(timeStamp: number) {\n        return timeStamp >= this.start && timeStamp <= this.end\n    }\n\n    public getDur(isDoing: boolean = false): number {\n        const dur = this.getDurDur(isDoing)\n        if (dur === null) {\n            return 0\n        }\n        return dur.end - dur.start\n    }\n\n    public getDurDur(isDoing: boolean = false): Duration | null {\n        let end = this.end\n        if (end == -1 && isDoing) {\n            end = Utils.getTimestamp()\n        }\n        if (end == -1) {\n            console.error(\"这段时间未结束\")\n            return null\n        }\n        return Duration.create(this.start, end)\n    }\n\n    public getLimitDur(isDoing: boolean, limitDur: Duration): number {\n        const dur = this.getDurDur(isDoing)?.getJoin(limitDur)\n        if (dur === null || dur === undefined) {\n            return 0\n        }\n        return dur.end - dur.start\n    }\n\n    public isValid(isDoing: boolean) {\n        if (!isDoing && this.end == -1) return false\n        return true\n    }\n\n    public static create(start?: number, end?: number, name?: string): Duration {\n        let dur = new Duration()\n        if (start != undefined) {\n            dur.start = start\n        }\n        if (end != undefined) {\n            dur.end = end\n        }\n        if (name != undefined) {\n            dur.name = name\n        }\n        return dur\n    }\n\n    public getJoin(limitDur: Duration): Duration | null {\n        if (this.end <= limitDur.start || this.start >= limitDur.end) {\n            return null\n        }\n\n        return Duration.create(Math.max(limitDur.start, this.start), Math.min(limitDur.end, this.end))\n    }\n}\n\nclass AdjustConsume {\n    // 调整耗时 单位毫秒\n    public adjust: number = -1\n    public adjustTime: number = -1\n\n    public static create(adjust: number): AdjustConsume {\n        let dur = new AdjustConsume()\n        dur.adjust = adjust\n        dur.adjustTime = Utils.getTimestamp()\n        return dur\n    }\n}\n\nclass CycleRecord {\n    public id: number = -1\n    // 可以不断更新\n    public _startTime: number[] = []\n    // 单位天，其实不是gap，是 gap-1\n    public _gap: number[] = []\n\n    // ---- 模板\n    public title: string = \"undefine\"\n    public level: number = 3\n    public expectConsumes: number = -1\n    // ---- 模板\n\n    public init(gap: number, title: string, level: number) {\n        this.id = Utils.generateId()\n        this.title = title\n        this.level = level\n        this._gap.push(gap)\n        this._startTime.push(Utils.getTimestamp())\n    }\n\n    public getGap(): number {\n        if (this._gap.length === 0) {\n            return -1\n        }\n        return this._gap[this._gap.length - 1]\n    }\n\n    public setGap(gap: number) {\n        this._gap.push(gap)\n    }\n\n    public getStartTime(): number {\n        if (this._startTime.length === 0) {\n            return -1\n        }\n        return this._startTime[this._startTime.length - 1]\n    }\n\n    public setStartTime(startTime: number) {\n        this._startTime.push(startTime)\n    }\n\n    /**\n     * 只要 currentTimeStamp 这天 0点-24点 在 starttime + n*gap 的这天 0点-24点，就创建任务\n     * 创建的方式是找最新创建的一个任务，然后拷贝它的属性（这个有点复杂，要考虑没有最新创建任务的情况，暂时不这么实现，而是使用模板吧）\n     */\n    public isTimeToCreateTask(): boolean {\n        let currentZero = DateUtils.getCurrentDayStamp(0)\n        let startZero = DateUtils.getSomeDayStamp(this.getStartTime(), 0)\n        return (currentZero - startZero) % (this.getGap() * 24 * 3600 * 1000) === 0\n    }\n\n    public createTask(): Task {\n        const newTask = new Task()\n        newTask.init(`[周期|${Format.formatTimeInDay2(Utils.getTimestamp())}] ${this.title}`)\n        newTask.level = this.level\n        newTask.expectConsumes.push(this.expectConsumes)\n        newTask.cycleId = this.id\n        return newTask\n    }\n}\n\nclass Note {\n    public content: string = \"\"\n\n    @Type(() => TimeLine)\n    public timeLines: TimeLine[] = []\n\n    public hasTimeLine(): boolean {\n        return this.timeLines.length !== 0\n    }\n\n    public endTimeLine(): TimeLine | null {\n        if (!this.hasTimeLine()) return null\n        return this.timeLines[this.timeLines.length - 1]\n    }\n\n    public getFormartTimeLines(): string {\n        return this.timeLines.slice().reverse().map((timeline) => {\n            if (timeline.isDivder) {\n                return `----- ${Format.formatTimeInDay(timeline.timeStamp)} -----`\n            } else {\n                return `${Format.formatTimeInSecond(timeline.timeStamp)} ${timeline.content}`\n            }\n        }).join(\"\\n\")\n    }\n}\n\nclass TimeLine {\n    public timeStamp: number = -1\n    public isDivder: boolean = false\n    public content: string = \"\"\n\n    // 只用来formart\n    public title: string = \"\"\n\n    public static createContentNode(content: string): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = Utils.getTimestamp()\n        t.content = content\n        return t\n    }\n\n    public static createDivNode(): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = Utils.getTimestamp()\n        t.isDivder = true\n        return t\n    }\n\n    public getTitled(title: string): TimeLine {\n        const copy = Object.assign({}, this)\n        // copy.content = `【${title}】${copy.content}`\n        copy.title = title\n        return copy\n    }\n}\n\nclass StoreModel {\n    @Type(() => Task)\n    public tasks: Task[] = []\n\n    @Type(() => CycleRecord)\n    public cycleRecords: CycleRecord[] = []\n\n    public totalAdjustConsumeTime: number = 0\n\n    /**\n     * 筛选规则：\n     * 1. 所有 未完成 且 预期开始时间在今天endtime之前 的任务\n     * 2. 今天完成的任务\n     */\n    public getTasks(dur: Duration): Task[] {\n        return this.tasks.filter((value) => {\n            return (!value.isDone() && value.expectStartTime <= dur.end) || dur.isIn(value.doneTime)\n        })\n    }\n\n    public getCurrentDayDoingTasks(dur: Duration): Task[] {\n        return this.tasks.filter((task) => {\n            return task.doingDurs.find((taskDur) => {\n                return dur.isIn(taskDur.start)\n            }) !== undefined\n        })\n    }\n\n    public addTask(task: Task) {\n        if (this.containsProject(task.id)) return\n        this.tasks.push(task)\n    }\n\n    public addCycleRecord(cycleRecord: CycleRecord) {\n        if (this.containsCycleRecord(cycleRecord.id)) return\n        this.cycleRecords.push(cycleRecord)\n    }\n\n    public invokeAddCycleTask() {\n        this.cycleRecords.forEach(record => {\n            if (record.isTimeToCreateTask()) {\n                const isNotCreated = this.tasks.filter((task) => {\n                    const isSameId = task.cycleId === record.id\n                    const isTodayTask = DateUtils.getMyCurrentDayDur2(0).isIn(task.createTime)\n                    // console.log(`isNotCreated, isSameId:${isSameId} isTodayTask:${isTodayTask}`)\n                    return isSameId && isTodayTask\n                }).length === 0\n                if (isNotCreated) {\n                    // console.log(`create cycle task, record:${record.title}`)\n                    this.addTask(record.createTask())\n                }\n            }\n        });\n    }\n\n    public removeTask(task: Task): boolean {\n        if (!this.containsProject(task.id)) return false\n\n        let length = this.tasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.tasks[i].id === task.id) {\n                if (i === 0) {\n                    this.tasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.tasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.tasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    private containsProject(id: number): boolean {\n        return this.tasks.find(item => item.id === id) !== undefined\n    }\n\n    private containsCycleRecord(id: number): boolean {\n        return this.cycleRecords.find(item => item.id === id) !== undefined\n    }\n\n    public normalUpdate() {\n        this.invokeAddCycleTask()\n        this.orderTasks()\n    }\n\n    public orderTasks() {\n        this.tasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 正在做的放最前\n                if (a.isDoing()) {\n                    return -1\n                } else if (b.isDoing()) {\n                    return 1\n                } else {\n                    // 到时间的放前面\n                    if (a.isDangerous() && !b.isDangerous()) {\n                        return -1\n                    } else if (!a.isDangerous() && b.isDangerous()) {\n                        return 1\n                    } else {\n                        // 然后比较level\n                        if (a.level > b.level) {\n                            return 1\n                        } else if (a.level < b.level) {\n                            return -1\n                        } else {\n                            // 同样 level 比较创建时间\n                            if (a.createTime > b.createTime) {\n                                return -1\n                            } else if (a.createTime < b.createTime) {\n                                return 1\n                            } else {\n                                return 0\n                            }\n                        }\n                    }\n                }\n            }\n        })\n    }\n}\n\n\nexport { Task, Duration, StoreModel, AdjustConsume, Note, CycleRecord, TimeLine }","import { Task, Duration, StoreModel } from '../model/model'\nimport Utils from '../utils/Utils';\nimport stores from '../stores';\nimport 'reflect-metadata'\nimport '../../node_modules/reflect-metadata/Reflect.js'\nimport { plainToClass } from \"class-transformer\";\n\n\nconst STORAGE_KEY = 'DoingList3'\nconst storage = {\n    isDebug: false,\n    fetch: function (): StoreModel {\n        if (this.isDebug) {\n            return this._getMockStoreModel()\n        }\n\n        let result = new StoreModel()\n\n        let storageJson = localStorage.getItem(STORAGE_KEY)\n        if (storageJson != null) {\n            result = plainToClass(StoreModel, JSON.parse(storageJson))\n            result.tasks.forEach((task) => {task.adaptData()})\n            return result\n        }\n        \n        return result\n    },\n\n    save: function (storeModel: StoreModel) {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(storeModel))\n    },\n\n    _getMockStoreModel(): StoreModel {\n        let result = new StoreModel()\n\n        for (let index = 0; index < 12; index++) {\n            const newLocal = new Task();\n        newLocal.init(\"我的第 \" + index + \" 个任务\")\n            result.addTask(newLocal)\n        }\n\n        return result\n    },\n}\n\nconst model = {\n    storeModel: storage.fetch(),\n\n    save() {\n        storage.save(this.storeModel)\n    },\n\n    setModel(model: StoreModel) {\n        this.storeModel = model\n        this.save()\n    },\n};\n\nexport default model","import { Task } from '../model/model'\n\nconst CurrentTaskKey = \"CurrentTaskKey\"\n\nconst currentTaskStore = {\n    currentTask: undefined as Task|undefined,\n\n    setCurrentTask(task: Task) {\n        this.currentTask = task\n    },\n};\n\nexport {CurrentTaskKey, currentTaskStore}","import { Task } from '../model/model'\n\nconst CurrentDoingTaskKey = \"CurrentDoingTaskKey\"\n\nconst currentDoingTaskStore = {\n    currentDoingTask: undefined as Task|undefined,\n\n    setCurrentDoingTask(task: Task| undefined) {\n        this.currentDoingTask = task\n    },\n};\n\nexport {CurrentDoingTaskKey, currentDoingTaskStore}","import mainmodel from './MainStore';\nimport Store from '@ice/store';\n\nimport { CurrentTaskKey, currentTaskStore } from './CurrentTaskStore';\nimport { CurrentDoingTaskKey, currentDoingTaskStore } from './CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey, currentDayOffsetStore } from './CurrentDayOffsetStore';\n\nconst storeManager = new Store();\n//  *（@@@？todo 使用常量 mainmodel？）* \nstoreManager.registerStore('mainmodel', mainmodel);\nstoreManager.registerStore(CurrentTaskKey, currentTaskStore);\nstoreManager.registerStore(CurrentDoingTaskKey, currentDoingTaskStore);\nstoreManager.registerStore(CurrentDayOffsetKey, currentDayOffsetStore);\n\nexport default storeManager;","\nconst CurrentDayOffsetKey = \"CurrentDayOffsetKey\"\n\nconst currentDayOffsetStore = {\n    currentDayOffset: 0,\n\n    setCurrentDayOffset(offset: number) {\n        this.currentDayOffset = offset\n    },\n};\n\nexport {CurrentDayOffsetKey, currentDayOffsetStore}","import { Task } from '../model/model'\nimport Format from '../utils/Format'\nimport Utils from '../utils/Utils'\n\nclass TaskInfoFormat {\n\n    public static getDoingStatusTips(task: Task): string {\n        if (task.isDoing()) {\n            return \"Doing🔴\"\n            // ⛑🏃‍♀️🧠 🏄‍♂️ 🌟 🔴\n        } else {\n            return \"\"\n        }\n    }\n\n    public static getConsumed(task: Task): string {\n        let time = Format.formatDuration2(task.getAllDuration());\n        if (Utils.isStringEmpty(time)) {\n            return \"\"\n        }\n        return `进行${time}(${task.doingDurs.length}次) `\n    }\n\n    public static getDeadline(task: Task): string {\n        const pendingStatus = TaskInfoFormat.getPendingStatus(task)\n        if (Utils.isStringEmpty(pendingStatus)) {\n            return TaskInfoFormat.getDeadlineStatus(task)\n        } else {\n            return pendingStatus\n        }\n    }\n\n    private static getDeadlineStatus(task: Task): string {\n        let deadline = task.getActualDeadline()\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Dead已超期❗ `\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Dead剩余${time} `\n    }\n\n    // todo 合并重复函数\n    private static getPendingStatus(task: Task): string {\n        let deadline = task.pendingDeadline\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Pend已超期❗ `\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Pend剩余${time} `\n    }\n\n    public static getConsumeExpected(task: Task): string {\n        if (task.getActualExpectConsume() <= 0) {\n            return \"\"\n        }\n\n        let left = task.getLeftExpectConsumeTime()\n        if (left <= 0) {\n            return `多用${Format.formatDuration2(-left)} `\n        } else {\n            return `还要${Format.formatDuration2(left)} `\n        }\n    }\n\n    public static getStartExpected(task: Task): string {\n        const currentTime = Utils.getTimestamp()\n        if (currentTime > task.expectStartTime) {\n            return \"\"\n        }\n\n        return `还有${Format.formatDuration2(task.expectStartTime - currentTime)}开始`\n    }\n}\n\nexport default TaskInfoFormat","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, Row, Col, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\n// 这样居然真的行\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport stores from '../stores';\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { Task, Note, CycleRecord } from '../model/model'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport 'antd/dist/antd.css';\nimport { plainToClass } from \"class-transformer\";\nimport moment from 'moment'\n\nconst Container = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst ParamTag = styled.span`\n  width:100px;\n  display:inline-block;\n  text-align:center;\n`\n\nconst Container2 = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  overflow:auto;\n  /* height: 800px; */\n  /* height: 83vh; */\n  margin-top:10px;\n\n  /* flex: 0 1 auto 居然效果一样 */\n  flex: 1 1 auto;\n`\n\nconst InputGroup = styled(Input.Group)`\nmargin: 1%;\n`\nconst ButtonGroup = styled(Button.Group)`\nmargin: 1%;\n`\n\nconst TaskListContainer: React.FC = () => {\n  const { storeModel, save, setModel } = stores.useStore('mainmodel') as { storeModel: StoreModel, save: () => void, setModel: (storeModel: StoreModel) => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n  const [title, setTitle] = useState(\"\");\n  const [isNeedExceptTime, setNeedExceptTimeUI] = useState(true);\n  const [expectTime, setExpectTime] = useState(2);\n\n  const [level, setLevel] = useState(3);\n\n  const [isCycleTask, setCycleTaskUI] = useState(false);\n  const [cycleGap, setCycleGap] = useState(1);\n\n  const [isLongTask, setLongTaskUI] = useState(false);\n  const [exceptWorkday, setExceptWorkday] = useState(3);\n  const [exceptHoliDay, setExceptHoliDay] = useState(1);\n\n  const [isStartNow, setStartNow] = useState(true);\n  const [expectStartTime, setExpectStartTime] = useState<any>(null);\n\n  // React.useEffect(() => {\n  //   console.log(\"TaskListContainer useEffect\")\n  // },[])\n\n  function setNeedExceptTime(isNeedExceptTime: boolean) {\n    if (!isNeedExceptTime && isLongTask) {\n      message.error(\"长任务必须估时\")\n      return\n    }\n\n    setNeedExceptTimeUI(isNeedExceptTime)\n  }\n\n  function setCycleTask(isCycleTask: boolean) {\n    if (isCycleTask) {\n      setLongTask(false)\n    }\n\n    setCycleTaskUI(isCycleTask)\n  }\n\n  function setLongTask(isLongTask: boolean) {\n    if (isLongTask) {\n      setNeedExceptTime(true)\n      setCycleTask(false)\n    }\n\n    setLongTaskUI(isLongTask)\n  }\n\n  function onAddTask(event: any) {\n    event.preventDefault();\n\n    if (Utils.isStringEmpty(title)) {\n      message.error(\"请输入内容\")\n      return\n    }\n    if (isLongTask && isCycleTask) {\n      message.error(\"不能同时是长任务和周期任务\")\n      return\n    }\n\n    if (isCycleTask) {\n      const newRecord = new CycleRecord()\n      newRecord.init(cycleGap, title, level)\n\n      if (!isStartNow && expectStartTime !== null) {\n        newRecord.setStartTime(expectStartTime)\n      }\n\n      if (isNeedExceptTime) {\n        newRecord.expectConsumes = expectTime * 3600 * 1000 // 单位小时，转换\n      } else {\n        newRecord.expectConsumes = -1 // 表示不设置时间\n      }\n\n      storeModel.addCycleRecord(newRecord)\n      storeModel.normalUpdate()\n    } else {\n      const newTask = new Task()\n      newTask.init(title)\n      newTask.level = level\n\n      if (!isStartNow && expectStartTime !== null) {\n        newTask.expectStartTime = expectStartTime\n      }\n\n      if (isNeedExceptTime) {\n        newTask.expectConsumes.push(expectTime * 3600 * 1000) // 单位小时，转换\n      } else {\n        newTask.expectConsumes.push(-1) // 表示不设置时间\n      }\n\n      storeModel.addTask(newTask)\n      storeModel.normalUpdate()\n    }\n\n    save()\n\n    setTitle(\"\")\n    setExpectStartTime(null)\n  }\n\n  function changeOffsetDay(isAdd: boolean) {\n    if (isAdd) {\n      setCurrentDayOffset(currentDayOffset + 1)\n    } else {\n      setCurrentDayOffset(currentDayOffset - 1)\n    }\n  }\n\n  function download() {\n    Utils.downloadFile(`DoingList_${Format.formatTimeInMsToFileName(Utils.getTimestamp())}.dl`, JSON.stringify(storeModel))\n  }\n\n  function upload(e: any) {\n    let file = e.target.files[0];\n    console.log(file)\n\n    let reader = new FileReader();\n    reader.onload = function (this) {\n      let uploadContent = this.result\n      if (typeof uploadContent === 'string') {\n        Modal.confirm({\n          title: '确定要导入嘛？',\n          content: `导入会覆盖当前所有任务`,\n          onOk() {\n            Modal.confirm({\n              title: '是否需要先下载当前任务？',\n              content: ``,\n              onOk() {\n                download()\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              },\n              onCancel() {\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              }\n            });\n          },\n        })\n      } else {\n        message.error(\"导入文件有问题，导入失败\")\n      }\n    }\n    //读取文件内容\n    reader.readAsText(file);\n  }\n\n  function getOffsetString() {\n    let base = \"\" + currentDayOffset\n    if (currentDayOffset > 0) {\n      base = \"+\" + base\n    }\n    return base\n  }\n\n  function getAllTaskStatus(): string {\n    let notDoneTasks = storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset)).filter((task) => { return !task.isDone() })\n\n    if (notDoneTasks.length === 0) {\n      return \"\"\n    }\n\n    let consumeFormat = \"\"\n    let consumes: number = notDoneTasks.map((task) => {\n      let left = task.getLeftExpectConsumeTime()\n      if (left < 0) return 0\n      return left\n    }).reduce((a, b) => a + b)\n\n    // console.log(\"getAllTaskStatus\" + consumes)\n    if (consumes > 0) {\n      consumeFormat = `，总剩余预估需要花费${Format.formatDuration(consumes)}`\n    }\n\n    return `共${notDoneTasks.length}个任务未完成${consumeFormat}`\n  }\n\n  function getMenu(): React.ReactElement {\n    return (\n      <Menu onClick={(param) => setLevel(Number(param.key))}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n\n  return (\n    <Container>\n\n      <Div style={{ flex: \"0 1 auto\" }}>\n        <ButtonGroup>\n          <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(false)}>←</Button>\n\n          <span style={{ backgroundColor: \"#ffffff\", padding: 4 }} >\n            {Format.formatTimeInDay(DateUtils.getMyCurrentDayStamp(currentDayOffset, DateUtils.dayOffset))}({getOffsetString()})\n        </span>\n\n          <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(true)}>→</Button>\n          <span style={{ paddingLeft: 10 }} ></span>\n          <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导出</Button>\n          <input type=\"file\" id=\"upload-file\" multiple onChange={(event) => upload(event)} />\n          {/* <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导入</Button> */}\n\n          <span style={{ backgroundColor: \"#ffffff\", padding: 4 }} >\n            需平衡时间：{-storeModel.totalAdjustConsumeTime / (3600 * 1000)}h\n        </span>\n\n        </ButtonGroup>\n\n        <Row style={{ margin: \"10px\" }}>\n          <Col flex=\"1 1 auto\">\n            <Input placeholder=\"输入任务，回车添加\" value={title} onChange={(event) => setTitle(event.target.value)} onPressEnter={onAddTask} />\n          </Col>\n          <Col flex=\"0 1 auto\">\n\n            <Dropdown overlay={getMenu()}>\n              <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                {formartLevel(level)} <DownOutlined />\n              </a>\n            </Dropdown>\n\n            {isNeedExceptTime &&\n              <Input style={{ width: '100px', marginLeft: \"15px\" }} value={expectTime} placeholder=\"花费时间\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} />\n            }\n\n            <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isNeedExceptTime} onChange={(event) => setNeedExceptTime(event)} />\n\n            <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"立刻开始\" unCheckedChildren=\"之后开始\" checked={isStartNow} onChange={(event) => setStartNow(event)} />\n\n            <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"长任务\" unCheckedChildren=\"短任务\" checked={isLongTask} onChange={(event) => setLongTask(event)} />\n\n            <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"周期\" unCheckedChildren=\"单个\" checked={isCycleTask} onChange={(event) => setCycleTask(event)} />\n\n          </Col>\n        </Row>\n\n        <Div style={{ margin: \"10px\", color: \"#ffffff\" }}>\n\n          {!isStartNow &&\n            <span style={{ marginLeft: \"15px\" }} >开始时间：\n        <DatePicker showTime value={expectStartTime} onOk={value => setExpectStartTime(moment(value.valueOf()))} /></span>\n          }\n\n          {isLongTask &&\n            <span style={{ marginLeft: \"15px\" }} >长任务：\n        <Input style={{ width: '100px' }} value={exceptWorkday} prefix=\"计划\" suffix=\"天\" onChange={(event) => setExceptWorkday(Number(event.target.value))} />\n              <Input style={{ width: '100px' }} value={exceptHoliDay} prefix=\"假期\" suffix=\"天\" onChange={(event) => setExceptHoliDay(Number(event.target.value))} />\n            </span>\n          }\n\n          {isCycleTask &&\n            <Input style={{ width: '100px', marginLeft: \"15px\" }} value={cycleGap} placeholder=\"1表示不间隔\" prefix=\"每\" suffix=\"天\" onChange={(event) => setCycleGap(Number(event.target.value))} />\n          }\n\n        </Div>\n\n        <span style={{ backgroundColor: \"#ffffff\", padding: 2, margin: \"10px\" }} >\n          {getAllTaskStatus()}\n        </span>\n\n      </Div>\n\n      <NoteList />\n    </Container>\n  );\n}\n\n\nconst NoteItem = styled.div`\n:hover{\n\t/* background-color:#b4e7fc; */\n  background-color: ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#ffffff'\n    }\n  }\n  };\nopacity : ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.isDone) {\n      return 0.15\n    } else {\n      return 1\n    }\n  }\n  };;\n`\nconst NoteList: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task) => void }\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n\n  useEffect(() => {\n    // console.log(\"NoteList useEffect\")\n\n    if (currentDoingTask === undefined) {\n      let doingTasks = storeModel.tasks.filter((value) => { return value.isDoing() })\n\n      if (doingTasks.length === 0) {\n        return\n      }\n\n      if (doingTasks.length > 1) {\n        console.error(`有 ${doingTasks.length} 个任务在运行中，自动关闭`)\n\n        for (let i = 1; i < doingTasks.length; i++) {\n          doingTasks[i].stop()\n        }\n      }\n\n      setCurrentDoingTask(doingTasks[0])\n    }\n  });\n\n  function onChooseNote(event: any, note: Task) {\n    event.preventDefault()\n    setCurrentTask(note)\n  }\n\n  const onClickMenu = (param: ClickParam, task: Task) => {\n    task.level = Number(param.key)\n\n    storeModel.normalUpdate()\n    save()\n\n    param.domEvent.preventDefault()\n\n    // 怎么阻止对 parent 的点击事件\n    // param.domEvent.stopPropagation()\n  };\n\n  function getMenu(task: Task): React.ReactElement {\n    return (\n      <Menu onClick={(param) => onClickMenu(param, task)}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n\n  function startTask(event: any, task: Task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n      return\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop()\n    }\n\n    task.start()\n    setCurrentDoingTask(task)\n    storeModel.normalUpdate()\n    save()\n  }\n\n  function getShowTips(task: Task): string {\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  return (\n    <Container2>\n      <List\n        size=\"small\"\n        style={{ backgroundColor: 'white', margin: \"1%\" }}\n        bordered\n        dataSource={storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset))}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => onChooseNote(e, task)} isDone={task.isDone()} onDoubleClick={(e) => startTask(e, task)}>\n\n            <Row>\n              <Col flex=\"1 1 auto\">\n                <NoteItemInput key={task.id} task={task} />\n              </Col>\n              <Col flex=\"0 1 auto\">\n\n                {getShowTips(task)}\n                <Dropdown overlay={getMenu(task)}>\n                  <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                    {formartLevel(task.level)} <DownOutlined />\n                  </a>\n                </Dropdown>\n\n                <Button onClick={(e) => startTask(e, task)}>Start</Button>\n\n              </Col>\n            </Row>\n\n          </NoteItem>\n        )}\n      />\n    </Container2>\n  );\n}\n\nfunction formartLevel(level: number): string {\n  switch (level) {\n    case 1:\n      return \"🌟\"\n    case 2:\n      return \"🎏\"\n    case 3:\n      return \"3️⃣\"\n    case 4:\n      return \"4️\"\n    case 5:\n      return \"5️\"\n    default:\n      return \"\"\n  }\n\n  // switch (level) {\n  //   case 1:\n  //     return \"🥇\"\n  //   case 2:\n  //     return \"🥈\"\n  //   case 3:\n  //     return \"🥉\"\n  //   case 4:\n  //     return \"4️⃣\"\n  //   case 5:\n  //     return \"5️\"\n  //   default:\n  //     return \"\"\n  // }\n}\n\ninterface NoteItemInputProps {\n  task: Task;\n}\n\nconst NoteItemInput: React.FC<NoteItemInputProps> = (props) => {\n  const [content, setContent] = useState(props.task.title)\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n\n  function saveTaskTitle(event: any) {\n    props.task.title = content\n    save()\n  }\n\n  return (\n    <Input style={{ background: \"#ffffff70\", fontWeight: \"bold\" }} value={content} onChange={(e) => setContent(e.target.value)} onBlur={saveTaskTitle} />\n  );\n}\n\nexport default TaskListContainer;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration, TimeLine, AdjustConsume } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport MomentUtils from '../utils/MomentUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n  const [timeline, setTimeline] = useState(\"\")\n\n  const [isExpectConsume, setExpectConsumeUI] = useState(false);\n  const [expectTime, setExpectTime] = useState(-1);\n\n  const [newAdjustTime, setNewAdjustTime] = useState(\"\");\n\n  const [isHaveDeadline, setHaveDeadlineUI] = useState(false);\n  const [deadline, setDeadlineUI] = useState<any>(null);\n\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState<any>(null);\n\n  const [expectStartTime, setExpectStartTimeUI] = useState<any>(null);\n\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      // todo 这部分逻辑抽出去\n      const expectTime = currentTask.getActualExpectConsume()\n      if (expectTime < 0) {\n        setExpectTime(expectTime)\n        setExpectConsume(false)\n      } else {\n        setExpectConsume(true)\n        setExpectTime(expectTime / (3600 * 1000))\n      }\n\n      setNewAdjustTime(\"\")\n\n      setPendingUI(currentTask.isPending())\n      setPendingReason(currentTask.pendingReason)\n      setPendingTimeUI(getPendingDeadlineTime(currentTask))\n\n      setDeadlineUI(getDeadlineTime(currentTask))\n      setHaveDeadline(currentTask.isHaveDeadline())\n\n      if (currentTask !== undefined && !currentTask.isStarted()) {\n        setExpectStartTimeUI(moment(currentTask.expectStartTime))\n      } else {\n        setExpectStartTimeUI(null)\n      }\n\n      storeModel.normalUpdate()\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.normalUpdate()\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    setDeadlineUI(getDeadlineTime(currentTask))\n    save()\n  }\n\n  function getDeadlineTime(task: Task): any {\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task) + TaskInfoFormat.getStartExpected(task)\n    return result\n  }\n\n  function setAdjustTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    const newAdjustTimeHours = Number(newAdjustTime)\n    if (newAdjustTimeHours === 0 || newAdjustTimeHours === NaN) {\n      message.error(`请输入合法数字`)\n      return\n    }\n\n    const newAdjustTimeMills = newAdjustTimeHours * 3600 * 1000\n\n    if (newAdjustTimeMills + task.getAllDuration() < 0) {\n      message.error(`调整时间超过已消耗时间`)\n      return\n    }\n\n    task.adjusts.push(AdjustConsume.create(newAdjustTimeMills))\n    storeModel.totalAdjustConsumeTime += newAdjustTimeMills\n\n    let msg = \"\"\n    if (newAdjustTimeHours > 0) {\n      msg = `增加 ${newAdjustTimeHours} `\n    } else {\n      msg = `减少 ${-newAdjustTimeHours} `\n    }\n    message.success(`耗时已${msg}小时`)\n\n    setNewAdjustTime(\"\")\n\n    save()\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000)\n    }\n\n    save()\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onChoosePendingDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`)\n      return\n    }\n\n    const pendingLine = value.valueOf()\n    if (!isTimeValid(pendingLine, \"Pending时间\", Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    task.pendingDeadline = pendingLine\n    setPendingTimeUI(getPendingDeadlineTime(task))\n    save()\n  }\n\n  function onChangeExpectStartTime(value: any, task: Task) {\n    const expectStartTime = value.valueOf()\n\n    if (!isTimeValid(expectStartTime, \"预期开始时间\", Duration.create(undefined, task.pendingDeadline, \"PendLine\"), Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    setExpectStartTimeUI(expectStartTime)\n    task.expectStartTime = expectStartTime\n    save()\n  }\n\n  function isTimeValid(time: number, timeName: string, ...limitDurations: Duration[]): boolean {\n    let isValid = true\n    for (let index = 0; index < limitDurations.length; index++) {\n      const dur = limitDurations[index];\n      if (dur.start > 0 && time < dur.start) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})早于${dur.start}(${Format.formatTimeInMinute(dur.start)})，请重新设置`)\n        isValid = false\n      } else if (dur.end > 0 && time > dur.end) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})晚于${dur.end}(${Format.formatTimeInMinute(dur.end)})，请重新设置`)\n        isValid = false\n      }\n      if (!isValid) {\n        return false\n      }\n    }\n    return true\n  }\n\n  function getPendingDeadlineTime(task: Task): any {\n    const deadline = task.pendingDeadline\n\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    task.pendingReason = pendingReason\n    save()\n  }\n\n  function setPending(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1\n      setPendingTimeUI(null)\n      save()\n    }\n    setPendingUI(pendingStatus)\n  }\n\n  function setExpectConsume(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      task.expectConsumes.push(-1)\n      setExpectTime(-1)\n      save()\n    }\n    setExpectConsumeUI(pendingStatus)\n  }\n\n  function setHaveDeadline(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      task.deadlines.push(-1)\n      setDeadlineUI(null)\n      save()\n    }\n    setHaveDeadlineUI(pendingStatus)\n  }\n\n  function onAddTimeline(event: any) {\n    event.preventDefault();\n\n    if (currentTask === undefined) return\n\n    if (Utils.isStringEmpty(timeline)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    const endTimeline = currentTask.note.endTimeLine();\n    if (endTimeline == null || !DateUtils.isSameDay(endTimeline.timeStamp, Utils.getTimestamp())) {\n      currentTask.note.timeLines.push(TimeLine.createDivNode())\n    }\n\n    currentTask.note.timeLines.push(TimeLine.createContentNode(timeline))\n\n    save()\n\n    setTimeline(\"\")\n  }\n\n  /* ---------------------------------------------------------- */\n\n  if (currentTask === undefined) return null\n\n  return (\n    <Container >\n      {/* 不加这个 div 会换行 */}\n      {currentTask !== undefined &&\n        <Div style={{ margin: \"5px\" }}>\n          <ButtonGroup>\n            {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n            <Button onClick={(e) => deleteTask(e)}>D</Button>\n            {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n            <Button onClick={(e) => doneTask(e)}>Done</Button>\n          </ButtonGroup>\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isExpectConsume} onChange={(event) => setExpectConsume(event)} />\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"截止时间\" unCheckedChildren=\"没有截止\" checked={isHaveDeadline} onChange={(event) => setHaveDeadline(event)} />\n\n          <Switch style={{ marginLeft: '9px', marginRight: '5px' }} checkedChildren=\"Pending\" unCheckedChildren=\"NoPend\" checked={isPending} onChange={(event) => setPending(event)} />\n\n        </Div>\n      }\n\n\n      <div style={{ marginLeft: \"15px\", marginRight: \"15px\", fontWeight: \"bold\" }} >{getShowTips()}</div>\n\n\n      {currentTask !== undefined &&\n        <Div style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n          {expectStartTime !== null &&\n            <span style={{ marginLeft: \"15px\" }} >预期开始时间：\n          <DatePicker showTime value={expectStartTime} onOk={value => onChangeExpectStartTime(value, currentTask)} />\n            </span>\n          }\n\n          {currentTask.isStarted() &&\n            <Input style={{ marginLeft: \"15px\", width: '150px' }} value={newAdjustTime} placeholder={`${currentTask.allAdjusts() / (3600 * 1000)} 回车保存`} prefix=\"调整耗时\" suffix=\"h\" onChange={(event) => setNewAdjustTime(event.target.value)} onPressEnter={setAdjustTime} />\n          }\n\n          {isExpectConsume &&\n            <span style={{ marginLeft: \"15px\" }} >估时：\n        <Input style={{ width: '100px' }} value={expectTime} placeholder=\"花费时间 自动保存\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onBlur={changeExceptTime} />\n            </span>\n          }\n\n\n          {isHaveDeadline &&\n            <span style={{ marginLeft: \"15px\" }} >DeadLine：\n        <DatePicker showTime value={deadline} onOk={value => onChooseDeadline(value)} />\n            </span>\n          }\n\n          {isPending &&\n            <span style={{ marginLeft: \"15px\" }} >Pending：\n      <DatePicker showTime value={pendingTime} onOk={value => onChoosePendingDeadline(value)} />\n\n              <Input style={{ width: '200px' }} value={pendingReason} prefix=\"原因:\" placeholder=\"（自动保存）\" onChange={(event) => setPendingReason(event.target.value)} onBlur={savePendingStatus} />\n            </span>\n          }\n\n        </Div>\n      }\n\n\n      {currentTask !== undefined &&\n        <Div style={{ marginLeft: \"15px\", marginRight: \"15px\" }} >\n          <Input placeholder=\"输入时间线，回车添加\" value={timeline} onChange={(event) => setTimeline(event.target.value)} onPressEnter={onAddTimeline} />\n          <Div style={{ height: \"250px\", overflow: \"scroll\", whiteSpace: \"pre-wrap\" }}>\n            {currentTask.note.getFormartTimeLines()}\n          </Div>\n        </Div>\n      }\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List } from 'antd';\nimport { StoreModel, Task, Duration, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport TimelineItem from 'antd/lib/timeline/TimelineItem';\n\n\nconst Div = styled.div`\nheight: 55vh;\noverflow-y: scroll;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n/* background-color:rgb(227, 233, 231); */\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst TimeLineLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  function getTimelines(): string {\n    return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n      .flatMap((task) => task.note.timeLines.map((timeline) => {\n        return timeline.getTitled(task.title)\n      })).sort((a, b) => {\n        if (a.timeStamp > b.timeStamp) {\n          return -1\n        } else if (a.timeStamp < b.timeStamp) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n      .map((timeline) => {\n        if (timeline.isDivder) {\n          return \"\"\n        } else {\n          return `${Format.formatTimeInSecond2(timeline.timeStamp)} ${timeline.content} \\n`\n        }\n      }).join(\"\")\n  }\n\n  function getCurrentDayDoingTasks(): TimeLine[] {\n    return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n      .flatMap((task) => task.note.timeLines.map((timeline) => {\n        return timeline.getTitled(task.title)\n      })).sort((a, b) => {\n        if (a.timeStamp > b.timeStamp) {\n          return -1\n        } else if (a.timeStamp < b.timeStamp) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      ).filter((timeline) => !timeline.isDivder)\n  }\n\n  const NoteItem = styled.div`\npadding-top:1px;\npadding-bottom:1px;\npadding-left:2px;\npadding-right:2px;\n:hover{\nbackground-color: #a2e3cd;\n};\nbackground-color:#e3e9e7;\n`\n\n  return (\n    <Div>\n      <List\n        size=\"small\"\n        bordered\n        dataSource={getCurrentDayDoingTasks()}\n        renderItem={timeline => (\n          <NoteItem key={timeline.timeStamp} >\n            {/* <span style={{ color: \"#ffffff\" }}>{Format.formatTimeInSecond2(timeline.timeStamp)}</span>  */}\n            <span style={{ color: \"#e5b33c\" }}>{Format.formatTimeInSecond2(timeline.timeStamp)}</span> \n            <span style={{ color: \"#229a72\" }}> {timeline.title} </span> \n            {timeline.content}\n          </NoteItem>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TimeLineLayout;\n","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List } from 'antd';\nimport { StoreModel, Task, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\n\n\n\nconst Div = styled.div`\nheight: 45vh;\noverflow-y: scroll;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst NoteItem = styled.div`\npadding:2px;\nmargin:1px;\n:hover{\n  background-color: ${(props: { choosed: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return 'rgba(194, 226, 255, 0.495)'\n    }\n  }\n  };\n\n`\n\nconst TodayWorkConatiner: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task) => void }\n\n  function getCurrentDayDoingTasks(): Task[] {\n    return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(0))\n      .sort((a, b) => {\n        if (a.lastStartTime() > b.lastStartTime()) {\n          return -1\n        } else if (a.lastStartTime() < b.lastStartTime()) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n  }\n\n  return (\n    <Div>\n      <List\n        size=\"small\"\n        bordered\n        dataSource={getCurrentDayDoingTasks()}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => setCurrentTask(task)}>\n            {task.title} <span style={{ color:\"#0295d2\" }}>{Format.formatDuration3(task.getAllDurationInDur(DateUtils.getMyCurrentDayDur(0)))}</span>\n          </NoteItem>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TodayWorkConatiner;\n","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport TaskListContainer from './TaskListContainer'\nimport ContentLayout from './ContentLayout'\nimport TimeLineLayout from './TimeLineLayout'\nimport TodayWorkConatiner from './TodayWorkConatiner';\n\n\nconst AppContainer = styled.div`\n  display: grid;\n  min-height: 100vh;\n  height: 100%;\n  width: 100%;\n  grid-template-columns: 40% 40% 20%;\n  grid-template-rows: 100%;\n`\n\nconst App: React.FC = () => {\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  return (\n    <AppContainer>\n      <TaskListContainer />\n      <ContentLayout />\n\n      <div>\n        <TimeLineLayout />\n        <TodayWorkConatiner />\n      </div>\n\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}