{"version":3,"sources":["utils/Format.ts","utils/Utils.ts","utils/DateUtils.ts","db/MainDB.ts","model/model.ts","stores/MainStore.ts","stores/CurrentTaskStore.ts","stores/CurrentDoingTaskStore.ts","stores/index.ts","stores/CurrentDayOffsetStore.ts","stores/SearchTextStore.ts","stores/SearchModeStore.ts","utils/TaskInfoFormat.ts","layouts/ConfigLayout.tsx","layouts/TaskListContainer.tsx","layouts/ContentLayout.tsx","layouts/TimeLineLayout.tsx","layouts/TodayWorkConatiner.tsx","layouts/App.tsx","serviceWorker.ts","index.tsx"],"names":["Format","timeMs","date","Date","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","time","天","Math","floor","小时","分","秒","Object","entries","filter","val","map","key","join","d","时","Utils","obj","content","transfer","document","createElement","style","cssText","body","appendChild","value","focus","select","execCommand","blur","removeChild","fileName","console","log","eleLink","download","display","blob","Blob","href","URL","createObjectURL","click","storeModel","downloadFile","formatTimeInMsToFileName","getTimestamp","JSON","stringify","getTime","src","regex","search","RegExp","regExp","random","toString","start1","end1","start2","end2","array","object","length","this","i","shift","pop","splice","DateUtils","hour","today","setHours","someStamp","day","dayZeroTime","offsetHour","result","Duration","init","end","dayMills","dur","startDay","getSomeDayStamp","start","endDay","push","offsetDay","dayOffset","getCurrentDayStamp","getOffsetedDayDur","getMyCurrentDayStamp","time1","time2","getDay","mainDB","tasks","cycleRecords","version","stores","table","transaction","a","clear","catch","e","alert","stack","task","dbId","id","title","put","modifyTime","jsonContent","callback","toArray","dbTags","plainToClass","Task","parse","adaptData","isDeleted","CycleRecord","Dexie","Type","Note","AdjustConsume","ChildTask","level","createTime","doneTime","pendingDeadline","pendingReason","deadlines","expectConsumes","expectStartTime","cycleId","generateId","idCounter","undefined","doingDurs","duration","currentTime","delay","isTimeDangers","getActualDeadline","isDangerousPending","isDangerousDeadline","deadline","index","getDur","reduce","b","allAdjusts","adjusts","adjust","limitDur","getLimitDur","allDurAdjusts","isIn","adjustTime","getActualExpectConsume","getAllDuration","timeline","timelines","note","timeLines","timeStamp","startOrEnd","isValid","childTask","childTasks","sort","isDone","order","name","isDoing","getDurDur","error","create","getJoin","max","min","_startTime","_gap","gap","startTime","getStartTime","getGap","newTask","formatTimeInDay2","TimeLine","hasTimeLine","lines","createStartEndAutoNode","flatMap","concat","all","getStartEndWrappedTimeLines","isDivder","addDivders","isStartEndAutoGen","copy","assign","t","getDurationCoveredDays","dayStamp","createDivNode","Config","totalAdjustConsumeTime","autoSaveGapInHour","lastAutoSaveTime","isImported","StoreModel","config","isNeedFuture","newTasks","sortTasks","find","taskDur","containsProject","cycleRecord","containsCycleRecord","forEach","record","isTimeToCreateTask2","isSameId","isTodayTask","getMyCurrentDayDur","createTask","addTask","saveTask","item","currentDay","invokeAddCycleTask","orderTasks","setTimeout","invokeAutoDownload","downloadModelFile","localStorage","setItem","isFutureTask","isDangerous","mainModel","fetchData","storageJson","getItem","fetchAllTasks","_onInitFinish","fetchAllCycleRecord","saveCycleRecord","importModel","model","deleteAll","saveConfig","currentTaskStore","currentTask","setCurrentTask","currentDoingTaskStore","currentDoingTask","setCurrentDoingTask","storeManager","Store","registerStore","mainmodel","currentDayOffset","setCurrentDayOffset","offset","searchText","setSearchText","searchMode","setSearchMode","TaskInfoFormat","formatDuration2","isStringEmpty","pendingStatus","getPendingStatus","getDeadlineStatus","leftTime","left","getLeftExpectConsumeTime","ConfigLayout","useStore","useState","visible","setVisible","setAutoSaveGapInHour","useEffect","type","size","onClick","onOk","event","onCancel","width","marginRight","multiple","onChange","file","target","files","reader","FileReader","onload","uploadContent","Modal","confirm","message","readAsText","upload","marginTop","placeholder","prefix","suffix","Number","Container","styled","div","Div","Container2","span","ButtonGroup","Input","Group","Button","AlertTips","props","NoteItem","choosed","isFuture","NoteList","doingTasks","stop","getMenu","param","normalUpdate","domEvent","preventDefault","onClickMenu","Item","startTask","formatTimeInMs","lastStartTime","backgroundColor","margin","bordered","dataSource","lowSearchText","toLowerCase","indexOf","getTasks","renderItem","isSameTask","onDoubleClick","align","flex","paddingLeft","getDoingStatusTips","getDeadline","getConsumeExpected","getShowTips","overlay","className","formartLevel","DownOutlined","marginLeft","NoteItemInput","setContent","background","fontWeight","onBlur","TaskListContainer","setTitle","searchTextUI","setSearchTextUI","isNeedExceptTime","setNeedExceptTimeUI","expectTime","setExpectTime","setLevel","isCycleTask","setCycleTaskUI","cycleGap","setCycleGap","isLongTask","setLongTaskUI","exceptWorkday","setExceptWorkday","exceptHoliDay","setExceptHoliDay","isStartNow","setStartNow","setExpectStartTime","setNeedExceptTime","setCycleTask","setLongTask","changeOffsetDay","isAdd","switchSearchMode","searchModeLocal","isSearchMode","padding","formatTimeInDay","base","getOffsetString","checkedChildren","unCheckedChildren","checked","onPressEnter","newRecord","setStartTime","valueOf","addCycleRecord","addResult","color","showTime","moment","notDoneTasks","consumeFormat","consumes","formatDuration","getAllTaskStatus","Editor","SimpleMDE","EditorContainer","TimeLinesContainer","ChildTaskItem","DeleteBtn","isHover","ChildTaskBtn","ContentLayout","setTimeline","childTaskInput","setChildTaskInput","isExpectConsume","setExpectConsumeUI","newAdjustTime","setNewAdjustTime","isHaveDeadline","setHaveDeadlineUI","setDeadlineUI","isPending","setPendingUI","setPendingReason","pendingTime","setPendingTimeUI","hoverTimeline","hoverTask","setExpectStartTimeUI","lastTask","setLastTask","_realDone","done","success","getDeadlineTime","isTimeValid","timeName","formatTimeInMinute","getPendingDeadlineTime","setExpectConsume","isOnlyRender","setHaveDeadline","onOrderChildTask","addOrder","downOrder","isStarted","editorRef","React","useRef","$codeMirror","querySelector","editorDom","current","setAttribute","clientHeight","undoneChildTask","doneTask","setPending","getConsumed","getStartExpected","marginBottom","onChangeExpectStartTime","newAdjustTimeHours","NaN","newAdjustTimeMills","msg","onChooseDeadline","pendingLine","onChoosePendingDeadline","createContentNode","getFormartTimeLines","getKey","paddingRight","formatTimeInSecond","removeDuration","removeTimeline","onDeleteTimeline","onAddChildTask","getOrderedChildTasks","reStart","onDoneChildTask","onPendChildTask","removeChildTask","onDeleteChildTask","isManual","info","saveToLocal","ref","options","spellChecker","hideIcons","TimeLineLayout","timelineSize","setTimelineSize","defaultValue","getTitled","slice","getCurrentDayDoingTasksTimelines","verticalAlign","maxWidth","whiteSpace","overflow","textOverflow","TodayWorkConatiner","getCurrentDayDoingTasks","formatDuration3","getAllDurationInDur","AppContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6YAkKeA,G,mHAjKkBC,GACzB,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAIF,EAAKG,cAAgB,IACzBC,GAAKJ,EAAKK,WAAa,EAAI,GAAK,KAAOL,EAAKK,WAAa,GAAKL,EAAKK,WAAa,GAAK,IACrFC,GAAKN,EAAKO,UAAY,GAAK,IAAOP,EAAKO,UAAaP,EAAKO,WAAa,IACtEC,GAAKR,EAAKS,WAAa,GAAK,IAAMT,EAAKS,WAAaT,EAAKS,YAAc,IACvEC,GAAKV,EAAKW,aAAe,GAAK,IAAMX,EAAKW,aAAeX,EAAKW,cAAgB,IAC7EC,GAAKZ,EAAKa,aAAe,GAAK,IAAMb,EAAKa,aAAeb,EAAKa,cAAgB,IAG7EC,EAAKd,EAAKe,kBASd,MAAO,IAAMb,EAAIE,EAAIE,EAAIE,EAAIE,EAAIE,GAR7BE,EAAK,GACM,KAAOA,EACXA,EAAK,IACD,IAAMA,EAEN,GAAKA,GAG4B,M,+CAGbf,GACnC,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAIF,EAAKG,cAAgB,IACzBC,GAAKJ,EAAKK,WAAa,EAAI,GAAK,KAAOL,EAAKK,WAAa,GAAKL,EAAKK,WAAa,GAAK,IACrFC,GAAKN,EAAKO,UAAY,GAAK,IAAOP,EAAKO,UAAaP,EAAKO,WAAa,IACtEC,GAAKR,EAAKS,WAAa,GAAK,IAAMT,EAAKS,WAAaT,EAAKS,YAAc,IACvEC,GAAKV,EAAKW,aAAe,GAAK,IAAMX,EAAKW,aAAeX,EAAKW,cAAgB,IAC7EC,GAAKZ,EAAKa,aAAe,GAAK,IAAMb,EAAKa,aAAeb,EAAKa,cAAgB,IAG7EC,EAAKd,EAAKe,kBASd,OAAOb,EAAIE,EAAIE,EAAIE,EAAIE,EAAIE,GARvBE,EAAK,GACM,KAAOA,EACXA,EAAK,IACD,IAAMA,EAEN,GAAKA,K,yCAMSf,GAC7B,IAAIC,EAAO,IAAIC,KAAKF,GAOpB,OANQC,EAAKG,cAAgB,MACpBH,EAAKK,WAAa,EAAI,GAAK,KAAOL,EAAKK,WAAa,GAAKL,EAAKK,WAAa,GAAK,OAChFL,EAAKO,UAAY,GAAK,IAAOP,EAAKO,UAAaP,EAAKO,WAAa,OACjEP,EAAKS,WAAa,GAAK,IAAMT,EAAKS,WAAaT,EAAKS,YAAc,MAClET,EAAKW,aAAe,GAAK,IAAMX,EAAKW,aAAeX,EAAKW,gB,yCAMpCZ,GAC7B,IAAIC,EAAO,IAAIC,KAAKF,GAMpB,MAAO,MAJEC,EAAKS,WAAa,GAAK,IAAMT,EAAKS,WAAaT,EAAKS,YAAc,OAClET,EAAKW,aAAe,GAAK,IAAMX,EAAKW,aAAeX,EAAKW,cAAgB,MACxEX,EAAKa,aAAe,GAAK,IAAMb,EAAKa,aAAeb,EAAKa,cAExC,M,0CAIKd,GAC9B,IAAIC,EAAO,IAAIC,KAAKF,GAKpB,MAAO,MAHEC,EAAKS,WAAa,GAAK,IAAMT,EAAKS,WAAaT,EAAKS,YAAc,MAClET,EAAKW,aAAe,GAAK,IAAMX,EAAKW,aAAeX,EAAKW,cAE3C,M,0CAIQZ,GAC9B,IAAIC,EAAO,IAAIC,KAAKF,GAOpB,MAAO,MALEC,EAAKO,UAAY,GAAK,IAAOP,EAAKO,UAAaP,EAAKO,WAAa,OACjEP,EAAKS,WAAa,GAAK,IAAMT,EAAKS,WAAaT,EAAKS,YAAc,OAClET,EAAKW,aAAe,GAAK,IAAMX,EAAKW,aAAeX,EAAKW,cAAgB,MACxEX,EAAKa,aAAe,GAAK,IAAMb,EAAKa,aAAeb,EAAKa,cAEpC,M,sCAIHd,GAC1B,IAAIC,EAAO,IAAIC,KAAKF,GAIpB,OAHQC,EAAKG,cAAgB,MACpBH,EAAKK,WAAa,EAAI,GAAK,KAAOL,EAAKK,WAAa,GAAKL,EAAKK,WAAa,GAAK,MAChFL,EAAKO,UAAY,GAAK,IAAOP,EAAKO,UAAaP,EAAKO,a,uCAKlCR,GAC3B,IAAIC,EAAO,IAAIC,KAAKF,GAGpB,OAFSC,EAAKK,WAAa,EAAI,GAAK,KAAOL,EAAKK,WAAa,GAAKL,EAAKK,WAAa,GAAK,KAChFL,EAAKO,UAAY,GAAK,IAAOP,EAAKO,UAAaP,EAAKO,a,qCAIpCR,GACrBA,EAAS,IAAGA,GAAUA,GAE1B,IAAMiB,EAAO,CACTC,SAAGC,KAAKC,MAAMpB,EAAS,OACvBqB,eAAIF,KAAKC,MAAMpB,EAAS,MAAW,GACnCsB,SAAGH,KAAKC,MAAMpB,EAAS,KAAS,GAChCuB,SAAGJ,KAAKC,MAAMpB,EAAS,KAAQ,IAInC,OAAOwB,OAAOC,QAAQR,GACjBS,QAAO,SAAAC,GAAG,OAAe,IAAXA,EAAI,MAClBC,KAAI,mCAAEC,EAAF,KAAOF,EAAP,qBAAmBA,GAAnB,OAAyBE,MAC7BC,KAAK,M,sCAGgB9B,GACtBA,EAAS,IAAGA,GAAUA,GAE1B,IAAMiB,EAAO,CACTc,EAAGZ,KAAKC,MAAMpB,EAAS,OACvBS,EAAGU,KAAKC,MAAMpB,EAAS,MAAW,GAClCW,EAAGQ,KAAKC,MAAMpB,EAAS,KAAS,GAChCa,EAAGM,KAAKC,MAAMpB,EAAS,KAAQ,IAWnC,OARIiB,EAAKc,EAAI,IACTd,EAAKN,EAAI,EACTM,EAAKJ,EAAI,GAETI,EAAKR,EAAI,IACTQ,EAAKJ,EAAI,GAGNW,OAAOC,QAAQR,GACjBS,QAAO,SAAAC,GAAG,OAAe,IAAXA,EAAI,MAClBC,KAAI,mCAAEC,EAAF,KAAOF,EAAP,qBAAmBA,GAAnB,OAAyBE,MAC7BC,KAAK,M,sCAGgB9B,GACtBA,EAAS,IAAGA,GAAUA,GAE1B,IAAMiB,EAAO,CACTe,SAAGb,KAAKC,MAAMpB,EAAS,MAAW,GAClCsB,SAAGH,KAAKC,MAAMpB,EAAS,KAAS,IAGpC,OAAOwB,OAAOC,QAAQR,GACjBS,QAAO,SAAAC,GAAG,OAAe,IAAXA,EAAI,MAClBC,KAAI,mCAAEC,EAAF,KAAOF,EAAP,qBAAmBA,GAAnB,OAAyBE,MAC7BC,KAAK,Q,MC5DHG,E,2GA9FiBC,GACxB,MAAmB,qBAARA,GAA+B,OAARA,GAAwB,KAARA,I,+CAOfC,GACnC,IAAIC,EAAWC,SAASC,cAAc,YAEtCF,EAASG,MAAMC,QAAU,oOACzBH,SAASI,KAAKC,YAAYN,GAC1BA,EAASO,MAAQR,EACjBC,EAASQ,QACTR,EAASS,SACLR,SAASS,YAAY,SACrBT,SAASS,YAAY,QAEzBV,EAASW,OACTV,SAASI,KAAKO,YAAYZ,K,mCAGHa,EAAkBd,GACzCe,QAAQC,IAAI,YAEZ,IAAIC,EAAUf,SAASC,cAAc,KACrCc,EAAQC,SAAWJ,EACnBG,EAAQb,MAAMe,QAAU,OAExB,IAAIC,EAAO,IAAIC,KAAK,CAACrB,IACrBiB,EAAQK,KAAOC,IAAIC,gBAAgBJ,GAEnClB,SAASI,KAAKC,YAAYU,GAC1BA,EAAQQ,QAERvB,SAASI,KAAKO,YAAYI,K,wCAIES,GAC5B5B,EAAM6B,aAAN,oBAAgC/D,EAAOgE,yBAAyB9B,EAAM+B,gBAAtE,OAA4FC,KAAKC,UAAUL,M,mCAI3G,OAAQ,IAAI3D,MAAQiE,Y,qCAKpB,OAAQ,IAAIjE,MAAQiE,Y,4BAGJC,EAAaC,GAC7B,OAAOD,EAAIE,OAAO,IAAIC,OAAOF,EAAO,OAAS,I,6BAI5BD,EAAaI,GAC9B,OAAOJ,EAAIE,OAAOE,IAAW,I,uCAI7B,MAAO,KAAuB,SAAhBrD,KAAKsD,UAAuB,GAAGC,SAAS,M,sCAG5BC,EAAgBC,EAAcC,EAAgBC,GAExE,QAAIA,EAAOH,GAAUC,EAAOC,K,mCAOLE,EAAcC,GAErC,IADA,IAAIC,EAASC,KAAKD,OACTE,EAAI,EAAGA,EAAIF,EAAQE,IACxB,GAAIJ,EAAMI,KAAOH,EAQb,OAPU,IAANG,EACAJ,EAAMK,QACCD,IAAMF,EAAS,EACtBF,EAAMM,MAENN,EAAMO,OAAOH,EAAG,IAEb,EAIf,OAAO,M,aC5FTI,E,gHAK+BC,GAC7B,IAAIC,EAAQ,IAAIvF,KAEhB,OADAuF,EAAMC,SAASF,EAAM,EAAG,EAAG,GACpBC,EAAMtB,Y,sCAIawB,EAAmBH,GAC7C,IAAII,EAAM,IAAI1F,KAAKyF,GAEnB,OADAC,EAAIF,SAASF,EAAM,EAAG,EAAG,GAClBI,EAAIzB,Y,wCAKiB0B,EAAqBC,GACjD,IAAIF,EAAM,IAAI1F,KAAK2F,GACnBD,EAAIF,SAASI,EAAY,EAAG,EAAG,GAE/B,IAAIC,EAAS,IAAIC,GAGjB,OAFAD,EAAOE,KAAKL,EAAIzB,WAChB4B,EAAOG,IAAMN,EAAIzB,UAAYoB,EAAUY,SAChCJ,I,6CAI0BK,GACjC,IAAIC,EAAWd,EAAUe,gBAAgBF,EAAIG,MAAO,GAC9CC,EAASjB,EAAUe,gBAAgBF,EAAIF,IAAK,GAC5CH,EAAS,GAEf,IADAA,EAAOU,KAAKJ,GACLA,EAAWG,GACdH,GAAYd,EAAUY,SACtBJ,EAAOU,KAAKJ,GAGhB,OADAN,EAAOU,KAAKD,GACLT,I,2CAQwBW,EAAmBC,GAKlD,OAJU,IAAIzG,MAAOiE,UAEHoB,EAAUqB,mBAAmBD,GAGpCpB,EAAUqB,mBAAmB,GAAKrB,EAAUY,SAAWO,EAEvDnB,EAAUqB,mBAAmB,GAAKrB,EAAUY,SAAWZ,EAAUY,SAAWO,I,yCAO1DA,GAC7B,OAAOnB,EAAUsB,kBAAkBtB,EAAUuB,qBAAqBJ,EAAWnB,EAAUoB,WAAYpB,EAAUoB,a,0CAM/ED,GAC9B,OAAOnB,EAAUsB,kBAAkBtB,EAAUuB,qBAAqBJ,EAAW,GAAI,K,gCAG7DK,EAAeC,GACnC,OAAO,IAAI9G,KAAK6G,GAAOE,WAAc,IAAI/G,KAAK8G,GAAOC,a,KA5EvD1B,EACaY,SAAmB,MADhCZ,EAEYoB,UAAoB,EAgFvBpB,I,sCAAAA,I,2CCwBA2B,GAFA,I,kDAnFX,aAAsB,IAAD,8BACjB,cAAM,cAJHC,WAGc,IAFdC,kBAEc,EAIjB,EAAKC,QAAQ,GAAGC,OAAO,CACnBH,MAAO,sCACPC,aAAc,wCAElB,EAAKD,MAAQ,EAAKI,MAAM,SACxB,EAAKH,aAAe,EAAKG,MAAM,gBATd,E,wDAYF,IAAD,OACdrC,KAAKsC,YAAY,KAAMtC,KAAKiC,MAAOjC,KAAKkC,aAAxC,sBAAsD,sBAAAK,EAAA,sDAClD,EAAKN,MAAMO,QACX,EAAKN,aAAaM,QAFgC,4CAGnDC,OAAM,SAAAC,GACLC,MAAMD,EAAEE,OAASF,Q,+BAMTG,GAAa,IAAD,OACxB7C,KAAKsC,YAAY,KAAMtC,KAAKiC,MAA5B,sBAAmC,sBAAAM,EAAA,yDAG/BvE,QAAQC,IAAR,wBAA6B4E,EAAKC,KAAlC,eAA6CD,EAAKE,GAAlD,iBAA6DF,EAAKG,SAE9DH,EAAKC,KALsB,gCAMT,EAAKb,MAAMgB,IAAI,CAAEH,KAAMD,EAAKC,KAAMC,GAAIF,EAAKE,GAAIG,WAAYnG,EAAM+B,eAAgBqE,YAAapE,KAAKC,UAAU6D,KANpG,OAM3BA,EAAKC,KANsB,8CAQT,EAAKb,MAAMgB,IAAI,CAAEF,GAAIF,EAAKE,GAAIG,WAAYnG,EAAM+B,eAAgBqE,YAAapE,KAAKC,UAAU6D,KARnF,OAQ3BA,EAAKC,KARsB,oDAUhCL,OAAM,SAAAC,GACLC,MAAMD,EAAEE,OAASF,Q,oCAQJU,GAAmC,IAAD,OACnDpD,KAAKsC,YAAY,KAAMtC,KAAKiC,MAA5B,sBAAmC,4BAAAM,EAAA,sEACV,EAAKN,MAAMoB,UADD,OACzBC,EADyB,OAE/BF,EAASE,EAAO5G,KAAI,SAAAe,GAChB,IAAMoF,EAAOU,uBAAaC,GAAMzE,KAAK0E,MAAMhG,EAAM0F,cAGjD,OAFAN,EAAKC,KAAOrF,EAAMqF,KAClBD,EAAKa,YACEb,KACRrG,QAAO,SAAAqG,GAAI,OAAKA,EAAKc,cAPO,4CAQhClB,OAAM,SAAAC,GACLC,MAAMD,EAAEE,OAASF,Q,sCAQFG,GAAoB,IAAD,OACtC7C,KAAKsC,YAAY,KAAMtC,KAAKkC,aAA5B,sBAA0C,sBAAAK,EAAA,sEACpB,EAAKL,aAAae,IAAI,CAAEF,GAAIF,EAAKE,GAAIG,WAAYnG,EAAM+B,eAAgBqE,YAAapE,KAAKC,UAAU6D,KAD/E,OACtCA,EAAKC,KADiC,mDAEvCL,OAAM,SAAAC,GACLC,MAAMD,EAAEE,OAASF,Q,0CAIEU,GAA0C,IAAD,OAChEpD,KAAKsC,YAAY,KAAMtC,KAAKkC,aAA5B,sBAA0C,4BAAAK,EAAA,sEACjB,EAAKL,aAAamB,UADD,OAChCC,EADgC,OAEtCF,EAASE,EAAO5G,KAAI,SAAAe,GAChB,IAAMoF,EAAOU,uBAAaK,GAAa7E,KAAK0E,MAAMhG,EAAM0F,cAExD,OADAN,EAAKC,KAAOrF,EAAMqF,KACXD,MAL2B,4CAOvCJ,OAAM,SAAAC,GACLC,MAAMD,EAAEE,OAASF,U,UAlFRmB,ICXfL,I,EAQDM,gBAAK,kBAAMC,M,EAmBXD,gBAAK,kBAAME,M,EAGXF,gBAAK,kBAAMhD,M,EAGXgD,gBAAK,kBAAMG,M,qDA7BLlB,IAAc,E,KACrBD,U,OACOE,MAAgB,W,qCAKhBkB,MAAgB,E,KAEhBC,YAAsB,E,KACtBC,UAAoB,E,KAGpBC,iBAA2B,E,KAC3BC,cAAwB,G,KAGxBC,UAAsB,G,KAEtBC,eAA2B,G,KAE3BC,iBAA2B,E,mHAW3BC,SAAmB,E,KAEnBf,WAAqB,E,iDAWhBX,GACRhD,KAAKgD,MAAQA,EACbhD,KAAKmE,WAAapH,EAAM+B,eACxBkB,KAAKyE,gBAAkBzE,KAAKmE,WAE5BnE,KAAK+C,GAAKhG,EAAM4H,aAAenB,EAAKoB,UACpCpB,EAAKoB,UAAYpB,EAAKoB,UAAY,M,mCAIJ,IAA1B5E,KAAKyE,kBACLzE,KAAKyE,gBAAkBzE,KAAKmE,c,iCAIlBtB,GACd,YAAagC,IAAThC,GAGO7C,KAAK+C,KAAOF,EAAKE,K,gCAK5B,OAA8B,IAA1B/C,KAAK8E,UAAU/E,SAIU,IADVC,KAAK8E,UAAU9E,KAAK8E,UAAU/E,OAAS,GACtCiB,M,oCAKpB,OAAyB,IAAlBhB,KAAK0E,U,kCAIZ,OAAiC,IAA1B1E,KAAK8E,UAAU/E,S,sCAItB,OAA8B,IAA1BC,KAAK8E,UAAU/E,QACP,EAEOC,KAAK8E,UAAU9E,KAAK8E,UAAU/E,OAAS,GACtCsB,Q,8BAKpB,IAAI0D,EAAW,IAAIjE,GACbkE,EAAcjI,EAAM+B,eAC1BiG,EAAShE,KAAKiE,GACdhF,KAAK8E,UAAUvD,KAAKwD,GAEhBC,EAAchF,KAAKyE,kBACnBzE,KAAKyE,gBAAkBO,K,6BAM3BhF,KAAK8E,UAAU9E,KAAK8E,UAAU/E,OAAS,GAAGiB,IAAMjE,EAAM+B,eAAiB,I,gCAG1DmG,GACbjF,KAAK8E,UAAU9E,KAAK8E,UAAU/E,OAAS,GAAGiB,IAAMjE,EAAM+B,eAAiBmG,I,+BAIvE,OAA0B,IAAnBjF,KAAKoE,W,mCAGIlD,GAChB,OAAOlB,KAAKyE,gBAAkBvD,EAAIF,M,kCAIlC,OAAiC,IAA1BhB,KAAKqE,kB,2CAIZ,OAAOrE,KAAKkF,cAAclF,KAAKqE,mB,4CAI/B,OAAOrE,KAAKkF,cAAclF,KAAKmF,uB,oCAI/B,OAAOnF,KAAKoF,sBAAwBpF,KAAKqF,wB,oCAMvBC,GAClB,QAAIA,GAAY,IAIZA,EAAWvI,EAAM+B,gBAAkB,O,6BAQvCkB,KAAKoE,SAAWrH,EAAM+B,iB,uCAKO,IAAD,OAC5B,OAA8B,IAA1BkB,KAAK8E,UAAU/E,OACR,EAGJC,KAAK8E,UAAUpI,KAAI,SAACe,EAAO8H,GAAR,OAAkB9H,EAAM+H,OAAOD,IAAU,EAAKT,UAAU/E,OAAS,MAAI0F,QAAO,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAImD,KAAK1F,KAAK2F,e,mCAI9H,OAA4B,IAAxB3F,KAAK4F,QAAQ7F,OACN,EAEJC,KAAK4F,QAAQlJ,KAAI,SAACmJ,GAAD,OAAYA,EAAOA,UAAQJ,QAAO,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAImD,O,0CAGjDI,GAA6B,IAAD,OAEnD,OAA8B,IAA1B9F,KAAK8E,UAAU/E,OACR,EAGJC,KAAK8E,UACPpI,KAAI,SAACe,EAAO8H,GAAR,OAAkB9H,EAAMsI,YAAYR,IAAU,EAAKT,UAAU/E,OAAS,EAAG+F,MAC7EL,QAAO,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAImD,KACpB1F,KAAKgG,cAAcF,K,oCAGRA,GACjB,IAAMnK,EAAIqE,KAAK4F,QAAQpJ,QAAO,SAACqJ,GAAD,OAAYC,EAASG,KAAKJ,EAAOK,eAC/D,OAAiB,IAAbvK,EAAEoE,OACK,EAEJpE,EAAEe,KAAI,SAACmJ,GAAD,OAAYA,EAAOA,UAAQJ,QAAO,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAImD,O,0CAI7D,OAA8B,IAA1B1F,KAAKuE,UAAUxE,QACP,EAGLC,KAAKuE,UAAUvE,KAAKuE,UAAUxE,OAAS,K,uCAI9C,OAAOC,KAAKmF,oBAAsB,I,+CAIlC,OAAmC,IAA/BnF,KAAKwE,eAAezE,QACZ,EAGLC,KAAKwE,eAAexE,KAAKwE,eAAezE,OAAS,K,wCAIxD,OAAOC,KAAKmG,yBAA2B,I,iDAavC,OAPWnG,KAAKmG,yBAA2BnG,KAAKoG,mB,qCAW9BC,GAGlB,IAFA,IAAMC,EAAYtG,KAAKuG,KAAKC,UACxBzG,EAASuG,EAAUvG,OACdE,EAAI,EAAGA,EAAIF,EAAQE,IACxB,GAAIqG,EAAUrG,GAAGwG,YAAcJ,EAASI,UAQpC,OAPU,IAANxG,EACAqG,EAAUpG,QACHD,IAAMF,EAAS,EACtBuG,EAAUnG,MAEVmG,EAAUlG,OAAOH,EAAG,IAEjB,EAGf,OAAO,I,qCAIWyG,GAElB,IADA,IAAI3G,EAASC,KAAK8E,UAAU/E,OACnBE,EAAI,EAAGA,EAAIF,EAAQE,IACxB,GAAID,KAAK8E,UAAU7E,GAAG0G,SAAQ,KAAW3G,KAAK8E,UAAU7E,GAAGoB,QAAUqF,GAAc1G,KAAK8E,UAAU7E,GAAGe,MAAQ0F,GAQzG,OAPU,IAANzG,EACAD,KAAK8E,UAAU5E,QACRD,IAAMF,EAAS,EACtBC,KAAK8E,UAAU3E,MAEfH,KAAK8E,UAAU1E,OAAOH,EAAG,IAEtB,EAGf,OAAO,I,sCAGY2G,GAEnB,IADA,IAAI7G,EAASC,KAAK6G,WAAW9G,OACpBE,EAAI,EAAGA,EAAIF,EAAQE,IACxB,GAAID,KAAK6G,WAAW5G,GAAGkE,YAAcyC,EAAUzC,WAQ3C,OAPU,IAANlE,EACAD,KAAK6G,WAAW3G,QACTD,IAAMF,EAAS,EACtBC,KAAK6G,WAAW1G,MAEhBH,KAAK6G,WAAWzG,OAAOH,EAAG,IAEvB,EAGf,OAAO,I,6CAIP,OAAOD,KAAK6G,WAAWC,MAAK,SAACvE,EAAGmD,GAE5B,OAAInD,EAAEwE,WAAarB,EAAEqB,SACV,GACCxE,EAAEwE,UAAYrB,EAAEqB,UAIpBxE,EAAEyE,MAAQtB,EAAEsB,OAHR,EAKGzE,EAAEyE,MAAQtB,EAAEsB,MACZ,EAGHzE,EAAE4B,WAAauB,EAAEvB,YACT,EACD5B,EAAE4B,WAAauB,EAAEvB,WACjB,EAEA,S,OAnTZS,UAAY,E,kHAOP,IAAIb,M,gHAmBU,M,kHAGH,M,mHAGE,M,GA2R/BjD,G,iDACKO,OAAiB,E,KACjBL,KAAe,E,KACfiG,KAAe,G,iDAGV5F,GACRrB,KAAKqB,MAAQA,I,4BAEJA,EAAeL,GACxBhB,KAAKqB,MAAQA,OACFwD,GAAP7D,IACAhB,KAAKgB,IAAMA,K,2BAIPyF,GACR,OAAOA,GAAazG,KAAKqB,OAASoF,GAAazG,KAAKgB,M,+BAGP,IAAnCkG,EAAkC,wDACtChG,EAAMlB,KAAKmH,UAAUD,GAC3B,OAAY,OAARhG,EACO,EAEJA,EAAIF,IAAME,EAAIG,Q,kCAGoC,IAA5C6F,EAA2C,wDACpDlG,EAAMhB,KAAKgB,IAIf,OAHY,GAARA,GAAakG,IACblG,EAAMjE,EAAM+B,iBAEJ,GAARkC,GACAhD,QAAQoJ,MAAM,8CACP,MAEJtG,EAASuG,OAAOrH,KAAKqB,MAAOL,K,kCAMpBkG,EAAkBpB,GAA6B,IAAD,EACvD5E,EAAG,UAAGlB,KAAKmH,UAAUD,UAAlB,aAAG,EAAyBI,QAAQxB,GAC7C,OAAY,OAAR5E,QAAwB2D,IAAR3D,EACT,EAEJA,EAAIF,IAAME,EAAIG,Q,8BAGV6F,GACX,SAAKA,IAAwB,GAAblH,KAAKgB,O,8BAkBV8E,GACX,OAAI9F,KAAKgB,KAAO8E,EAASzE,OAASrB,KAAKqB,OAASyE,EAAS9E,IAC9C,KAGJF,EAASuG,OAAOpL,KAAKsL,IAAIzB,EAASzE,MAAOrB,KAAKqB,OAAQpF,KAAKuL,IAAI1B,EAAS9E,IAAKhB,KAAKgB,S,8BAnBxEK,EAAgBL,EAAciG,GAC/C,IAAI/F,EAAM,IAAIJ,EAUd,YATa+D,GAATxD,IACAH,EAAIG,MAAQA,QAELwD,GAAP7D,IACAE,EAAIF,IAAMA,QAEF6D,GAARoC,IACA/F,EAAI+F,KAAOA,GAER/F,M,KAYT8C,G,iDAEK6B,QAAkB,E,KAClBK,YAAsB,E,wDAERL,GACjB,IAAI3E,EAAM,IAAI8C,EAGd,OAFA9C,EAAI2E,OAASA,EACb3E,EAAIgF,WAAanJ,EAAM+B,eAChBoC,M,KAIT+C,G,iDACKgD,KAAe,G,KACf9C,YAAsB,E,KACtBC,UAAoB,E,KACpB4C,OAAiB,E,qDAUpB,OAA0B,IAAnBhH,KAAKoE,W,iCAIZ,OAAOpE,KAAKgH,U,kCAIZ,OAAOhH,KAAKgH,U,6BAIZhH,KAAKoE,SAAWrH,EAAM+B,iB,gCAItBkB,KAAKoE,UAAY,K,8BAxBA6C,GACjB,IAAI/F,EAAM,IAAI+C,EAGd,OAFA/C,EAAI+F,KAAOA,EACX/F,EAAIiD,WAAapH,EAAM+B,eAChBoC,M,KAwBT0C,G,iDACFd,U,OACOC,IAAc,E,KAGd0E,WAAuB,G,KAEvBC,KAAiB,G,KAGjB1E,MAAgB,W,KAChBkB,MAAgB,E,KAChBM,gBAA0B,E,iDAGrBmD,EAAa3E,EAAekB,GACpClE,KAAK+C,GAAKhG,EAAM4H,aAChB3E,KAAKgD,MAAQA,EACbhD,KAAKkE,MAAQA,EACblE,KAAK0H,KAAKnG,KAAKoG,GACf3H,KAAKyH,WAAWlG,KAAKxE,EAAM+B,kB,+BAI3B,OAAyB,IAArBkB,KAAK0H,KAAK3H,QACF,EAELC,KAAK0H,KAAK1H,KAAK0H,KAAK3H,OAAS,K,6BAG1B4H,GACV3H,KAAK0H,KAAKnG,KAAKoG,K,qCAIf,OAA+B,IAA3B3H,KAAKyH,WAAW1H,QACR,EAELC,KAAKyH,WAAWzH,KAAKyH,WAAW1H,OAAS,K,mCAGhC6H,GAChB5H,KAAKyH,WAAWlG,KAAKqG,K,2CAUrB,OAFkBvH,EAAUqB,mBAAmB,GAC/BrB,EAAUe,gBAAgBpB,KAAK6H,eAAgB,KACX,GAAhB7H,KAAK8H,SAAgB,KAAO,OAAU,I,4CAU1E,OAFkBzH,EAAUuB,qBAAqB,EAAGvB,EAAUoB,WAC9CpB,EAAUe,gBAAgBpB,KAAK6H,eAAgB,KACX,GAAhB7H,KAAK8H,SAAgB,KAAO,OAAU,I,mCAI1E,IAAMC,EAAU,IAAIvE,GAMpB,OALAuE,EAAQhH,KAAR,kBAAmBlG,EAAOmN,iBAAiB3H,EAAUuB,qBAAqB,EAAGvB,EAAUoB,YAAvF,aAAuGzB,KAAKgD,QAC5G+E,EAAQ7D,MAAQlE,KAAKkE,MACrB6D,EAAQvD,eAAejD,KAAKvB,KAAKwE,gBACjCuD,EAAQrD,QAAU1E,KAAK+C,GACvBgF,EAAQtD,gBAAkB1H,EAAM+B,eACzBiJ,M,KAIThE,I,EAGDD,gBAAK,kBAAMmE,M,mDAFLhL,QAAkB,G,+FAMrB,OAAiC,IAA1B+C,KAAKwG,UAAUzG,S,oCAItB,OAAKC,KAAKkI,cACHlI,KAAKwG,UAAUxG,KAAKwG,UAAUzG,OAAS,GADd,O,kDAOD+E,GAC/B,OAAOA,EAAUpI,KAAI,SAACwE,GAClB,IAAMiH,EAAoB,GAY1B,OAXIjH,EAAIG,MAAQ,GAEZ8G,EAAM5G,KAAK0G,GAASG,uBAAuB,iCAASlH,EAAIG,QAKxDH,EAAIF,IAAM,GAEVmH,EAAM5G,KAAK0G,GAASG,uBAAuB,iCAASlH,EAAIF,MAErDmH,KACRE,SAAQ,SAACF,GAAD,OAAWA,KAAOG,OAAOtI,KAAKwG,a,0CAGlB1B,GACvB,IAAMyD,EAAMvI,KAAKwI,4BAA4B1D,GACxCtI,QAAO,SAAC6J,GAAD,OAAeA,EAASoC,YAC/B3B,MAAK,SAACvE,EAAGmD,GACN,OAAInD,EAAEkE,UAAYf,EAAEe,WACR,EACDlE,EAAEkE,UAAYf,EAAEe,UAChB,EAEA,KAGnB,OAAOwB,GAASS,WAAWH,O,uHA5CA,M,GAgD7BN,G,iDACKxB,WAAqB,E,KACrBgC,UAAoB,E,KACpBxL,QAAkB,G,KAGlB+F,MAAgB,G,KAChB2F,mBAA6B,E,sDAwBnB3F,GACb,IAAM4F,EAAOtM,OAAOuM,OAAO,GAAI7I,MAG/B,OADA4I,EAAK5F,MAAQA,EACN4F,I,+BAIP,OAAO5I,KAAKyG,WAAazG,KAAKyI,UAAY,EAAI,M,yCA9BlBxL,GAC5B,IAAM6L,EAAI,IAAIb,EAGd,OAFAa,EAAErC,UAAY1J,EAAM+B,eACpBgK,EAAE7L,QAAUA,EACL6L,I,6CAG0B7L,EAAiBwJ,GAClD,IAAMqC,EAAI,IAAIb,EAId,OAHAa,EAAErC,UAAYA,EACdqC,EAAE7L,QAAUA,EACZ6L,EAAEH,mBAAoB,EACfG,I,oCAGiBrC,GACxB,IAAMqC,EAAI,IAAIb,EAGd,OAFAa,EAAErC,UAAYA,EACdqC,EAAEL,UAAW,EACNK,I,iCAcc5J,GACrB,OAAmB,IAAfA,EAAIa,OAAqB,GAEtBM,EAAU0I,uBAAuBjI,GAASuG,OAAOnI,EAAIA,EAAIa,OAAS,GAAG0G,UAAWvH,EAAI,GAAGuH,YACzF/J,KAAI,SAACsM,GACF,OAAOf,EAASgB,cAAcD,MAEjCV,OAAOpJ,GACP4H,MAAK,SAACvE,EAAGmD,GACN,OAAInD,EAAEkE,UAAYf,EAAEe,WACR,EACDlE,EAAEkE,UAAYf,EAAEe,UAChB,EAEA,KAIdjK,QAAO,SAAC6J,EAAUd,EAAO1F,GACtB,OAAIwG,EAASoC,WACI,GAATlD,IAIQ1F,EAAM0F,EAAQ,GAAGkD,iB,KAS3CS,G,sCACKC,uBAAiC,E,KAGjCC,mBAA6B,E,KAC7BC,kBAA4B,E,KAE5BC,YAAa,GAMlBC,I,EACDzF,gBAAK,kBAAMN,M,EAGXM,gBAAK,kBAAMF,M,4HAGL4F,OAAS,IAAIN,G,qDAOJhI,GAAsD,IAAvCuI,IAAsC,yDAC3DC,EAAY1J,KAAKiC,MAAMzF,QAAO,SAACiB,GACjC,OAAIgM,GACShM,EAAMsJ,UAAa7F,EAAI+E,KAAKxI,EAAM2G,WAElC3G,EAAMsJ,UAAYtJ,EAAMgH,iBAAmBvD,EAAIF,KAAQE,EAAI+E,KAAKxI,EAAM2G,aAEpF5H,QAAO,SAAAqG,GAAI,OAAKA,EAAKc,aAExB,OAAO3D,KAAK2J,UAAUD,EAAUxI,K,8CAGLA,GAC3B,OAAOlB,KAAKiC,MAAMzF,QAAO,SAACqG,GACtB,YAEOgC,IAFAhC,EAAKiC,UAAU8E,MAAK,SAACC,GACxB,OAAO3I,EAAI+E,KAAK4D,EAAQxI,gBAIjBwD,IAFJhC,EAAK+C,QAAQgE,MAAK,SAAC/D,GAClB,OAAO3E,EAAI+E,KAAKJ,EAAOK,oB,8BAKxBrD,GACX,OAAI7C,KAAK8J,gBAAgBjH,EAAKE,IAAY,eAC4B8B,IAAlE7E,KAAKiC,MAAM2H,MAAK,SAACd,GAAD,OAAQA,EAAE/B,UAAY+B,EAAE9F,QAAUH,EAAKG,SAA6B,cACxFhD,KAAKiC,MAAMV,KAAKsB,GACT,M,qCAGWkH,GACd/J,KAAKgK,oBAAoBD,EAAYhH,KACzC/C,KAAKkC,aAAaX,KAAKwI,K,2CAGE,IAAD,OACxB/J,KAAKkC,aAAa+H,SAAQ,SAAAC,GACtB,GAAIA,EAAOC,uBAMO,IALO,EAAKlI,MAAMzF,QAAO,SAACqG,GACpC,IAAMuH,EAAWvH,EAAK6B,UAAYwF,EAAOnH,GACnCsH,EAAchK,EAAUiK,mBAAmB,GAAGrE,KAAKpD,EAAKsB,YAE9D,OAAOiG,GAAYC,KACpBtK,OACe,CACd/B,QAAQC,IAAR,oCAAyCiM,EAAOlH,QAChD,IAAMH,EAAOqH,EAAOK,aACpB,EAAKC,QAAQ3H,GACbb,GAAOyI,SAAS5H,S,iCASdA,GACd,IAAK7C,KAAK8J,gBAAgBjH,EAAKE,IAAK,OAAO,EAG3C,IADA,IAAIhD,EAASC,KAAKiC,MAAMlC,OACfE,EAAI,EAAGA,EAAIF,EAAQE,IACxB,GAAID,KAAKiC,MAAMhC,GAAG8C,KAAOF,EAAKE,GAQ1B,OAPU,IAAN9C,EACAD,KAAKiC,MAAM/B,QACJD,IAAMF,EAAS,EACtBC,KAAKiC,MAAM9B,MAEXH,KAAKiC,MAAM7B,OAAOH,EAAG,IAElB,EAGf,OAAO,I,sCAGa8C,GACpB,YAAmD8B,IAA5C7E,KAAKiC,MAAM2H,MAAK,SAAAc,GAAI,OAAIA,EAAK3H,KAAOA,O,0CAGnBA,GACxB,YAA0D8B,IAAnD7E,KAAKkC,aAAa0H,MAAK,SAAAc,GAAI,OAAIA,EAAK3H,KAAOA,O,mCAIlC4H,GAAuB,IAAD,OACtC3K,KAAK4K,qBACL5K,KAAK6K,WAAWF,GAGhBG,YAAW,kBAAM,EAAKC,uBAAsB,K,2CAIxC/K,KAAKwJ,OAAOJ,kBAAoB,GAC5BrM,EAAM+B,eAAiBkB,KAAKwJ,OAAOH,iBAAmD,KAAhCrJ,KAAKwJ,OAAOJ,kBAA2B,KAC7FpJ,KAAK7B,a,iCAMbpB,EAAMiO,kBAAkBhL,MACxBA,KAAKwJ,OAAOH,iBAAmBtM,EAAM+B,eAKrCmM,aAAaC,QAAQ,mBAAoBnM,KAAKC,UAAUgB,KAAKwJ,W,iCAI/CmB,M,gCAID1I,EAAe0I,GAC5B,OAAO1I,EAAM6E,MAAK,SAACvE,EAAGmD,GAElB,OAAInD,EAAEwE,WAAarB,EAAEqB,SACV,GACCxE,EAAEwE,UAAYrB,EAAEqB,UAChB,EAGJxE,EAAE4I,aAAaR,KAAgBjF,EAAEyF,aAAaR,GACvC,GACCpI,EAAE4I,aAAaR,IAAejF,EAAEyF,aAAaR,IAIjDpI,EAAE2E,WAHE,EAKGxB,EAAEwB,UACF,EAGH3E,EAAE6I,gBAAkB1F,EAAE0F,eACd,GACA7I,EAAE6I,eAAiB1F,EAAE0F,eAIzB7I,EAAE2B,MAAQwB,EAAExB,MAHT,EAKI3B,EAAE2B,MAAQwB,EAAExB,OAIf3B,EAAE4B,WAAauB,EAAEvB,YAHb,EAKG5B,EAAE4B,WAAauB,EAAEvB,WACjB,EAEA,S,mHAtKhB,M,qHAGc,M,GChlB1BkH,GAvDU,CAErB1M,gBAAYkG,EACZyG,UAHqB,WAGR,IAAD,OACR,QAAwBzG,IAApB7E,KAAKrB,WAA0B,CAC/BqB,KAAKrB,WAAa,IAAI4K,GAEtB,IAAIgC,EAAcN,aAAaO,QAvBlB,oBAwBb,GAAmB,MAAfD,EACA,IACIvL,KAAKrB,WAAW6K,OAASjG,uBAAa2F,GAAQnK,KAAK0E,MAAM8H,IAC3D,MAAOnE,GACLpJ,QAAQoJ,MAAM,mCAAqCmE,GAK3DvJ,GAAOyJ,eAAc,SAAAxJ,QACO4C,IAApB,EAAKlG,aACL,EAAKA,WAAWsD,MAAQA,EACxB,EAAKyJ,cAAc,EAAK/M,gBAGhCqD,GAAO2J,qBAAoB,SAAA1J,QACC4C,IAApB,EAAKlG,aACL,EAAKA,WAAWuD,aAAeD,EAC/B,EAAKyJ,cAAc,EAAK/M,kBAKxC8L,SA/BqB,SA+BZ5H,GAELb,GAAOyI,SAAS5H,IAEpB+I,gBAnCqB,SAmCL/I,GACZb,GAAO4J,gBAAgB/I,IAE3BgJ,YAtCqB,SAsCTC,GACR9L,KAAKrB,WAAamN,EAClB9J,GAAO+J,YACP/L,KAAKrB,WAAWsD,MAAMgI,SAAQ,SAAApH,GAAI,OAAIb,GAAOyI,SAAS5H,MACtD7C,KAAKrB,WAAWuD,aAAa+H,SAAQ,SAAAC,GAAM,OAAIlI,GAAO4J,gBAAgB1B,MACtElK,KAAKrB,WAAW6K,OAAOF,YAAa,EACpCtJ,KAAKgM,cAGTN,cA/CqB,SA+CPI,GACV9L,KAAKrB,WAAamN,GAEtBE,WAlDqB,WAkDP,IAAD,EACTf,aAAaC,QAnEI,mBAmEsBnM,KAAKC,UAAL,UAAegB,KAAKrB,kBAApB,aAAe,EAAiB6K,W,UCxEzEyC,GAAmB,CACrBC,iBAAarH,EAEbsH,eAHqB,SAGNtJ,GACX7C,KAAKkM,YAAcrJ,ICJrBuJ,GAAwB,CAC1BC,sBAAkBxH,EAElByH,oBAH0B,SAGNzJ,GAChB7C,KAAKqM,iBAAmBxJ,ICC1B0J,GAAe,I,QAAIC,GAEzBD,GAAaE,cAAc,YAAaC,IACxCH,GAAaE,cFVU,iBEUoBR,IAC3CM,GAAaE,cDXe,sBCWoBL,IAChDG,GAAaE,cCbe,sBAEE,CAC1BE,iBAAkB,EAElBC,oBAH0B,SAGNC,GAChB7M,KAAK2M,iBAAmBE,KDQhCN,GAAaE,cEdc,qBAEH,CACpBK,WAAY,GAEZC,cAHoB,SAGND,GACV9M,KAAK8M,WAAaA,KFS1BP,GAAaE,cGfc,qBAKH,CACpBO,WAAY,EAEZC,cAHoB,SAGND,GACVhN,KAAKgN,WAAaA,KHQXT,UIgEAW,G,gHA5EsBrK,GAC7B,OAAIA,EAAKqE,UACE,qBAGA,K,kCAIWrE,GACtB,IAAI9G,EAAOlB,EAAOsS,gBAAgBtK,EAAKuD,kBACvC,OAAIrJ,EAAMqQ,cAAcrR,GACb,GAEL,eAAN,OAAYA,EAAZ,YAAoB8G,EAAKiC,UAAU/E,OAAnC,c,kCAGsB8C,GACtB,IAAMwK,EAAgBH,EAAeI,iBAAiBzK,GACtD,OAAI9F,EAAMqQ,cAAcC,GACbH,EAAeK,kBAAkB1K,GAEjCwK,I,wCAIkBxK,GAC7B,IAAIyC,EAAWzC,EAAKsC,oBACpB,GAAIG,GAAY,EACZ,MAAO,GAEX,IAAMkI,EAAWlI,EAAWvI,EAAM+B,eAClC,GAAI0O,GAAY,IACZ,MAAM,0BAEV,IAAIzR,EAAOlB,EAAOsS,gBAAgBK,GAClC,MAAM,mBAAN,OAAgBzR,EAAhB,O,uCAI4B8G,GAC5B,IAAIyC,EAAWzC,EAAKwB,gBACpB,GAAIiB,GAAY,EACZ,MAAO,GAEX,IAAMkI,EAAWlI,EAAWvI,EAAM+B,eAClC,GAAI0O,GAAY,IACZ,MAAM,oBAAN,OAAiB3K,EAAKyB,cAAtB,WAEJ,IAAIvI,EAAOlB,EAAOsS,gBAAgBK,GAClC,MAAM,mBAAN,OAAgBzR,EAAhB,O,yCAG6B8G,GAC7B,GAAIA,EAAKsD,0BAA4B,EACjC,MAAO,GAGX,IAAIsH,EAAO5K,EAAK6K,2BAChB,OAAID,GAAQ,EACF,eAAN,OAAY5S,EAAOsS,iBAAiBM,GAApC,KAEM,eAAN,OAAY5S,EAAOsS,gBAAgBM,GAAnC,O,uCAIuB5K,GAC3B,IAAMmC,EAAcjI,EAAM+B,eAC1B,OAAIkG,EAAcnC,EAAK4B,gBACZ,GAGL,eAAN,OAAY5J,EAAOsS,gBAAgBtK,EAAK4B,gBAAkBO,GAA1D,oB,eCwBO2I,GA1FgB,WAAO,IAAD,EACavL,GAAOwL,SAAS,aAAxDjP,EAD2B,EAC3BA,WAAYqN,EADe,EACfA,WAAYH,EADG,EACHA,YADG,EAGLgC,oBAAS,GAHJ,mBAG5BC,EAH4B,KAGnBC,EAHmB,OAIeF,mBAAS,GAJxB,mBAI5BzE,EAJ4B,KAIT4E,EAJS,KA0BnC,SAAS7P,IACG,OAAVQ,QAAU,IAAVA,KAAYR,WAyCd,OA9DA8P,qBAAU,gBACWpJ,IAAflG,GACFqP,EAAqBrP,EAAW6K,OAAOJ,qBAExC,CAAC0E,IA2DF,8BACE,kBAAC,IAAD,CAAQI,KAAK,UAAUC,KAAK,QAAQC,QAAS,SAAC1L,GAAD,OAAOqL,GAAW,KAA/D,gBAGA,kBAAC,KAAD,CACE/K,MAAM,eACN8K,QAASA,EACTO,KAhEN,SAAkBC,QACGzJ,IAAflG,IAIJA,EAAW6K,OAAOJ,kBAAoBA,EACtC4C,IACA+B,GAAW,KA0DPQ,SAvDN,SAAsBD,GACpBP,GAAW,KAwDP,6BACE,kBAAC,IAAD,CAAQG,KAAK,UAAUC,KAAK,QAAQC,QAAS,SAAC1L,GAAD,OAAOvE,MAApD,gBACA,2BAAOd,MAAO,CAAEmR,MAAO,QAASC,YAAa,QAAUP,KAAK,OAAOnL,GAAG,cAAc2L,UAAQ,EAACC,SAAU,SAACL,GAAD,OAnD/G,SAAgB5L,GACd,IAAIkM,EAAOlM,EAAEmM,OAAOC,MAAM,GAGtBC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WACd,IAAIC,EAAgBlP,KAAKa,OACI,kBAAlBqO,EACTC,KAAMC,QAAQ,CACZpM,MAAO,6CACP/F,QAAQ,qEACRoR,KAHY,WAMVlQ,IACA0N,EAAYtI,uBAAagG,GAAYxK,KAAK0E,MAAMyL,QAgBpDG,IAAQjI,MAAM,6EAIlB2H,EAAOO,WAAWV,GAgBsGW,CAAOjB,OAG3H,kBAAC,IAAD,CAAOjR,MAAO,CAAEmR,MAAO,QAASgB,UAAW,QAAU/R,MAAO2L,EAAmBqG,YAAY,uBAAQC,OAAO,uCAASC,OAAO,IAAIhB,SAAU,SAACL,GAAD,OAAWN,EAAqB4B,OAAOtB,EAAMO,OAAOpR,c,ywCCxEpM,IAAMoS,GAAYC,IAAOC,IAAV,MAUTC,GAAMF,IAAOC,IAAV,MASHE,IANWH,IAAOI,KAAV,MAMKJ,IAAOC,IAAV,OAgBVI,IAHaL,YAAOM,IAAMC,MAAbP,CAAH,MAGIA,YAAOQ,IAAOD,MAAdP,CAAH,OAIXS,GAAYT,IAAOI,KAAV,MAEK,SAACM,GACjB,OAAIA,EAAMpF,YACD,UAEA,aAIJ,SAACoF,GACN,OAAIA,EAAMpF,YACD,UAEA,eAII,SAACoF,GACd,OAAIA,EAAMpF,YACD,OAEA,YA0SPqF,GAAWX,IAAOC,IAAV,MAGQ,SAACS,GACnB,OAAIA,EAAME,QACD,UAEA,aAKO,SAACF,GACjB,GAAIA,EAAME,QACR,MAAO,UAEP,OAAQF,EAAMtM,OACZ,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,QACE,MAAO,cAKL,SAACsM,GACT,OAAIA,EAAMzJ,OACD,GACEyJ,EAAMG,SACR,GAEA,KAKPC,GAAqB,WAAO,IAAD,EACcxO,GAAOwL,SAAS,aAArDjP,EADuB,EACvBA,WAAY8L,EADW,EACXA,SAAUuB,EADC,EACDA,WADC,EAGS5J,GAAOwL,SR1a1B,kBQ0ab1B,EAHuB,EAGvBA,YAAaC,EAHU,EAGVA,eAHU,EAImB/J,GAAOwL,SP3a/B,uBO2alBvB,EAJuB,EAIvBA,iBAAkBC,EAJK,EAILA,oBAJK,EAKmBlK,GAAOwL,SL7a/B,uBK6alBjB,EALuB,EAKvBA,iBALuB,KAKLC,oBACYxK,GAAOwL,SH9apB,uBG8ajBZ,EANuB,EAMvBA,WANuB,KAMXC,cACkB7K,GAAOwL,SJ/apB,uBI+ajBd,EAPuB,EAOvBA,WAPuB,EAOXC,cAEpBkB,qBAAU,WAGR,QAAiBpJ,IAAblG,SAAgDkG,IAArBwH,GAAkC1N,EAAW6K,OAAOF,YAAa,CAC9F,IAAIuH,EAAalS,EAAWsD,MAAMzF,QAAO,SAACiB,GAAY,OAAOA,EAAMyJ,aAGnE,GAA0B,IAAtB2J,EAAW9Q,OACb,OAGF,GAAI8Q,EAAW9Q,OAAS,EAAG,CACzBsP,IAAQjI,MAAR,iBAAmByJ,EAAW9Q,OAA9B,8EAEA,IAAK,IAAIE,EAAI,EAAGA,EAAI4Q,EAAW9Q,OAAQE,IACrC4Q,EAAW5Q,GAAG6Q,OACdrG,EAASoG,EAAW5Q,IAKxBqM,EAAoBuE,EAAW,IAE5BlS,EAAW6K,OAAOF,aACnB3K,EAAW6K,OAAOF,YAAa,EAC/B0C,SAsBN,SAAS+E,EAAQlO,GACf,OACE,kBAAC,IAAD,CAAMuL,QAAS,SAAC4C,GAAD,OAdC,SAACA,EAAmBnO,GACtCA,EAAKqB,MAAQ0L,OAAOoB,EAAMrU,KAEhB,OAAVgC,QAAU,IAAVA,KAAYsS,aAAa5Q,EAAUiK,mBAAmBqC,IACtDlC,EAAS5H,GAETmO,EAAME,SAASC,iBAQaC,CAAYJ,EAAOnO,KAC3C,kBAAC,IAAKwO,KAAN,CAAW1U,IAAI,KAAf,wBACA,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,wBACA,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,wBACA,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,wBACA,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,yBAKN,SAAS2U,EAAUhD,EAAYzL,GACzBA,EAAKkE,SACPsI,IAAQjI,MAAR,uEAA4BvM,EAAO0W,eAAe1O,EAAKuB,iBAIjCS,GAApBwH,GAAiCA,EAAiBtJ,KAAOF,EAAKE,IAK9DF,EAAKqE,WAEPmI,IAAQjI,MAAR,4HAAoCvM,EAAO0W,eAAe1O,EAAK2O,wBAGzC3M,GAApBwH,IACFA,EAAiByE,OACjBrG,EAAS4B,IAGXxJ,EAAKxB,QACLiL,EAAoBzJ,GACV,OAAVlE,QAAU,IAAVA,KAAYsS,aAAa5Q,EAAUiK,mBAAmBqC,IACtDlC,EAAS5H,IAjBPwM,IAAQjI,MAAR,0GAAiCvM,EAAO0W,eAAe1O,EAAK2O,mBAoDhE,OACE,kBAACvB,GAAD,KACE,kBAAC,IAAD,CACE9B,KAAK,QACL9Q,MAAO,CAAEoU,gBAAiB,QAASC,OAAQ,MAC3CC,UAAQ,EACRC,WAjCN,WACE,QAAmB/M,IAAflG,EACF,MAAO,GAGT,GAAmB,IAAfqO,EAAkB,CACpB,GAAIjQ,EAAMqQ,cAAcN,GACtB,MAAO,GAET,IAAM+E,EAAgB/E,EAAWgF,cACjC,OAAOnT,EAAWsD,MAAMzF,QAAO,SAACqG,GAC9B,OAA4D,IAArDA,EAAKG,MAAM8O,cAAcC,QAAQF,SAGgEhN,IAArGhC,EAAKgE,WAAW+C,MAAK,SAAChD,GAAD,OAAwE,IAAzDA,EAAUK,KAAK6K,cAAcC,QAAQF,OAG1D,GAAd7E,SACqGnI,IAAvGhC,EAAK0D,KAAKC,UAAUoD,MAAK,SAAAvD,GAAQ,OAA+D,IAA3DA,EAASpJ,QAAQ6U,cAAcC,QAAQF,QACb,IAA5DhP,EAAK0D,KAAKtJ,QAAQ6U,cAAcC,QAAQF,OAI/C,OAAOlT,EAAWqT,SAAS3R,EAAUiK,mBAAmBqC,IAU1CqF,GACZC,WAAY,SAAApP,GAAI,OACd,kBAAC4N,GAAD,CAAUC,QAAS7N,EAAKqP,WAAWhG,GAAcvP,IAAKkG,EAAKE,GAAIqL,QAAS,SAAC1L,GAAD,OAhG9C6D,EAgGqE1D,EAAHH,EA/F5FyO,sBACNhF,EAAe5F,GAFjB,IAAkCA,GAgG4EQ,OAAQlE,EAAKkE,SAAU4J,SAAU9N,EAAKsI,aAAa9K,EAAUiK,mBAAmBqC,IAAoBwF,cAAe,SAACzP,GAAD,OAAO4O,EAAU5O,EAAGG,IAAOqB,MAAOrB,EAAKqB,OAE9P,kBAAC,IAAD,CAAKkO,MAAM,UACT,kBAAC,IAAD,CAAKC,KAAK,YACR,kBAAC,GAAD,CAAe1V,IAAKkG,EAAKE,GAAIF,KAAMA,KAErC,kBAAC,IAAD,CAAKwP,KAAK,WAAWhV,MAAO,CAAEoU,gBAAiB,uBAE7C,0BAAMpU,MAAO,CAAEiV,YAAa,QAhD1C,SAAqBzP,GAEnB,MADa,KAAOqK,GAAeqF,mBAAmB1P,GAAQqK,GAAesF,YAAY3P,GAAQqK,GAAeuF,mBAAmB5P,GAgDpH6P,CAAY7P,IAGf,kBAAC,IAAD,CAAU8P,QAAS5B,EAAQlO,IACzB,uBAAGxF,MAAO,CAAEiV,YAAa,GAAKM,UAAU,oBAAoBxE,QAAS,SAAA1L,GAAC,OAAIA,EAAEyO,mBACzE0B,GAAahQ,EAAKqB,OADrB,IAC6B,kBAAC4O,EAAA,EAAD,QAI/B,kBAAC,IAAD,CAAQzV,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,OAASN,KAAK,QAAQC,QAAS,SAAC1L,GAAD,OAAO4O,EAAU5O,EAAGG,KAApG,iBAYhB,SAASgQ,GAAa3O,GACpB,OAAQA,GACN,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,gBACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,QACE,MAAO,IAuBb,IAAM8O,GAA8C,SAACxC,GAAW,IAAD,EAC/B3C,mBAAS2C,EAAM3N,KAAKG,OADW,mBACtD/F,EADsD,KAC7CgW,EAD6C,KAEpDxI,EAAYrI,GAAOwL,SAAS,aAA5BnD,SAYT,OACE,kBAAC,IAAD,CAAOpN,MAAO,CAAE6V,WAAY,YAAaC,WAAY,QAAU1V,MAAOR,EAAS0R,SAAU,SAACjM,GAAD,OAAOuQ,EAAWvQ,EAAEmM,OAAOpR,QAAQ2V,OAV9H,SAAuB9E,GACrBkC,EAAM3N,KAAKG,MAAQ/F,EAInBwN,EAAS+F,EAAM3N,UASJwQ,GA1iBqB,WAAO,IAAD,EACUjR,GAAOwL,SAAS,aAA1DjP,EADgC,EAChCA,WAAY8L,EADoB,EACpBA,SAAUmB,EADU,EACVA,gBADU,EAGUxJ,GAAOwL,SL7F/B,uBK6FlBjB,EAHgC,EAGhCA,iBAAkBC,EAHc,EAGdA,oBAHc,EAIFxK,GAAOwL,SH9FpB,sBG8FjBZ,EAJgC,EAIhCA,WAAYC,EAJoB,EAIpBA,cAJoB,EAKF7K,GAAOwL,SJ/FpB,sBI+FLb,GALoB,EAKhCD,WALgC,EAKpBC,eALoB,EAMA3K,GAAOwL,SR/F1B,kBQ+FAzB,GANmB,EAMhCD,YANgC,EAMnBC,gBANmB,EAQd0B,mBAAS,IARK,mBAQjC7K,EARiC,KAQ1BsQ,EAR0B,OASAzF,mBAAS,IATT,mBASjC0F,EATiC,KASnBC,EATmB,OAWQ3F,oBAAS,GAXjB,mBAWjC4F,EAXiC,KAWfC,EAXe,OAYJ7F,mBAAS,GAZL,mBAYjC8F,EAZiC,KAYrBC,EAZqB,OAcd/F,mBAAS,GAdK,mBAcjC3J,EAdiC,KAc1B2P,EAd0B,OAgBFhG,oBAAS,GAhBP,mBAgBjCiG,EAhBiC,KAgBpBC,EAhBoB,QAiBRlG,mBAAS,GAjBD,qBAiBjCmG,GAjBiC,MAiBvBC,GAjBuB,SAmBJpG,oBAAS,GAnBL,qBAmBjCqG,GAnBiC,MAmBrBC,GAnBqB,SAoBEtG,mBAAS,GApBX,qBAoBjCuG,GApBiC,MAoBlBC,GApBkB,SAqBExG,mBAAS,GArBX,qBAqBjCyG,GArBiC,MAqBlBC,GArBkB,SAuBN1G,oBAAS,GAvBH,qBAuBjC2G,GAvBiC,MAuBrBC,GAvBqB,SAwBM5G,mBAAc,MAxBpB,qBAwBjCpJ,GAxBiC,MAwBhBiQ,GAxBgB,MA8BxC,SAASC,GAAkBlB,GACpBA,IAAoBS,GAKzBR,EAAoBD,GAJlBpE,IAAQjI,MAAM,8CAOlB,SAASwN,GAAad,GAChBA,GAON,SAAqBI,GACfA,IACFS,IAAkB,GAClBC,IAAa,IAGfT,GAAcD,GAZZW,EAAY,GAGdd,EAAeD,GA2EjB,SAASgB,GAAgBC,GAErBnI,EADEmI,EACkBpI,EAAmB,EAEnBA,EAAmB,GAwD3C,SAASqI,GAAiBC,GACxB9I,OAAetH,GACfoI,EAAcgI,GAGhB,SAASC,KACP,OAAsB,IAAflI,EAGT,OACE,kBAAC6C,GAAD,KAEE,kBAACG,GAAD,CAAK3S,MAAO,CAAEgV,KAAM,aAClB,kBAAClC,GAAD,KACA,kBAAC,GAAD,MACA,0BAAM9S,MAAO,CAAEiV,YAAa,MAC1B,kBAAC,IAAD,CAAQpE,KAAK,UAAUC,KAAK,QAAQC,QAAS,SAAC1L,GAAD,OAAOoS,IAAgB,KAApE,UAEA,0BAAMzX,MAAO,CAAEoU,gBAAiB,UAAW0D,QAAS,IACjDta,EAAOua,gBAAgB/U,EAAUuB,qBAAqB+K,EAAkBtM,EAAUoB,YADrF,IApER,WACE,IAAI4T,EAAO,GAAK1I,EAIhB,OAHIA,EAAmB,IACrB0I,EAAO,IAAMA,GAERA,EAgEkGC,GADnG,KAIA,kBAAC,IAAD,CAAQpH,KAAK,UAAUC,KAAK,QAAQC,QAAS,SAAC1L,GAAD,OAAOoS,IAAgB,KAApE,UACA,0BAAMzX,MAAO,CAAEiV,YAAa,WAGXzN,IAAflG,GACA,kBAAC4R,GAAD,CAAWnF,YAA0D,IAA7CzM,EAAW6K,OAAOL,wBAA1C,wCACUxK,EAAW6K,OAAOL,uBAAnB,KADT,KAKF,kBAAC,IAAD,CAAQ9L,MAAO,CAAE0V,WAAY,OAAQtE,YAAa,OAAS8G,gBAAgB,SAASC,kBAAkB,SAASC,QAASP,KAAgBvG,SAAU,SAACL,GAAD,OAAW0G,GAAiB1G,EAAO,EAAG,MAGxL4G,MACA,kBAAC,IAAD,CAAQK,gBAAgB,eAAKC,kBAAkB,eAAKC,QAAuB,GAAdzI,EAAiB2B,SAAU,SAACL,GAAD,OAAW0G,GAAiB1G,EAAQ,EAAI,QAM/H4G,MACD,6BACE,kBAAC,IAAD,CAAK9C,MAAM,SAAS/U,MAAO,CAAEqU,OAAQ,SACnC,kBAAC,IAAD,CAAKW,KAAK,YACR,kBAAC,IAAD,CAAO5C,YAAY,yDAAYhS,MAAOuF,EAAO2L,SAAU,SAACL,GAAD,OAAWgF,EAAShF,EAAMO,OAAOpR,QAAQiY,aAzK9G,SAAmBpH,GAGjB,GAFAA,EAAM6C,sBAEatM,IAAflG,EAKJ,GAAI5B,EAAMqQ,cAAcpK,GACtBqM,IAAQjI,MAAM,uCAGhB,GAAI8M,IAAcJ,EAChBzE,IAAQjI,MAAM,sFADhB,CAKA,GAAI0M,EAAa,CACf,IAAM6B,EAAY,IAAI/R,GACtB+R,EAAU5U,KAAKiT,GAAUhR,EAAOkB,GAE3BsQ,IAAkC,OAApB/P,IACjBkR,EAAUC,aAAanR,GAAgBoR,WAIvCF,EAAUnR,eADRiP,EACsC,KAAbE,EAAoB,KAEnB,EAG9BhV,EAAWmX,eAAeH,GAC1BhX,EAAWsS,aAAa5Q,EAAUiK,mBAAmBqC,IACrDf,EAAgB+J,OACX,CACL,IAAM5N,EAAU,IAAIvE,GACpBuE,EAAQhH,KAAKiC,GACb+E,EAAQ7D,MAAQA,EAEXsQ,IAAkC,OAApB/P,KACjBsD,EAAQtD,gBAAkBA,GAAgBoR,WAGxCpC,EACF1L,EAAQvD,eAAejD,KAAkB,KAAboS,EAAoB,KAEhD5L,EAAQvD,eAAejD,MAAM,GAG/B,IAAMwU,EAAYpX,EAAW6L,QAAQzC,GACrC,IAAKhL,EAAMqQ,cAAc2I,GAEvB,YADA1G,IAAQjI,MAAR,mCAAsB2O,IAGxBtL,EAAS1C,GAETpJ,EAAWsS,aAAa5Q,EAAUiK,mBAAmBqC,IAGvD2G,EAAS,IACToB,GAAmB,WAxDjBrF,IAAQjI,MAAM,qCAuKN,kBAAC,IAAD,CAAKiL,KAAK,YAER,kBAAC,IAAD,CAAUM,QAhEpB,kBAAC,IAAD,CAAMvE,QAAS,SAAC4C,GAAD,OAAW6C,EAASjE,OAAOoB,EAAMrU,QAC9C,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,wBACA,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,wBACA,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,wBACA,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,wBACA,kBAAC,IAAK0U,KAAN,CAAW1U,IAAI,KAAf,0BA4DU,uBAAGU,MAAO,CAAEiV,YAAa,GAAKM,UAAU,oBAAoBxE,QAAS,SAAA1L,GAAC,OAAIA,EAAEyO,mBACzE0B,GAAa3O,GADhB,IACwB,kBAAC4O,EAAA,EAAD,QAIzBW,GACC,kBAAC,IAAD,CAAOpW,MAAO,CAAEmR,MAAO,QAASuE,WAAY,QAAUtV,MAAOkW,EAAYlE,YAAY,2BAAOC,OAAO,eAAKC,OAAO,IAAIhB,SAAU,SAACL,GAAD,OAAWsF,EAAchE,OAAOtB,EAAMO,OAAOpR,WAG5K,kBAAC,IAAD,CAAQJ,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,OAAS8G,gBAAgB,eAAKC,kBAAkB,eAAKC,QAAShC,EAAkB9E,SAAU,SAACL,GAAD,OAAWqG,GAAkBrG,MAExK,kBAAC,IAAD,CAAQjR,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,OAAS8G,gBAAgB,2BAAOC,kBAAkB,2BAAOC,QAASjB,GAAY7F,SAAU,SAACL,GAAD,OAAWmG,GAAYnG,MAKhK,kBAAC,IAAD,CAAQjR,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,OAAS8G,gBAAgB,eAAKC,kBAAkB,eAAKC,QAAS3B,EAAanF,SAAU,SAACL,GAAD,OAAWsG,GAAatG,QAKlK,kBAAC0B,GAAD,CAAK3S,MAAO,CAAEqU,OAAQ,OAAQsE,MAAO,aAEjCxB,IACA,0BAAMnX,MAAO,CAAE0V,WAAY,SAA3B,iCACR,kBAAC,IAAD,CAAYkD,UAAQ,EAACxY,MAAOgH,GAAiB4J,KAAM,SAAA5Q,GAAK,OAAIiX,GAAmBwB,KAAOzY,EAAMoY,gBAGrF3B,IACC,0BAAM7W,MAAO,CAAE0V,WAAY,SAA3B,2BACR,kBAAC,IAAD,CAAO1V,MAAO,CAAEmR,MAAO,SAAW/Q,MAAO2W,GAAe1E,OAAO,eAAKC,OAAO,SAAIhB,SAAU,SAACL,GAAD,OAAW+F,GAAiBzE,OAAOtB,EAAMO,OAAOpR,WAC/H,kBAAC,IAAD,CAAOJ,MAAO,CAAEmR,MAAO,SAAW/Q,MAAO6W,GAAe5E,OAAO,eAAKC,OAAO,SAAIhB,SAAU,SAACL,GAAD,OAAWiG,GAAiB3E,OAAOtB,EAAMO,OAAOpR,YAI5IqW,GACC,kBAAC,IAAD,CAAOzW,MAAO,CAAEmR,MAAO,QAASuE,WAAY,QAAUtV,MAAOuW,GAAUvE,YAAY,kCAASC,OAAO,SAAIC,OAAO,SAAIhB,SAAU,SAACL,GAAD,OAAW2F,GAAYrE,OAAOtB,EAAMO,OAAOpR,YAK3K,0BAAMJ,MAAO,CAAEoU,gBAAiB,UAAW0D,QAAS,EAAGzD,OAAQ,SAtIzE,WACE,QAAmB7M,IAAflG,EACF,MAAO,GAGT,IAAIwX,EAAexX,EAAWqT,SAAS3R,EAAUiK,mBAAmBqC,IAAmB,GAAOnQ,QAAO,SAACqG,GAAW,OAAQA,EAAKkE,YAE9H,GAA4B,IAAxBoP,EAAapW,OACf,MAAO,GAGT,IAAIqW,EAAgB,GAChBC,EAAmBF,EAAazZ,KAAI,SAACmG,GACvC,IAAI4K,EAAO5K,EAAK6K,2BAChB,OAAID,EAAO,EAAU,EACdA,KACNhI,QAAO,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAImD,KAOxB,OAJI2Q,EAAW,IACbD,EAAa,sEAAgBvb,EAAOyb,eAAeD,KAG/C,SAAN,OAAWF,EAAapW,OAAxB,+CAAuCqW,GAgH5BG,KAKNrB,MACC,yBAAK7X,MAAO,CAAE0V,WAAY,OAAQtE,YAAa,SAC7C,kBAAC,IAAD,CAAOgB,YAAY,uCAAShS,MAAO8V,EAAc5E,SAAU,SAACL,GAAD,OAAWkF,EAAgBlF,EAAMO,OAAOpR,QAAQiY,aAxGrH,WACE3I,EAAcwG,QA8GZ,kBAAC,GAAD,Q,2mECnWN,IAAM1D,GAAYC,IAAOC,IAAV,MAOTC,GAAMF,IAAOC,IAAV,MAMHyG,GAAS1G,YAAO2G,KAAP3G,CAAH,MAEN4G,GAAkB5G,IAAOC,IAAV,MAIfI,GAAcL,YAAOQ,IAAOD,MAAdP,CAAH,MAIX6G,GAAqB7G,IAAOC,IAAV,MAsBlB6G,GAAgB9G,IAAOC,IAAV,MAWP,SAACS,GACT,OAAIA,EAAMzJ,OACD,IAEA,KAMP0J,GAAWX,IAAOC,IAAV,MAYR8G,GAAY/G,IAAOI,KAAV,MAWC,SAACM,GACb,OAAIA,EAAMsG,QACD,EAEA,OAMPC,GAAejH,YAAO+G,GAAP/G,CAAH,MAUF,SAACU,GACb,OAAIA,EAAMsG,QACD,EAEA,OA8nBEE,GAxnBiB,WAAO,IAAD,EACS5U,GAAOwL,SAAS,aAArDjP,EAD4B,EAC5BA,WAAY8L,EADgB,EAChBA,SAAUuB,EADM,EACNA,WAEtBE,EAAgB9J,GAAOwL,ST9IV,kBS8Ib1B,YAH4B,EAIc9J,GAAOwL,SNhJ/B,uBMgJlBjB,EAJ4B,EAI5BA,iBAJ4B,KAIVC,oBAEIiB,mBAAS,KANH,mBAM7B5Q,EAN6B,KAMpBgW,EANoB,OAOJpF,mBAAS,IAPL,mBAO7BxH,EAP6B,KAOnB4Q,EAPmB,OAQQpJ,mBAAS,IARjB,mBAQ7BqJ,EAR6B,KAQbC,EARa,OAUUtJ,oBAAS,GAVnB,mBAU7BuJ,EAV6B,KAUZC,EAVY,OAWAxJ,oBAAU,GAXV,mBAW7B8F,EAX6B,KAWjBC,EAXiB,OAaM/F,mBAAS,IAbf,mBAa7ByJ,EAb6B,KAadC,EAbc,OAeQ1J,oBAAS,GAfjB,mBAe7B2J,EAf6B,KAebC,EAfa,OAgBF5J,mBAAc,MAhBZ,mBAgB7BvI,EAhB6B,KAgBnBoS,EAhBmB,OAkBF7J,oBAAS,GAlBP,mBAkB7B8J,EAlB6B,KAkBlBC,GAlBkB,QAmBM/J,mBAAS,IAnBf,qBAmB7BvJ,GAnB6B,MAmBduT,GAnBc,SAoBIhK,mBAAc,MApBlB,qBAoB7BiK,GApB6B,MAoBhBC,GApBgB,SAsBMlK,mBAA0B,MAtBhC,qBAsB7BmK,GAtB6B,gBAuBFnK,mBAA2B,OAvBzB,qBAuB7BoK,GAvB6B,gBAyBYpK,mBAAc,OAzB1B,qBAyB7BpJ,GAzB6B,MAyBZyT,GAzBY,SA6Bc9V,GAAOwL,SRxK/B,uBQwKAtB,IA7BU,GA6B5BD,iBA7B4B,GA6BVC,qBA7BU,GAkCJuB,wBAA2BhJ,GAlCvB,qBAkC7BsT,GAlC6B,MAkCnBC,GAlCmB,MA0IpC,SAASC,GAAUxV,GACjBA,EAAKyV,OACK,OAAV3Z,QAAU,IAAVA,KAAYsS,aAAa5Q,EAAUiK,mBAAmBqC,IACtD0C,IAAQkJ,QAAQ,kCAChB9N,EAAS5H,GAmBX,SAAS2V,GAAgB3V,GACvB,IAAMyC,EAAWzC,EAAKsC,oBACtB,OAAIG,EAAW,EACN4Q,KAAO5Q,GAGT,KA+FT,SAASmT,GAAY1c,EAAc2c,GAEjC,IADA,IAAI/R,GAAU,EACLpB,EAAQ,EAAGA,GAAK,0CAA0BA,IAAS,CAC1D,IAAMrE,EAAqBqE,EAAlB,uBAAkBA,EAAlB,mBAAkBA,EAAlB,GAQT,GAPIrE,EAAIG,MAAQ,GAAKtF,EAAOmF,EAAIG,OAC9BgO,IAAQjI,MAAR,UAAiBsR,EAAjB,YAA6B7d,EAAO8d,mBAAmB5c,GAAvD,wBAAkEmF,EAAIG,MAAtE,YAA+ExG,EAAO8d,mBAAmBzX,EAAIG,OAA7G,0CACAsF,GAAU,GACDzF,EAAIF,IAAM,GAAKjF,EAAOmF,EAAIF,MACnCqO,IAAQjI,MAAR,UAAiBsR,EAAjB,YAA6B7d,EAAO8d,mBAAmB5c,GAAvD,wBAAkEmF,EAAIF,IAAtE,YAA6EnG,EAAO8d,mBAAmBzX,EAAIF,KAA3G,0CACA2F,GAAU,IAEPA,EACH,OAAO,EAGX,OAAO,EAGT,SAASiS,GAAuB/V,GAC9B,IAAMyC,EAAWzC,EAAKwB,gBAEtB,OAAIiB,EAAW,EACN4Q,KAAO5Q,GAGT,KAuBT,SAASuT,GAAiBxL,EAAwByL,GAChD,QAAoBjU,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,EAGRmB,IACCyL,IACFjW,EAAK2B,eAAejD,MAAM,GAC1BkJ,EAAS5H,IAEX+Q,GAAe,IAEjByD,EAAmBhK,IAGrB,SAAS0L,GAAgB1L,EAAwByL,GAC/C,QAAoBjU,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,EAGRmB,IACCyL,IACFjW,EAAK0B,UAAUhD,MAAM,GACrBkJ,EAAS5H,IAEX6U,EAAc,OAEhBD,EAAkBpK,IA0GpB,SAAS2L,GAAiBnW,EAAY+D,EAAsBmO,GACtDA,EACFnO,EAAUqS,WAEVrS,EAAUsS,YAEZzO,EAAS5H,GA9ZXoL,qBAAU,WAER,QAAoBpJ,IAAhBqH,IAECA,EAAYgG,WAAWiG,IAAW,CAErCC,GAAYlM,GACZ+G,EAAW/G,EAAY3F,KAAKtJ,SAG5B,IAAM0W,EAAazH,EAAY/F,yBAC3BwN,EAAa,GACfC,EAAcD,GACdkF,IAAiB,GAAO,KAExBA,IAAiB,GAAM,GACvBjF,EAAcD,EAAU,OAG1B4D,EAAiB,IAEjBK,GAAa1L,EAAYyL,aACzBE,GAAiB3L,EAAY5H,eAC7ByT,GAAiBa,GAAuB1M,IAExCwL,EAAcc,GAAgBtM,IAC9B6M,GAAgB7M,EAAYsL,kBAAkB,QAE1B3S,IAAhBqH,GAA8BA,EAAYiN,YAG5CjB,GAAqB,MAFrBA,GAAqBhC,KAAOhK,EAAYzH,kBAMhC,OAAV9F,QAAU,IAAVA,KAAYsS,aAAa5Q,EAAUiK,mBAAmBqC,QA4Y1D,IAZkC9J,GAY5BuW,GAAYC,IAAMC,OAAO,MAgB/B,OAZArL,qBAAU,WAER,IAAMsL,EAAcpc,SAASqc,cAAc,eACrCC,EAAYL,GAAUM,QAExBH,GAAeE,GACjBF,EAAYI,aAAa,QAAS,WAAaF,EAAUG,aAAe,IAAM,8BAM9D/U,IAAhBqH,EAAmC,kBAAC,GAAD,MAGrC,kBAAC,GAAD,UAEmBrH,IAAhBqH,GACC,kBAAC,GAAD,CAAK7O,MAAO,CAAEqU,OAAQ,QAEpB,yBAAKrU,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,MAAO0E,WAAY,SAAWjH,EAAYlJ,MAAxF,KApC0BH,GAoC+FqJ,GAnCrH4H,cAENzT,EAAUiK,mBAAmB,GAAGrE,KAAKpD,GAAK4B,iBACrC,GAGF,iCANyB,IAqC1B,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAQ2J,QAAS,SAAC1L,QA/YNmC,IAAhBqH,GAEJiD,KAAMC,QAAQ,CACZpM,MAAO,6CACP/F,QAAQ,6CAAD,OAAYiP,EAAYlJ,OAC/BqL,KAHY,WAIVnC,EAAYvI,WAAY,EACxB8G,EAASyB,GACTmD,IAAQkJ,QAAQ,6CAuYZ,KACA,kBAAC,IAAD,CAAQnK,QAAS,SAAC1L,GAAD,OAnY3B,SAAkB4L,GAChB,QAAoBzJ,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,EAEb,GAAIrJ,EAAKkE,SACPsI,IAAQjI,MAAR,uEAA4BvM,EAAO0W,eAAe1O,EAAKuB,gBADzD,CAKA,IAAMyV,EAAkBhX,EAAKgE,WAAW+C,MAAK,SAAC/G,GAAD,OAAWA,EAAKkE,iBACrClC,IAApBgV,EAKChX,EAAKqE,WAWVrE,EAAKiO,OACLxE,QAAoBzH,GACpBwT,GAAUxV,IAZRsM,KAAMC,QAAQ,CACZpM,MAAO,yGACP/F,QAAQ,6CAAD,OAAY4F,EAAKG,OACxBqL,KAHY,WAIVgK,GAAUxV,MATdwM,IAAQjI,MAAR,qDAAyByS,EAAgB5S,SAwXX6S,KAAxB,SAGF,kBAAC,IAAD,CAAQzc,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,OAAS8G,gBAAgB,eAAKC,kBAAkB,eAAKC,QAAS2B,EAAiBzI,SAAU,SAACL,GAAD,OAAWuK,GAAiBvK,GAAO,MAE7K,kBAAC,IAAD,CAAQjR,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,OAAS8G,gBAAgB,2BAAOC,kBAAkB,2BAAOC,QAAS+B,EAAgB7I,SAAU,SAACL,GAAD,OAAWyK,GAAgBzK,GAAO,MAE/K,kBAAC,IAAD,CAAQjR,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,OAAS8G,gBAAgB,UAAUC,kBAAkB,SAASC,QAASkC,EAAWhJ,SAAU,SAACL,GAAD,OA3MrJ,SAAoBjB,GAClB,QAAoBxI,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,EAERmB,IACHxK,EAAKwB,iBAAmB,EACxB0T,GAAiB,MACjBtN,EAAS5H,IAEX+U,GAAavK,IAkMiJ0M,CAAWzL,OAKvK,yBAAKjR,MAAO,CAAE0V,WAAY,OAAQtE,YAAa,OAAQ0E,WAAY,SAhVvE,WACE,QAAoBtO,IAAhBqH,EAA2B,MAAO,GACtC,IAAMrJ,EAAOqJ,EAGb,OADagB,GAAeqF,mBAAmB1P,GAAQqK,GAAe8M,YAAYnX,GAAQqK,GAAesF,YAAY3P,GAAQqK,GAAeuF,mBAAmB5P,GAAQqK,GAAe+M,iBAAiBpX,GA4UtH6P,SAG9D7N,IAAhBqH,GACC,kBAAC,GAAD,CAAK7O,MAAO,CAAEmS,UAAW,MAAO0K,aAAc,QACvB,OAApBzV,IACC,0BAAMpH,MAAO,CAAE0V,WAAY,SAA3B,6CACF,kBAAC,IAAD,CAAYkD,UAAQ,EAACxY,MAAOgH,GAAiB4J,KAAM,SAAA5Q,GAAK,OAvQhE,SAAiCA,EAAYoF,GAC3C,IAAM4B,EAAkBhH,EAAMoY,UAEzB4C,GAAYhU,EAAiB,uCAAU3D,GAASuG,YAAOxC,EAAWhC,EAAKwB,gBAAiB,YAAavD,GAASuG,YAAOxC,EAAWhC,EAAKsC,oBAAqB,eAI/J+S,GAAqBhC,KAAOzR,IAC5B5B,EAAK4B,gBAAkBA,EACvBgG,EAAS5H,IA8PyDsX,CAAwB1c,EAAOyO,OAI1FA,EAAYiN,aACX,kBAAC,IAAD,CAAO9b,MAAO,CAAE0V,WAAY,OAAQvE,MAAO,SAAW/Q,MAAO6Z,EAAe7H,YAAW,UAAKvD,EAAYvG,aAAZ,KAAL,6BAAsD+J,OAAO,2BAAOC,OAAO,IAAIhB,SAAU,SAACL,GAAD,OAAWiJ,EAAiBjJ,EAAMO,OAAOpR,QAAQiY,aApV3O,WACE,QAAmB7Q,IAAflG,GAIJ,QAAoBkG,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,EAEPkO,EAAqBxK,OAAO0H,GAClC,GAA2B,IAAvB8C,GAAmDC,MAAvBD,EAAhC,CAKA,IAAME,EAA0C,KAArBF,EAA4B,IAEvD,GAAIE,EAAqBzX,EAAKuD,iBAAmB,EAC/CiJ,IAAQjI,MAAR,0EADF,CAKAvE,EAAK+C,QAAQrE,KAAKyC,GAAcqD,OAAOiT,IACvC3b,EAAW6K,OAAOL,wBAA0BmR,EAC5CtO,IAEA,IAAIuO,EAAM,GAERA,EADEH,EAAqB,EACpB,uBAASA,EAAT,KAEA,wBAAUA,EAAV,KAEL/K,IAAQkJ,QAAR,4BAAsBgC,EAAtB,iBAEAhD,EAAiB,IAEjB9M,EAAS5H,SAzBPwM,IAAQjI,MAAR,oDARAiI,IAAQjI,MAAM,0CAqVTgQ,GACC,0BAAM/Z,MAAO,CAAE0V,WAAY,SAA3B,qBACJ,kBAAC,IAAD,CAAO1V,MAAO,CAAEmR,MAAO,SAAW/Q,MAAOkW,EAAYlE,YAAY,oDAAYC,OAAO,eAAKC,OAAO,IAAIhB,SAAU,SAACL,GAAD,OAAWsF,EAAchE,OAAOtB,EAAMO,OAAOpR,SAAS2V,OAnT1K,WACE,QAAoBvO,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,GAEM,GAAfyH,EACF9Q,EAAK2B,eAAejD,MAAM,GAE1BsB,EAAK2B,eAAejD,KAAkB,KAAboS,EAAoB,KAG/ClJ,EAAS5H,QA8SF2U,GACC,0BAAMna,MAAO,CAAE0V,WAAY,SAA3B,iBACJ,kBAAC,IAAD,CAAYkD,UAAQ,EAACxY,MAAO6H,EAAU+I,KAAM,SAAA5Q,GAAK,OAjYvD,SAA0BA,GACxB,QAAoBoH,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,EASbrJ,EAAK0B,UAAUhD,KAAK9D,EAAMoY,WAC1B6B,EAAcc,GAAgBtM,IAC9BzB,EAAS5H,IAoXgD2X,CAAiB/c,OAInEka,GACC,0BAAMta,MAAO,CAAE0V,WAAY,SAA3B,gBACN,kBAAC,IAAD,CAAYkD,UAAQ,EAACxY,MAAOqa,GAAazJ,KAAM,SAAA5Q,GAAK,OAjTxD,SAAiCA,GAC/B,QAAoBoH,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,EAEb,GAAKyL,EAAL,CAKA,IAAM8C,EAAchd,EAAMoY,UACrB4C,GAAYgC,EAAa,sBAAa3Z,GAASuG,YAAOxC,EAAWhC,EAAKsC,oBAAqB,eAIhGtC,EAAKwB,gBAAkBoW,EACvB1C,GAAiBa,GAAuB/V,IACxC4H,EAAS5H,SAXPwM,IAAQjI,MAAR,wGA4SwDsT,CAAwBjd,MAExE,kBAAC,IAAD,CAAOJ,MAAO,CAAEmR,MAAO,SAAW/Q,MAAO6G,GAAeoL,OAAO,gBAAMD,YAAY,uCAASd,SAAU,SAACL,GAAD,OAAWuJ,GAAiBvJ,EAAMO,OAAOpR,QAAQ2V,OAxPjK,WACE,QAAoBvO,IAAhBqH,EAAJ,CACA,IAAMrJ,EAAOqJ,EAEbrJ,EAAKyB,cAAgBA,GACrBmG,EAAS5H,cA0PUgC,IAAhBqH,GACC,yBAAK7O,MAAO,CAAEe,QAAS,SACrB,kBAAC,GAAD,CAAKf,MAAO,CAAE0V,WAAY,OAAQtE,YAAa,MAAOD,MAAO,QAC3D,kBAAC,IAAD,CAAOiB,YAAY,+DAAahS,MAAO4I,EAAUsI,SAAU,SAACL,GAAD,OAAW2I,EAAY3I,EAAMO,OAAOpR,QAAQiY,aA/KjH,SAAuBpH,GACrBA,EAAM6C,sBAEctM,IAAhBqH,IAEAnP,EAAMqQ,cAAc/G,GACtBgJ,IAAQjI,MAAM,mCAShB8E,EAAY3F,KAAKC,UAAUjF,KAAK0G,GAAS0S,kBAAkBtU,IAE3DoE,EAASyB,GAET+K,EAAY,SA8JJ,kBAACN,GAAD,KACE,kBAAC,IAAD,CACExI,KAAK,QACLwD,UAAQ,EACRC,WAAY1F,EAAY3F,KAAKqU,oBAAoB1O,EAAYpH,WAC7DmN,WAAY,SAAA5L,GAAQ,OAClB,kBAAC,GAAD,CAAU1J,IAAK0J,EAASwU,UAIpBxU,EAASoC,SACP,0BAAMpL,MAAO,CAAEoU,gBAAiB,UAAWuE,MAAO,YAAlD,uBAAsEnb,EAAOua,gBAAgB/O,EAASI,WAAtG,8BAEE,8BACE,0BAAMpJ,MAAO,CAAE2Y,MAAO,UAAW8E,aAAc,QAA/C,IAA0DjgB,EAAOkgB,mBAAmB1U,EAASI,YAC5FJ,EAASpJ,QAEV,kBAAC4Z,GAAD,CAAWC,SAAsB,OAAbkB,SAAa,IAAbA,QAAA,EAAAA,GAAevR,aAAcJ,EAASI,UAAW2H,QAAS,SAAC1L,GAAD,OAjOxG,SAA0BG,EAAYwD,GAEhCA,EAASsC,kBACXwG,KAAMC,QAAQ,CACZpM,MAAO,wDACP/F,QAAQ,uMACRoR,KAHY,WAINxL,EAAKmY,eAAe3U,EAASI,YAC/B4I,IAAQkJ,QAAQ,iCAChB9N,EAAS5H,IAETwM,IAAQjI,MAAM,oCAKpB+H,KAAMC,QAAQ,CACZpM,MAAO,6DACP/F,QAAQ,4BAAD,OAAUoJ,EAASpJ,QAAnB,wCACPoR,KAHY,WAINxL,EAAKoY,eAAe5U,IACtBgJ,IAAQkJ,QAAQ,oCAChB9N,EAAS5H,IAETwM,IAAQjI,MAAM,uCAyMuF8T,CAAiBhP,EAAa7F,KAAnH,uBAUlB,kBAAC,GAAD,CAAKhJ,MAAO,CAAE0V,WAAY,MAAOtE,YAAa,OAAQD,MAAO,QAC3D,kBAAC,IAAD,CAAOiB,YAAY,+DAAahS,MAAOyZ,EAAgBvI,SAAU,SAACL,GAAD,OAAW6I,EAAkB7I,EAAMO,OAAOpR,QAAQiY,aAAc,SAACpH,GAAD,OAvL3I,SAAwBzL,GAClB9F,EAAMqQ,cAAc8J,GACtB7H,IAAQjI,MAAM,mCAIhBvE,EAAKgE,WAAWtF,KAAK0C,GAAUoD,OAAO6P,IAEtCzM,EAAS5H,GAETsU,EAAkB,KA6KkIgE,CAAejP,MAE3J,kBAACyK,GAAD,KACE,kBAAC,IAAD,CACExI,KAAK,QACLwD,UAAQ,EACRC,WAAY1F,EAAYkP,uBACxBnJ,WAAY,SAAArL,GAAS,OACnB,kBAACgQ,GAAD,CAAeja,IAAKiK,EAAUzC,WAAY4C,OAAQH,EAAUG,UAK1D,0BAAM1J,MAAO,CAAE8V,WAAY,SAAWvM,EAAUK,MAChD,0BAAM5J,MAAO,CAAE2Y,MAAO,cAAtB,KAAwCpP,EAAUI,MAAlD,MAGA,kBAAC+P,GAAD,CAAcD,SAAkB,OAATmB,SAAS,IAATA,QAAA,EAAAA,GAAW9T,cAAeyC,EAAUzC,WAAYiK,QAAS,SAAC1L,GAAD,OAzKlG,SAAyBG,EAAY+D,GAC/BA,EAAUG,UACZH,EAAUyU,UACVhM,IAAQkJ,QAAQ,gDAEhB3R,EAAU0R,OACVjJ,IAAQkJ,QAAQ,mCAElB9N,EAAS5H,GAiK8FyY,CAAgBpP,EAAatF,KAApH,UACA,kBAACmQ,GAAD,CAAcD,SAAkB,OAATmB,SAAS,IAATA,QAAA,EAAAA,GAAW9T,cAAeyC,EAAUzC,WAAYiK,QAAS,SAAC1L,GAAD,OA/JlG,SAAyBG,EAAY+D,GACnCiR,GAAiBjR,EAAUK,MAC3BpE,EAAKyB,cAAgBsC,EAAUK,KAC/BwD,EAAS5H,GA4J8F0Y,CAAgBrP,EAAatF,KAApH,MACA,kBAACmQ,GAAD,CAAcD,SAAkB,OAATmB,SAAS,IAATA,QAAA,EAAAA,GAAW9T,cAAeyC,EAAUzC,WAAYiK,QAAS,SAAC1L,GAAD,OAAOsW,GAAiB9M,EAAatF,GAAW,KAAhI,UACA,kBAACmQ,GAAD,CAAcD,SAAkB,OAATmB,SAAS,IAATA,QAAA,EAAAA,GAAW9T,cAAeyC,EAAUzC,WAAYiK,QAAS,SAAC1L,GAAD,OAAOsW,GAAiB9M,EAAatF,GAAW,KAAhI,UACA,kBAACmQ,GAAD,CAAcD,SAAkB,OAATmB,SAAS,IAATA,QAAA,EAAAA,GAAW9T,cAAeyC,EAAUzC,WAAYiK,QAAS,SAAC1L,GAAD,OA5LlG,SAA2BG,EAAY+D,GACrCuI,KAAMC,QAAQ,CACZpM,MAAO,8DACP/F,QAAQ,uCAAD,OAAqB2J,EAAUK,KAA/B,4EACPoH,KAHY,WAINxL,EAAK2Y,gBAAgB5U,IACvByI,IAAQkJ,QAAQ,uCAChB9N,EAAS5H,IAETwM,IAAQjI,MAAM,0CAmLmFqU,CAAkBvP,EAAatF,KAAtH,iBAcd,kBAAC8P,GAAD,CAAiBtD,OAzhBrB,SAAgB9E,GACdA,EAAM6C,iBAIR,SAAqB7C,EAAYoN,GAC3BpN,GAAOA,EAAM6C,iBACjB,QAAoBtM,IAAhBqH,EAA2B,OAE/BA,EAAY3F,KAAKtJ,QAAUA,EAC3BwN,EAASyB,GAELwP,GAAUrM,IAAQsM,KAAK,sBAV3BC,CAAYtN,GAAO,IAuhBgBuN,IAAKzC,IACpC,kBAAC5C,GAAD,CAEE7Z,IAAKuP,GAAeA,EAAYnJ,GAChCtF,MAAOR,EACP0R,SAAUsE,EACV6I,QAAS,CACPC,cAAc,EAGdC,UAAW,CAAC,eAAgB,e,muBCnvBxC,IAAMhM,GAAMF,IAAOC,IAAV,MAkBHU,GAAWX,IAAOC,IAAV,MAkGCkM,GAtFkB,WAAO,IAC9Btd,EAAeyD,GAAOwL,SAAS,aAA/BjP,WAD6B,EAEGkP,mBAAS,KAFZ,mBAE9BqO,EAF8B,KAEhBC,EAFgB,KAmDrC,OACE,kBAAC,GAAD,KACE,kBAAC,KAAM9L,MAAP,CAAa1B,SAAU,SAACL,GAAD,OAAW6N,EAAgBvM,OAAOtB,EAAMO,OAAOpR,SAAS2e,aAAa,MAAMjO,KAAK,SACvG,kBAAC,KAAMmC,OAAP,CAAc7S,MAAM,OAApB,OACA,kBAAC,KAAM6S,OAAP,CAAc7S,MAAM,OAApB,OACA,kBAAC,KAAM6S,OAAP,CAAc7S,MAAM,OAApB,OACA,kBAAC,KAAM6S,OAAP,CAAc7S,MAAM,OAApB,OACA,kBAAC,KAAM6S,OAAP,CAAc7S,MAAM,QAApB,SAIA,kBAAC,IAAD,CACE0Q,KAAK,QACLwD,UAAQ,EACRC,WAxCN,WACE,QAAmB/M,IAAflG,EACF,MAAO,GAGT,IAAM4J,EAAM5J,EAAWsD,MACpBoG,SAAQ,SAACxF,GAAD,OAAUA,EAAK0D,KAAKiC,4BAA4B3F,EAAKiC,WAAWpI,KAAI,SAAC2J,GAC5E,OAAOA,EAASgW,UAAUxZ,EAAKG,aAEhCxG,QAAO,SAAC6J,GAAD,OAAeA,EAASoC,YAC/B3B,MAAK,SAACvE,EAAGmD,GACR,OAAInD,EAAEkE,UAAYf,EAAEe,WACV,EACClE,EAAEkE,UAAYf,EAAEe,UAClB,EAEA,KAGV6V,MAAM,EAAGJ,GAEZ,OAAOjU,GAASS,WAAWH,GAmBXgU,GACZtK,WAAY,SAAA5L,GAAQ,OAClB,kBAAC,GAAD,CAAU1J,IAAK0J,EAASI,WAEpBJ,EAASoC,SACP,0BAAMpL,MAAO,CAAEoU,gBAAiB,UAAWuE,MAAO,YAAlD,uBAAsEnb,EAAOua,gBAAgB/O,EAASI,WAAtG,8BAEE,8BACE,0BAAMpJ,MAAO,CAAE2Y,MAAO,UAAW8E,aAAc,QAAUjgB,EAAOkgB,mBAAmB1U,EAASI,YAC5F,0BAAMpJ,MAAO,CAAE2Y,MAAO,UAAW5X,QAAS,eAAgBoe,cAAe,MAAOC,SAAU,QAASC,WAAY,SAAUC,SAAU,SAAUC,aAAc,aAA3J,KAA4KvW,EAASrD,MAArL,KACCqD,EAASpJ,e,qmBCrG9B,IAAM+S,GAAMF,IAAOC,IAAV,MAiBHU,GAAWX,IAAOC,IAAV,MAIQ,SAACS,GACnB,OAAIA,EAAME,QACD,UAEA,aAKO,SAACF,GACjB,OAAIA,EAAME,QACD,UAEA,gCA8CEmM,GAvCsB,WAAO,IAClCle,EAAeyD,GAAOwL,SAAS,aAA/BjP,WADiC,EAEDyD,GAAOwL,SXtD1B,kBWsDb1B,EAFiC,EAEjCA,YAAaC,EAFoB,EAEpBA,eAFoB,EAGS/J,GAAOwL,SRxD/B,uBQwDlBjB,EAHiC,EAGjCA,iBAHiC,EAGfC,oBAmB1B,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CACEuB,KAAK,QACLwD,UAAQ,EACRC,gBArBe/M,IAAflG,EACK,GAEFA,EAAWme,wBAAwBzc,EAAUiK,mBAAmBqC,IACpE7F,MAAK,SAACvE,EAAGmD,GACR,OAAInD,EAAEiP,gBAAkB9L,EAAE8L,iBAChB,EACCjP,EAAEiP,gBAAkB9L,EAAE8L,gBACxB,EAEA,KAYTS,WAAY,SAAApP,GAAI,OACd,kBAAC,GAAD,CAAU6N,QAAS7N,EAAKqP,WAAWhG,GAAcvP,IAAKkG,EAAKE,GAAIqL,QAAS,SAAC1L,GAAD,OAAOyJ,EAAetJ,KAC3FA,EAAKG,MACN,0BAAM3F,MAAO,CAAE2Y,MAAO,YAAcnb,EAAOkiB,gBAAgBla,EAAKma,oBAAoB3c,EAAUiK,mBAAmBqC,Y,sNC5E7H,IAAMsQ,GAAenN,IAAOC,IAAV,MA0DHmN,OAjDO,WAAM,IAMlB5R,EAAclJ,GAAOwL,SAAS,aAA9BtC,UAKR,OAJA2C,qBAAU,WACR3C,MACC,IAGD,kBAAC2R,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MAEA,6BACE,kBAAC,GAAD,MACA,kBAAC,GAAD,SCxBYE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAStgB,SAASugB,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdvb,OAAM,SAAA2E,GACLpJ,QAAQoJ,MAAMA,EAAMiI,c","file":"static/js/main.6cf09e5b.chunk.js","sourcesContent":["class Format {\n    public static formatTimeInMs(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + ':';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return \"[\" + Y + M + D + h + m + s + msString + \"]\";\n    }\n\n    public static formatTimeInMsToFileName(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '_';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '_';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + '_';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + '_';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + '_';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return Y + M + D + h + m + s + msString;\n    }\n\n    public static formatTimeInMinute(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\n\n        return Y + M + D + h + m;\n    }\n\n    // 时-分-秒\n    public static formatTimeInSecond(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n\n        return \"[\" + h + m + s + \"]\";\n    }\n\n    // 时-分\n    public static formatTimeInSecond3(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\n\n        return \"[\" + h + m  + \"]\";\n    }\n\n    // 日-时-分-秒\n    public static formatTimeInSecond2(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n\n        return \"[\" + D + h + m + s + \"]\";\n    }\n\n    // 年-月-日\n    public static formatTimeInDay(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return Y + M + D;\n    }\n\n    // 月-日\n    public static formatTimeInDay2(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return M + D;\n    }\n\n    public static formatDuration(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            天: Math.floor(timeMs / 86400000),\n            小时: Math.floor(timeMs / 3600000) % 24,\n            分: Math.floor(timeMs / 60000) % 60,\n            秒: Math.floor(timeMs / 1000) % 60,\n            //   毫秒: Math.floor(timeMs) % 1000\n        };\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n\n    public static formatDuration2(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            d: Math.floor(timeMs / 86400000),\n            h: Math.floor(timeMs / 3600000) % 24,\n            m: Math.floor(timeMs / 60000) % 60,\n            s: Math.floor(timeMs / 1000) % 60,\n        };\n\n        if (time.d > 0) {\n            time.m = 0\n            time.s = 0\n        }\n        if (time.h > 0) {\n            time.s = 0\n        }\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n\n    public static formatDuration3(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            时: Math.floor(timeMs / 3600000) % 24,\n            分: Math.floor(timeMs / 60000) % 60,\n        };\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n}\n\nexport default Format\n\n","import { StoreModel } from \"../model/model\";\nimport Format from \"./Format\";\n\nclass Utils {\n    public static isStringEmpty(obj: any): boolean {\n        if (typeof obj === \"undefined\" || obj === null || obj === \"\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static exportContentToClipboard(content: string) {\n        let transfer = document.createElement('textarea');\n        // 不这么设置屏幕会跳，具体哪儿有问题还没确定\n        transfer.style.cssText = \"width:30%;padding:2%;min-width: 100px;opacity: 0.5;color: rgb(255, 255, 255);line-height: 18px;text-align: center;border-radius: 5px;position: fixed;top: 50%;left: 30%;z-index: 999999;background: rgb(0, 0, 0);font-size: 15px;\";\n        document.body.appendChild(transfer);\n        transfer.value = content;  // 这里表示想要复制的内容\n        transfer.focus();\n        transfer.select();\n        if (document.execCommand('copy')) {\n            document.execCommand('copy');\n        }\n        transfer.blur();\n        document.body.removeChild(transfer);\n    }\n\n    public static downloadFile(fileName: string, content: string) {\n        console.log(\"download\")\n        // 创建隐藏的可下载链接\n        var eleLink = document.createElement('a');\n        eleLink.download = fileName;\n        eleLink.style.display = 'none';\n        // 字符内容转变成blob地址\n        var blob = new Blob([content]);\n        eleLink.href = URL.createObjectURL(blob);\n        // 触发点击\n        document.body.appendChild(eleLink);\n        eleLink.click();\n        // 然后移除\n        document.body.removeChild(eleLink);\n    }\n\n    // 业务方法\n    public static downloadModelFile(storeModel: StoreModel) {\n        Utils.downloadFile(`DoingList_${Format.formatTimeInMsToFileName(Utils.getTimestamp())}.dl`, JSON.stringify(storeModel))\n    }\n\n    public static generateId(): number {\n        return (new Date()).getTime()\n    }\n\n    // rename currentTimpstamp\n    public static getTimestamp(): number {\n        return (new Date()).getTime()\n    }\n\n    public static match(src: string, regex: string): boolean {\n        return src.search(new RegExp(regex, 'i')) > -1\n    }\n\n    // todo 不能重载吗？\n    public static matchs(src: string, regExp: RegExp): boolean {\n        return src.search(regExp) > -1\n    }\n\n    public static getRandomColor(): string {\n        return '#' + (Math.random() * 0xffffff << 0).toString(16);\n    }\n\n    public static hasIntersection(start1: number, end1: number, start2: number, end2: number): boolean {\n\n        if (end2 < start1 || end1 < start2) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    public static removeObject(array: any[], object: any): boolean {\n        let length = this.length;\n        for (let i = 0; i < length; i++) {\n            if (array[i] === object) {\n                if (i === 0) {\n                    array.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    array.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    array.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n\n        return false\n    }\n}\n\nexport default Utils","import { Duration } from \"../model/model\";\n\nclass DateUtils {\n    private static dayMills: number = 24 * 60 * 60 * 1000\n    public static dayOffset: number = 6\n\n    // 获得今天某个小时的时间戳\n    public static getCurrentDayStamp(hour: number): number {\n        let today = new Date();\n        today.setHours(hour, 0, 0, 0);\n        return today.getTime();\n    }\n\n    // 获得某个时间戳那天某个小时的时间戳\n    public static getSomeDayStamp(someStamp: number, hour: number): number {\n        let day = new Date(someStamp)\n        day.setHours(hour, 0, 0, 0)\n        return day.getTime();\n    }\n\n    // 获得某天偏移某个小时后的dur\n    // 暂时 offsetHour 只支持 0-24 之间的数\n    public static getOffsetedDayDur(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    // 返回某个dur覆盖到的所有天的0点时间戳\n    public static getDurationCoveredDays(dur: Duration): number[]{\n        let startDay = DateUtils.getSomeDayStamp(dur.start, 0)\n        const endDay = DateUtils.getSomeDayStamp(dur.end, 0)\n        const result = []\n        result.push(startDay)\n        while (startDay < endDay) {\n            startDay += DateUtils.dayMills\n            result.push(startDay)\n        }\n        result.push(endDay)\n        return result\n    }\n\n    //-------------------- 以下业务相关 --------------------\n\n    /**\n     * 获得今天（是否当天按 dayOffset 判断） offset 某些天的 0 点时间戳\n     */\n    public static getMyCurrentDayStamp(offsetDay: number, dayOffset: number): number {\n        let now = new Date().getTime()\n        // 今天6点\n        let todayOffset = DateUtils.getCurrentDayStamp(dayOffset)\n\n        if (now > todayOffset) {\n            return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay\n        } else {\n            return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay\n        }\n    }\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 dur，这个某些天本身也 offset 6\n     */\n    public static getMyCurrentDayDur(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, DateUtils.dayOffset), DateUtils.dayOffset)\n    }\n\n    /**\n     * 获得今天（是否当天按0点判断） offset 某些天的 dur, 这个是0\n     */\n    public static getMyCurrentDayDur2(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, 0), 0)\n    }\n\n    public static isSameDay(time1: number, time2: number): boolean {\n        return new Date(time1).getDay() ===  new Date(time2).getDay()\n    }\n\n\n}\n\nexport default DateUtils","import Dexie, { PromiseExtended } from 'dexie';\nimport { Task, Duration, StoreModel, AdjustConsume, Note, CycleRecord, TimeLine, ChildTask } from '../model/model'\nimport Utils from '../utils/Utils';\nimport { plainToClass } from \"class-transformer\";\n\ninterface ITaskDBItem {\n    dbId?: number\n    id: number\n    modifyTime: number\n    jsonContent: string\n}\n\ninterface CycleRecordDBItem {\n    dbId?: number\n    id: number\n    modifyTime: number\n    jsonContent: string\n}\n\nclass MainDB extends Dexie {\n    public tasks: Dexie.Table<ITaskDBItem, number>;\n    public cycleRecords: Dexie.Table<CycleRecordDBItem, number>;\n\n    public constructor() {\n        super(\"MainDB_V1\");\n\n        // 这玩意的升级好像有点问题\n        this.version(1).stores({\n            tasks: \"++dbId, id, modifyTime, jsonContent\",\n            cycleRecords: \"++dbId, id, modifyTime, jsonContent\"\n        });\n        this.tasks = this.table(\"tasks\");\n        this.cycleRecords = this.table(\"cycleRecords\");\n    }\n\n    public deleteAll(){\n        this.transaction('rw', this.tasks, this.cycleRecords, async () => {\n            this.tasks.clear()\n            this.cycleRecords.clear()\n        }).catch(e => {\n            alert(e.stack || e);\n        });\n    }\n\n    /* ----------------------------------------------------------------------------------- */\n\n    public saveTask(task: Task) {\n        this.transaction('rw', this.tasks, async () => {\n            // task.dbId = await this.tasks.put(new TaskDBItem(task.id, Utils.getTimestamp(), JSON.stringify(task), task.dbId))\n\n            console.log(`SaveTask dbId:${task.dbId} id:${task.id} name:${task.title}`)\n\n            if (task.dbId) {\n                task.dbId = await this.tasks.put({ dbId: task.dbId, id: task.id, modifyTime: Utils.getTimestamp(), jsonContent: JSON.stringify(task) })\n            } else {\n                task.dbId = await this.tasks.put({ id: task.id, modifyTime: Utils.getTimestamp(), jsonContent: JSON.stringify(task) })\n            }\n        }).catch(e => {\n            alert(e.stack || e);\n        });\n    }\n\n    /**\n     * todo 先取所有的，之后可以优化成需要什么取什么\n     * 这里不用promise是因为其实是一样的，还不如封装地简单一点\n     */\n    public fetchAllTasks(callback: (tags: Task[]) => void) {\n        this.transaction('rw', this.tasks, async () => {\n            const dbTags = await this.tasks.toArray();\n            callback(dbTags.map(value => {\n                const task = plainToClass(Task, JSON.parse(value.jsonContent))\n                task.dbId = value.dbId\n                task.adaptData()\n                return task\n            }).filter(task => !task.isDeleted))\n        }).catch(e => {\n            alert(e.stack || e);\n        });\n    }\n\n    /* ----------------------------------------------------------------------------------- */\n    /**\n     * 完全是一模一样的模板...\n     */\n    public saveCycleRecord(task: CycleRecord) {\n        this.transaction('rw', this.cycleRecords, async () => {\n            task.dbId = await this.cycleRecords.put({ id: task.id, modifyTime: Utils.getTimestamp(), jsonContent: JSON.stringify(task) })\n        }).catch(e => {\n            alert(e.stack || e);\n        });\n    }\n\n    public fetchAllCycleRecord(callback: (tags: CycleRecord[]) => void) {\n        this.transaction('rw', this.cycleRecords, async () => {\n            const dbTags = await this.cycleRecords.toArray();\n            callback(dbTags.map(value => {\n                const task = plainToClass(CycleRecord, JSON.parse(value.jsonContent))\n                task.dbId = value.dbId\n                return task\n            }))\n        }).catch(e => {\n            alert(e.stack || e);\n        });\n    }\n}\n\nconst mainDB = new MainDB()\n\nexport default mainDB","import Utils from '../utils/Utils'\nimport { Type } from \"class-transformer\";\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport storeManager from '../stores/index';\nimport mainDB from \"../db/MainDB\";\n\n\nclass Task {\n    // todo delete 内存id增加器（因为mock初始化太快了，都在一个毫秒内）\n    private static idCounter = 0\n\n    public id: number = -1\n    dbId?: number\n    public title: string = \"undefine\"\n\n    @Type(() => Note)\n    public note: Note = new Note()\n\n    public level: number = 3\n\n    public createTime: number = -1\n    public doneTime: number = -1\n\n    // 这两个其实独立存储的\n    public pendingDeadline: number = -1\n    public pendingReason: string = \"\"\n\n    // 可修改，最后一个有效\n    public deadlines: number[] = []\n    // 预计花费时间，单位毫秒，可修改，最后一个有效\n    public expectConsumes: number[] = []\n    // 预期开始时间，默认是createTime，可以设置成不同时间，如果在 expectStartTime 前开始任务，此时间会自动变成这个开始任务的时间（显示逻辑一致）\n    public expectStartTime: number = -1\n\n    @Type(() => AdjustConsume)\n    public adjusts: AdjustConsume[] = []\n\n    @Type(() => Duration)\n    public doingDurs: Duration[] = []\n\n    @Type(() => ChildTask)\n    public childTasks: ChildTask[] = []\n\n    public cycleId: number = -1\n\n    public isDeleted: boolean = false\n\n    // 反序列化不能有带参数的构造器\n    // public constructor(title: string) {\n    //     this.title = title\n    //     this.createTime = Utils.getTimestamp()\n\n    //     this.id = Utils.generateId() + Task.idCounter\n    //     Task.idCounter = Task.idCounter + 1000\n    // }\n\n    public init(title: string) {\n        this.title = title\n        this.createTime = Utils.getTimestamp()\n        this.expectStartTime = this.createTime\n\n        this.id = Utils.generateId() + Task.idCounter\n        Task.idCounter = Task.idCounter + 1000\n    }\n\n    public adaptData() {\n        if (this.expectStartTime === -1) {\n            this.expectStartTime = this.createTime\n        }\n    }\n\n    public isSameTask(task: Task | undefined): boolean {\n        if (task === undefined) {\n            return false\n        } else {\n            return this.id === task.id\n        }\n    }\n\n    public isDoing(): boolean {\n        if (this.doingDurs.length === 0) {\n            return false\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.end === -1\n        }\n    }\n\n    public isCycleTask(): boolean {\n        return this.cycleId !== -1\n    }\n\n    public isStarted(): boolean {\n        return this.doingDurs.length !== 0\n    }\n\n    public lastStartTime(): number {\n        if (this.doingDurs.length === 0) {\n            return -1\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.start\n        }\n    }\n\n    public start() {\n        let duration = new Duration()\n        const currentTime = Utils.getTimestamp();\n        duration.init(currentTime)\n        this.doingDurs.push(duration)\n\n        if (currentTime < this.expectStartTime) {\n            this.expectStartTime = currentTime\n        }\n    }\n\n    public stop() {\n        // 避免 timeline 出现这一个先开始，下一个后结束的排序问题（同一个毫秒），这里做一个偏移\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() - 1\n    }\n\n    public stopDelay(delay: number) {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() + delay\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public isFutureTask(dur: Duration): boolean {\n        return this.expectStartTime > dur.end\n    }\n\n    public isPending(): boolean {\n        return this.pendingDeadline !== -1\n    }\n\n    public isDangerousPending(): boolean {\n        return this.isTimeDangers(this.pendingDeadline)\n    }\n\n    public isDangerousDeadline(): boolean {\n        return this.isTimeDangers(this.getActualDeadline())\n    }\n\n    public isDangerous(): boolean {\n        return this.isDangerousPending() || this.isDangerousDeadline()\n    }\n\n    /**\n     * dealine 距离还有2个小时，或者已经过了\n     */\n    private isTimeDangers(deadline: number): boolean {\n        if (deadline <= 0) {\n            return false\n        }\n\n        if (deadline - Utils.getTimestamp() <= 2 * 60 * 60 * 1000) {\n            return true\n        }\n\n        return false\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    // 返回毫秒数\n    // todo rename getAllDoingDuration\n    public getAllDuration(): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b) + this.allAdjusts()\n    }\n\n    public allAdjusts(): number {\n        if (this.adjusts.length === 0) {\n            return 0\n        }\n        return this.adjusts.map((adjust) => adjust.adjust).reduce((a, b) => a + b);\n    }\n\n    public getAllDurationInDur(limitDur: Duration): number {\n        // 完全没开始就不算了，起码点击下开始\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs\n            .map((value, index) => value.getLimitDur(index === this.doingDurs.length - 1, limitDur))\n            .reduce((a, b) => a + b)\n            + this.allDurAdjusts(limitDur)\n    }\n\n    public allDurAdjusts(limitDur: Duration): number {\n        const s = this.adjusts.filter((adjust) => limitDur.isIn(adjust.adjustTime))\n        if (s.length === 0) {\n            return 0\n        }\n        return s.map((adjust) => adjust.adjust).reduce((a, b) => a + b);\n    }\n\n    public getActualDeadline(): number {\n        if (this.deadlines.length === 0) {\n            return -1\n        }\n\n        return this.deadlines[this.deadlines.length - 1]\n    }\n\n    public isHaveDeadline(): boolean {\n        return this.getActualDeadline() > 0\n    }\n\n    public getActualExpectConsume(): number {\n        if (this.expectConsumes.length === 0) {\n            return -1\n        }\n\n        return this.expectConsumes[this.expectConsumes.length - 1]\n    }\n\n    public isExpectConsume(): boolean {\n        return this.getActualExpectConsume() > 0\n    }\n\n    // 超出预期时间返回多花的时间，负值\n    // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n    public getLeftExpectConsumeTime(): number {\n        let left = this.getActualExpectConsume() - this.getAllDuration()\n\n        // 不用打印\n        // if (left < 0) {\n        //     console.error(\"超出预期时间\")\n        // }\n\n        return left\n    }\n\n    // todo 重复代码\n    public removeTimeline(timeline: TimeLine): boolean {\n        const timelines = this.note.timeLines;\n        let length = timelines.length;\n        for (let i = 0; i < length; i++) {\n            if (timelines[i].timeStamp === timeline.timeStamp) {\n                if (i === 0) {\n                    timelines.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    timelines.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    timelines.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    // todo 重复代码\n    public removeDuration(startOrEnd: number): boolean {\n        let length = this.doingDurs.length;\n        for (let i = 0; i < length; i++) {\n            if (this.doingDurs[i].isValid(false) && (this.doingDurs[i].start === startOrEnd || this.doingDurs[i].end === startOrEnd)) {\n                if (i === 0) {\n                    this.doingDurs.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.doingDurs.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.doingDurs.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    public removeChildTask(childTask: ChildTask): boolean {\n        let length = this.childTasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.childTasks[i].createTime == childTask.createTime) {\n                if (i === 0) {\n                    this.childTasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.childTasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.childTasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    public getOrderedChildTasks(): ChildTask[] {\n        return this.childTasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 然后比较level\n                if (a.order > b.order) {\n                    return -1\n                } else if (a.order < b.order) {\n                    return 1\n                } else {\n                    // 同样 level 比较创建时间\n                    if (a.createTime > b.createTime) {\n                        return -1\n                    } else if (a.createTime < b.createTime) {\n                        return 1\n                    } else {\n                        return 0\n                    }\n                }\n            }\n        })\n    }\n}\n\nclass Duration {\n    public start: number = -1\n    public end: number = -1\n    public name: string = \"\"\n\n    // todo 没法重载\n    public init(start: number) {\n        this.start = start\n    }\n    public init2(start: number, end?: number) {\n        this.start = start\n        if (end != undefined) {\n            this.end = end\n        }\n    }\n\n    public isIn(timeStamp: number) {\n        return timeStamp >= this.start && timeStamp <= this.end\n    }\n\n    public getDur(isDoing: boolean = false): number {\n        const dur = this.getDurDur(isDoing)\n        if (dur === null) {\n            return 0\n        }\n        return dur.end - dur.start\n    }\n\n    public getDurDur(isDoing: boolean = false): Duration | null {\n        let end = this.end\n        if (end == -1 && isDoing) {\n            end = Utils.getTimestamp()\n        }\n        if (end == -1) {\n            console.error(\"这段时间未结束\")\n            return null\n        }\n        return Duration.create(this.start, end)\n    }\n\n    /**\n     * 计算跟 limitDur 的交集时长\n     */\n    public getLimitDur(isDoing: boolean, limitDur: Duration): number {\n        const dur = this.getDurDur(isDoing)?.getJoin(limitDur)\n        if (dur === null || dur === undefined) {\n            return 0\n        }\n        return dur.end - dur.start\n    }\n\n    public isValid(isDoing: boolean) {\n        if (!isDoing && this.end == -1) return false\n        return true\n    }\n\n    public static create(start?: number, end?: number, name?: string): Duration {\n        let dur = new Duration()\n        if (start != undefined) {\n            dur.start = start\n        }\n        if (end != undefined) {\n            dur.end = end\n        }\n        if (name != undefined) {\n            dur.name = name\n        }\n        return dur\n    }\n\n    public getJoin(limitDur: Duration): Duration | null {\n        if (this.end <= limitDur.start || this.start >= limitDur.end) {\n            return null\n        }\n\n        return Duration.create(Math.max(limitDur.start, this.start), Math.min(limitDur.end, this.end))\n    }\n}\n\nclass AdjustConsume {\n    // 调整耗时 单位毫秒\n    public adjust: number = -1\n    public adjustTime: number = -1\n\n    public static create(adjust: number): AdjustConsume {\n        let dur = new AdjustConsume()\n        dur.adjust = adjust\n        dur.adjustTime = Utils.getTimestamp()\n        return dur\n    }\n}\n\nclass ChildTask {\n    public name: string = \"\"\n    public createTime: number = -1\n    public doneTime: number = -1\n    public order: number = -1\n\n    public static create(name: string): ChildTask {\n        let dur = new ChildTask()\n        dur.name = name\n        dur.createTime = Utils.getTimestamp()\n        return dur\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public addOrder() {\n        return this.order++\n    }\n\n    public downOrder() {\n        return this.order--\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    public reStart() {\n        this.doneTime = -1\n    }\n}\n\nclass CycleRecord {\n    dbId?: number\n    public id: number = -1\n\n    // 可以不断更新\n    public _startTime: number[] = []\n    // 单位天，其实不是gap，是 gap-1\n    public _gap: number[] = []\n\n    // ---- 模板\n    public title: string = \"undefine\"\n    public level: number = 3\n    public expectConsumes: number = -1\n    // ---- 模板\n\n    public init(gap: number, title: string, level: number) {\n        this.id = Utils.generateId()\n        this.title = title\n        this.level = level\n        this._gap.push(gap)\n        this._startTime.push(Utils.getTimestamp())\n    }\n\n    public getGap(): number {\n        if (this._gap.length === 0) {\n            return -1\n        }\n        return this._gap[this._gap.length - 1]\n    }\n\n    public setGap(gap: number) {\n        this._gap.push(gap)\n    }\n\n    public getStartTime(): number {\n        if (this._startTime.length === 0) {\n            return -1\n        }\n        return this._startTime[this._startTime.length - 1]\n    }\n\n    public setStartTime(startTime: number) {\n        this._startTime.push(startTime)\n    }\n\n    /**\n     * 只要 currentTimeStamp 这天 0点-24点 在 starttime + n*gap 的这天 0点-24点，就创建任务\n     * 创建的方式是找最新创建的一个任务，然后拷贝它的属性（这个有点复杂，要考虑没有最新创建任务的情况，暂时不这么实现，而是使用模板吧）\n     */\n    public isTimeToCreateTask(): boolean {\n        let currentZero = DateUtils.getCurrentDayStamp(0)\n        let startZero = DateUtils.getSomeDayStamp(this.getStartTime(), 0)\n        return (currentZero - startZero) % (this.getGap() * 24 * 3600 * 1000) === 0\n    }\n\n    /**\n     * 后来改成偏移 6小时\n     * 有点乱，直接改成0-6点不刷新吧？好像不行，应该是 0-6 点会刷新昨天的\n     */\n    public isTimeToCreateTask2(): boolean {\n        let currentZero = DateUtils.getMyCurrentDayStamp(0, DateUtils.dayOffset)\n        let startZero = DateUtils.getSomeDayStamp(this.getStartTime(), 0)\n        return (currentZero - startZero) % (this.getGap() * 24 * 3600 * 1000) === 0\n    }\n\n    public createTask(): Task {\n        const newTask = new Task()\n        newTask.init(`[周|${Format.formatTimeInDay2(DateUtils.getMyCurrentDayStamp(0, DateUtils.dayOffset))}] ${this.title}`)\n        newTask.level = this.level\n        newTask.expectConsumes.push(this.expectConsumes)\n        newTask.cycleId = this.id\n        newTask.expectStartTime = Utils.getTimestamp()\n        return newTask\n    }\n}\n\nclass Note {\n    public content: string = \"\"\n\n    @Type(() => TimeLine)\n    public timeLines: TimeLine[] = []\n\n    public hasTimeLine(): boolean {\n        return this.timeLines.length !== 0\n    }\n\n    public endTimeLine(): TimeLine | null {\n        if (!this.hasTimeLine()) return null\n        return this.timeLines[this.timeLines.length - 1]\n    }\n\n    /**\n     * 在普通的timeline上合并 start end 数据\n     */\n    public getStartEndWrappedTimeLines(doingDurs: Duration[]): TimeLine[] {\n        return doingDurs.map((dur) => {\n            const lines: TimeLine[] = []\n            if (dur.start > 0) {\n                // lines.push(TimeLine.createContentNode2(\"开始任务\", dur.start))\n                lines.push(TimeLine.createStartEndAutoNode(\"└┈┈┈┘\", dur.start))\n                // lines.push(TimeLine.createContentNode2(\"┗━━━━━━━━━━━┛\", dur.start))\n                // lines.push(TimeLine.createContentNode2(\"┏━━━━━━━━━━━┓\", dur.start))\n                // lines.push(TimeLine.createContentNode2(\"┌┈┈┈┈┈┈┈┈┈┈┈┐\", dur.start))\n            }\n            if (dur.end > 0) {\n                // lines.push(TimeLine.createContentNode2(\"停下任务\", dur.end))\n                lines.push(TimeLine.createStartEndAutoNode(\"┌┈┈┈┐\", dur.end))\n            }\n            return lines\n        }).flatMap((lines) => lines).concat(this.timeLines)\n    }\n\n    public getFormartTimeLines(doingDurs: Duration[]): TimeLine[] {\n        const all = this.getStartEndWrappedTimeLines(doingDurs)\n            .filter((timeline) => !timeline.isDivder) // 旧数据适配\n            .sort((a, b) => {\n                if (a.timeStamp > b.timeStamp) {\n                    return -1\n                } else if (a.timeStamp < b.timeStamp) {\n                    return 1\n                } else {\n                    return 0\n                }\n            })\n        return TimeLine.addDivders(all)\n    }\n}\n\nclass TimeLine {\n    public timeStamp: number = -1\n    public isDivder: boolean = false\n    public content: string = \"\"\n\n    // 渲染用的中间字段\n    public title: string = \"\"\n    public isStartEndAutoGen: boolean = false\n\n    public static createContentNode(content: string): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = Utils.getTimestamp()\n        t.content = content\n        return t\n    }\n\n    public static createStartEndAutoNode(content: string, timeStamp: number): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = timeStamp\n        t.content = content\n        t.isStartEndAutoGen = true\n        return t\n    }\n\n    public static createDivNode(timeStamp: number): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = timeStamp\n        t.isDivder = true\n        return t\n    }\n\n    public getTitled(title: string): TimeLine {\n        const copy = Object.assign({}, this)\n        // copy.content = `【${title}】${copy.content}`\n        copy.title = title\n        return copy\n    }\n\n    public getKey(): number {\n        return this.timeStamp * (this.isDivder ? -1 : 1)\n    }\n\n    public static addDivders(src: TimeLine[]): TimeLine[] {\n        if (src.length === 0) return []\n\n        return DateUtils.getDurationCoveredDays(Duration.create(src[src.length - 1].timeStamp, src[0].timeStamp))\n            .map((dayStamp) => {\n                return TimeLine.createDivNode(dayStamp)\n            })\n            .concat(src)\n            .sort((a, b) => {\n                if (a.timeStamp > b.timeStamp) {\n                    return -1\n                } else if (a.timeStamp < b.timeStamp) {\n                    return 1\n                } else {\n                    return 0\n                }\n            })\n            // 去掉重复的div，这个倒叙顺序只留第一个就好\n            .filter((timeline, index, array) => {\n                if (timeline.isDivder) {\n                    if (index == 0) {\n                        // 不应该\n                        return true\n                    } else {\n                        return !array[index - 1].isDivder\n                    }\n                } else {\n                    return true\n                }\n            })\n    }\n}\n\nclass Config {\n    public totalAdjustConsumeTime: number = 0\n\n    // -1 是不存\n    public autoSaveGapInHour: number = -1\n    public lastAutoSaveTime: number = -1\n\n    public isImported = false\n}\n\n/**\n * 内存数据 Model，\n */\nclass StoreModel {\n    @Type(() => Task)\n    public tasks: Task[] = []\n\n    @Type(() => CycleRecord)\n    public cycleRecords: CycleRecord[] = []\n\n    public config = new Config()\n\n    /**\n     * 筛选规则：\n     * 1. 所有 未完成 且 [预期开始时间在今天endtime之前](划掉) 的任务\n     * 2. 今天完成的任务\n     */\n    public getTasks(dur: Duration, isNeedFuture: boolean = true): Task[] {\n        const newTasks =  this.tasks.filter((value) => {\n            if (isNeedFuture) {\n                return (!value.isDone()) || dur.isIn(value.doneTime)\n            } else {\n                return (!value.isDone() && value.expectStartTime <= dur.end) || dur.isIn(value.doneTime)\n            }\n        }).filter(task => !task.isDeleted)\n\n        return this.sortTasks(newTasks, dur)\n    }\n\n    public getCurrentDayDoingTasks(dur: Duration): Task[] {\n        return this.tasks.filter((task) => {\n            return task.doingDurs.find((taskDur) => {\n                return dur.isIn(taskDur.start) // 这里对于跨天不是很友好\n            }) !== undefined\n                || task.adjusts.find((adjust) => {\n                    return dur.isIn(adjust.adjustTime)\n                }) !== undefined\n        })\n    }\n\n    public addTask(task: Task): string {\n        if (this.containsProject(task.id)) return \"same id\"\n        if (this.tasks.find((t) => !t.isDone() && t.title === task.title) !== undefined) return \"same title\"\n        this.tasks.push(task)\n        return \"\"\n    }\n\n    public addCycleRecord(cycleRecord: CycleRecord) {\n        if (this.containsCycleRecord(cycleRecord.id)) return\n        this.cycleRecords.push(cycleRecord)\n    }\n\n    public invokeAddCycleTask() {\n        this.cycleRecords.forEach(record => {\n            if (record.isTimeToCreateTask2()) {\n                const isNotCreated = this.tasks.filter((task) => {\n                    const isSameId = task.cycleId === record.id\n                    const isTodayTask = DateUtils.getMyCurrentDayDur(0).isIn(task.createTime)\n                    // console.log(`isNotCreated, isSameId:${isSameId} isTodayTask:${isTodayTask}`)\n                    return isSameId && isTodayTask\n                }).length === 0\n                if (isNotCreated) {\n                    console.log(`create cycle task, record:${record.title}`)\n                    const task = record.createTask()\n                    this.addTask(task)\n                    mainDB.saveTask(task)\n  \n                    // 点击任务为什么会添加到数据库，而且还添加好几次，之前应该就是这时候持久化导致卡顿的\n                    // 这里没复现应该是太快了，我有点怀疑，因为存储是异步的，所以导致这个问题\n                }\n            }\n        });\n    }\n\n    public removeTask(task: Task): boolean {\n        if (!this.containsProject(task.id)) return false\n\n        let length = this.tasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.tasks[i].id === task.id) {\n                if (i === 0) {\n                    this.tasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.tasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.tasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    private containsProject(id: number): boolean {\n        return this.tasks.find(item => item.id === id) !== undefined\n    }\n\n    private containsCycleRecord(id: number): boolean {\n        return this.cycleRecords.find(item => item.id === id) !== undefined\n    }\n\n    // 最好是定时刷新之类的\n    public normalUpdate(currentDay: Duration) {\n        this.invokeAddCycleTask()\n        this.orderTasks(currentDay)\n\n        // 直接this.invokeAutoDownload会有this问题，报错：TypeError: Converting circular structure to JSON\n        setTimeout(() => this.invokeAutoDownload(), 0)\n    }\n\n    public invokeAutoDownload() {\n        if (this.config.autoSaveGapInHour > 0) {\n            if (Utils.getTimestamp() - this.config.lastAutoSaveTime > this.config.autoSaveGapInHour * 3600 * 1000) {\n                this.download()\n            }\n        }\n    }\n\n    public download() {\n        Utils.downloadModelFile(this)\n        this.config.lastAutoSaveTime = Utils.getTimestamp()\n\n        // 这个没有方法，只有状态，还是有问题，只好手动拿出来存了\n        // const { saveConfig } = storeManager.getState('mainmodel') as { saveConfig: () => void};\n        // saveConfig()\n        localStorage.setItem('CONFIG_STORE_KEY', JSON.stringify(this.config))\n    }\n\n    // todo 应该是每次渲染的时候排序\n    public orderTasks(currentDay: Duration) {\n        \n    }\n\n    public sortTasks(tasks: Task[], currentDay: Duration): Task[] {\n        return tasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 未来的任务也放后面\n                if (a.isFutureTask(currentDay) && !b.isFutureTask(currentDay)) {\n                    return 1\n                } else if (!a.isFutureTask(currentDay) && b.isFutureTask(currentDay)) {\n                    return -1\n                } else {\n                    // 正在做的放最前\n                    if (a.isDoing()) {\n                        return -1\n                    } else if (b.isDoing()) {\n                        return 1\n                    } else {\n                        // 到时间的放前面\n                        if (a.isDangerous() && !b.isDangerous()) {\n                            return -1\n                        } else if (!a.isDangerous() && b.isDangerous()) {\n                            return 1\n                        } else {\n                            // 然后比较level\n                            if (a.level > b.level) {\n                                return 1\n                            } else if (a.level < b.level) {\n                                return -1\n                            } else {\n                                // 同样 level 比较创建时间\n                                if (a.createTime > b.createTime) {\n                                    return -1\n                                } else if (a.createTime < b.createTime) {\n                                    return 1\n                                } else {\n                                    return 0\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        })\n    }\n}\n\n\nexport { Task, Duration, Config, StoreModel, AdjustConsume, Note, CycleRecord, TimeLine, ChildTask }","import { Task, Config, StoreModel, CycleRecord } from '../model/model'\nimport Utils from '../utils/Utils';\nimport stores from '../stores';\nimport 'reflect-metadata'\nimport '../../node_modules/reflect-metadata/Reflect.js'\nimport { plainToClass } from \"class-transformer\";\nimport mainDB from \"../db/MainDB\";\n\n\nconst CONFIG_STORE_KEY = 'CONFIG_STORE_KEY'\n\n/**\n * storeModel 管理器，也就是整个内存数据管理中心\n */\ninterface Model {\n    storeModel: StoreModel | undefined,\n\n    fetchData: () => void\n    saveTask: (task: Task) => void\n    saveCycleRecord: (task: CycleRecord) => void\n    importModel:(model: StoreModel) => void\n    _onInitFinish:(model: StoreModel) => void\n\n    saveConfig: () => void\n}\nconst mainModel: Model = {\n    // todo 这里异步初始化不知道怎么处理更好\n    storeModel: undefined,\n    fetchData() {\n        if (this.storeModel === undefined) {\n            this.storeModel = new StoreModel()\n\n            let storageJson = localStorage.getItem(CONFIG_STORE_KEY)\n            if (storageJson != null) {\n                try {\n                    this.storeModel.config = plainToClass(Config, JSON.parse(storageJson))\n                } catch (error) {\n                    console.error(\"CONFIG_STORE_KEY RESTORE RERROR:\" + storageJson)\n                }\n            }\n\n            // todo 这里其实适合两个 promise，但是暂时先不改\n            mainDB.fetchAllTasks(tasks => {\n                if (this.storeModel !== undefined) {\n                    this.storeModel.tasks = tasks\n                    this._onInitFinish(this.storeModel)\n                }\n            })\n            mainDB.fetchAllCycleRecord(tasks => {\n                if (this.storeModel !== undefined) {\n                    this.storeModel.cycleRecords = tasks\n                    this._onInitFinish(this.storeModel)\n                }\n            })\n        }\n    },\n    saveTask(task: Task) {\n        // todo 是否要更新 storeModel\n        mainDB.saveTask(task)\n    },\n    saveCycleRecord(task: CycleRecord) {\n        mainDB.saveCycleRecord(task)\n    },\n    importModel(model: StoreModel){\n        this.storeModel = model\n        mainDB.deleteAll()\n        this.storeModel.tasks.forEach(task => mainDB.saveTask(task))\n        this.storeModel.cycleRecords.forEach(record => mainDB.saveCycleRecord(record))\n        this.storeModel.config.isImported = true\n        this.saveConfig()\n    },\n    // 用来刷新 storeModel 的监听 view\n    _onInitFinish(model: StoreModel){\n        this.storeModel = model\n    },\n    saveConfig() {\n        localStorage.setItem(CONFIG_STORE_KEY, JSON.stringify(this.storeModel?.config))\n    },\n};\n\nexport default mainModel","import { Task } from '../model/model'\n\nconst CurrentTaskKey = \"CurrentTaskKey\"\n\nconst currentTaskStore = {\n    currentTask: undefined as Task|undefined,\n\n    setCurrentTask(task: Task|undefined) {\n        this.currentTask = task\n    },\n};\n\nexport {CurrentTaskKey, currentTaskStore}","import { Task } from '../model/model'\n\nconst CurrentDoingTaskKey = \"CurrentDoingTaskKey\"\n\nconst currentDoingTaskStore = {\n    currentDoingTask: undefined as Task|undefined,\n\n    setCurrentDoingTask(task: Task| undefined) {\n        this.currentDoingTask = task\n    },\n};\n\nexport {CurrentDoingTaskKey, currentDoingTaskStore}","import mainmodel from './MainStore';\nimport Store from '@ice/store';\n\nimport { CurrentTaskKey, currentTaskStore } from './CurrentTaskStore';\nimport { CurrentDoingTaskKey, currentDoingTaskStore } from './CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey, currentDayOffsetStore } from './CurrentDayOffsetStore';\nimport { SearchModeStoreKey, SearchModeStore } from './SearchModeStore';\nimport { SearchTextStoreKey, SearchTextStore } from './SearchTextStore';\n\nconst storeManager = new Store();\n//  *（@@@？todo 使用常量 mainmodel？）* \nstoreManager.registerStore('mainmodel', mainmodel);\nstoreManager.registerStore(CurrentTaskKey, currentTaskStore);\nstoreManager.registerStore(CurrentDoingTaskKey, currentDoingTaskStore);\nstoreManager.registerStore(CurrentDayOffsetKey, currentDayOffsetStore);\nstoreManager.registerStore(SearchTextStoreKey, SearchTextStore);\nstoreManager.registerStore(SearchModeStoreKey, SearchModeStore);\n\nexport default storeManager;","\nconst CurrentDayOffsetKey = \"CurrentDayOffsetKey\"\n\nconst currentDayOffsetStore = {\n    currentDayOffset: 0,\n\n    setCurrentDayOffset(offset: number) {\n        this.currentDayOffset = offset\n    },\n};\n\nexport {CurrentDayOffsetKey, currentDayOffsetStore}","\nconst SearchTextStoreKey = \"SearchTextStoreKey\"\n\nconst SearchTextStore = {\n    searchText: \"\",\n\n    setSearchText(searchText: string) {\n        this.searchText = searchText\n    },\n};\n\nexport {SearchTextStoreKey, SearchTextStore}","\nconst SearchModeStoreKey = \"SearchModeStoreKey\"\n\n/**\n * 0 表示不是 search mode, 1 表示只匹配标题，2 表示匹配标题和内容\n */\nconst SearchModeStore = {\n    searchMode: 0,\n\n    setSearchMode(searchMode: number) {\n        this.searchMode = searchMode\n    },\n};\n\nexport {SearchModeStoreKey, SearchModeStore}","import { Task } from '../model/model'\nimport Format from '../utils/Format'\nimport Utils from '../utils/Utils'\n\nclass TaskInfoFormat {\n\n    public static getDoingStatusTips(task: Task): string {\n        if (task.isDoing()) {\n            return \"Doing 🔴\"\n            // ⛑🏃‍♀️🧠 🏄‍♂️ 🌟 🔴\n        } else {\n            return \"\"\n        }\n    }\n\n    public static getConsumed(task: Task): string {\n        let time = Format.formatDuration2(task.getAllDuration());\n        if (Utils.isStringEmpty(time)) {\n            return \"\"\n        }\n        return `进行${time}(${task.doingDurs.length}次) `\n    }\n\n    public static getDeadline(task: Task): string {\n        const pendingStatus = TaskInfoFormat.getPendingStatus(task)\n        if (Utils.isStringEmpty(pendingStatus)) {\n            return TaskInfoFormat.getDeadlineStatus(task)\n        } else {\n            return pendingStatus\n        }\n    }\n\n    private static getDeadlineStatus(task: Task): string {\n        let deadline = task.getActualDeadline()\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Dead超期❗ `\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Dead剩余${time} `\n    }\n\n    // todo 合并重复函数\n    private static getPendingStatus(task: Task): string {\n        let deadline = task.pendingDeadline\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Pend超期(${task.pendingReason})❗`\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Pend剩余${time} `\n    }\n\n    public static getConsumeExpected(task: Task): string {\n        if (task.getActualExpectConsume() <= 0) {\n            return \"\"\n        }\n\n        let left = task.getLeftExpectConsumeTime()\n        if (left <= 0) {\n            return `多用${Format.formatDuration2(-left)} `\n        } else {\n            return `还要${Format.formatDuration2(left)} `\n        }\n    }\n\n    public static getStartExpected(task: Task): string {\n        const currentTime = Utils.getTimestamp()\n        if (currentTime > task.expectStartTime) {\n            return \"\"\n        }\n\n        return `还有${Format.formatDuration2(task.expectStartTime - currentTime)}开始`\n    }\n}\n\nexport default TaskInfoFormat","import 'reflect-metadata'\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, Modal, Button, message } from 'antd';\nimport stores from '../stores';\nimport { StoreModel, Task, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport Utils from '../utils/Utils'\nimport { plainToClass } from \"class-transformer\";\n\n\nconst ConfigLayout: React.FC = () => {\n  const { storeModel, saveConfig, importModel } = stores.useStore('mainmodel') as { storeModel: StoreModel | undefined, saveConfig: () => void, importModel: (model: StoreModel) => void };\n\n  const [visible, setVisible] = useState(false);\n  const [autoSaveGapInHour, setAutoSaveGapInHour] = useState(0);\n\n  useEffect(() => {\n    if (storeModel !== undefined) {\n      setAutoSaveGapInHour(storeModel.config.autoSaveGapInHour)\n    }\n  }, [visible])\n\n  function handleOk(event: any) {\n    if (storeModel === undefined) {\n      return\n    }\n\n    storeModel.config.autoSaveGapInHour = autoSaveGapInHour\n    saveConfig()\n    setVisible(false)\n  }\n\n  function handleCancel(event: any) {\n    setVisible(false)\n  }\n\n  function download() {\n    storeModel?.download()\n  }\n\n  function upload(e: any) {\n    let file = e.target.files[0];\n    // console.log(file)\n\n    let reader = new FileReader();\n    reader.onload = function (this) {\n      let uploadContent = this.result\n      if (typeof uploadContent === 'string') {\n        Modal.confirm({\n          title: '确定要导入嘛？',\n          content: `导入会覆盖当前所有任务`,\n          onOk() {\n\n            // 不提示了，就是存！\n            download()\n            importModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n\n            // Modal.confirm({\n            //   title: '是否需要先下载当前任务？',\n            //   content: ``,\n            //   onOk() {\n            //     download()\n            //     importModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n            //   },\n            //   onCancel() {\n            //     importModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n            //   }\n            // });\n          },\n        })\n      } else {\n        message.error(\"导入文件有问题，导入失败\")\n      }\n    }\n    //读取文件内容\n    reader.readAsText(file);\n  }\n\n  return (\n    <span>\n      <Button type=\"primary\" size=\"small\" onClick={(e) => setVisible(true)}>\n        设置\n        </Button>\n      <Modal\n        title=\"设置\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <div>\n          <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导出</Button>\n          <input style={{ width: \"100px\", marginRight: \"20px\" }} type=\"file\" id=\"upload-file\" multiple onChange={(event) => upload(event)} />\n        </div>\n\n        <Input style={{ width: '170px', marginTop: \"15px\" }} value={autoSaveGapInHour} placeholder=\"-1为关闭\" prefix=\"自动保存间隔\" suffix=\"h\" onChange={(event) => setAutoSaveGapInHour(Number(event.target.value))} />\n      </Modal>\n    </span>\n  );\n}\n\nexport default ConfigLayout;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, Row, Col, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\n// 这样居然真的行\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport stores from '../stores';\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { Task, Note, CycleRecord } from '../model/model'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport { SearchModeStoreKey } from '../stores/SearchModeStore';\nimport { SearchTextStoreKey } from '../stores/SearchTextStore';\nimport ConfigLayout from './ConfigLayout';\nimport 'antd/dist/antd.css';\nimport { plainToClass } from \"class-transformer\";\nimport moment from 'moment'\n\nconst Container = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst ParamTag = styled.span`\n  width:100px;\n  display:inline-block;\n  text-align:center;\n`\n\nconst Container2 = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  overflow:auto;\n  /* height: 800px; */\n  /* height: 83vh; */\n  margin-top:10px;\n\n  /* flex: 0 1 auto 居然效果一样 */\n  flex: 1 1 auto;\n`\n\nconst InputGroup = styled(Input.Group)`\nmargin: 1%;\n`\nconst ButtonGroup = styled(Button.Group)`\nmargin: 1%;\n`\n\nconst AlertTips = styled.span`\n padding: 4px;\nbackground-color: ${(props: { isDangerous: boolean }) => {\n    if (props.isDangerous) {\n      return '#ff0000'\n    } else {\n      return '#ffffff'\n    }\n  }\n  };\ncolor: ${(props: { isDangerous: boolean }) => {\n    if (props.isDangerous) {\n      return '#ffff00'\n    } else {\n      return '#000000aa'\n    }\n  }\n  };\n  font-weight: ${(props: { isDangerous: boolean }) => {\n    if (props.isDangerous) {\n      return 'bold'\n    } else {\n      return 'normal'\n    }\n  }\n  };\n`\n\nconst TaskListContainer: React.FC = () => {\n  const { storeModel, saveTask, saveCycleRecord } = stores.useStore('mainmodel') as { storeModel: StoreModel | undefined, saveTask: (task: Task) => void, saveCycleRecord: (cycleRecord: CycleRecord) => void }\n\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n  const { searchMode, setSearchMode } = stores.useStore(SearchModeStoreKey) as { searchMode: number, setSearchMode: (searchMode: number) => void }\n  const { searchText, setSearchText } = stores.useStore(SearchTextStoreKey) as { searchText: string, setSearchText: (searchText: string) => void }\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task | undefined) => void }\n\n  const [title, setTitle] = useState(\"\");\n  const [searchTextUI, setSearchTextUI] = useState(\"\");\n\n  const [isNeedExceptTime, setNeedExceptTimeUI] = useState(true);\n  const [expectTime, setExpectTime] = useState(2);\n\n  const [level, setLevel] = useState(3);\n\n  const [isCycleTask, setCycleTaskUI] = useState(false);\n  const [cycleGap, setCycleGap] = useState(1);\n\n  const [isLongTask, setLongTaskUI] = useState(false);\n  const [exceptWorkday, setExceptWorkday] = useState(3);\n  const [exceptHoliDay, setExceptHoliDay] = useState(1);\n\n  const [isStartNow, setStartNow] = useState(true);\n  const [expectStartTime, setExpectStartTime] = useState<any>(null);\n\n  // React.useEffect(() => {\n  //   console.log(\"TaskListContainer useEffect\")\n  // },[])\n\n  function setNeedExceptTime(isNeedExceptTime: boolean) {\n    if (!isNeedExceptTime && isLongTask) {\n      message.error(\"长任务必须估时\")\n      return\n    }\n\n    setNeedExceptTimeUI(isNeedExceptTime)\n  }\n\n  function setCycleTask(isCycleTask: boolean) {\n    if (isCycleTask) {\n      setLongTask(false)\n    }\n\n    setCycleTaskUI(isCycleTask)\n  }\n\n  function setLongTask(isLongTask: boolean) {\n    if (isLongTask) {\n      setNeedExceptTime(true)\n      setCycleTask(false)\n    }\n\n    setLongTaskUI(isLongTask)\n  }\n\n  function onAddTask(event: any) {\n    event.preventDefault();\n\n    if (storeModel === undefined) {\n      message.error(\"storeModel not init onAddTask\")\n      return\n    }\n\n    if (Utils.isStringEmpty(title)) {\n      message.error(\"请输入内容\")\n      return\n    }\n    if (isLongTask && isCycleTask) {\n      message.error(\"不能同时是长任务和周期任务\")\n      return\n    }\n\n    if (isCycleTask) {\n      const newRecord = new CycleRecord()\n      newRecord.init(cycleGap, title, level)\n\n      if (!isStartNow && expectStartTime !== null) {\n        newRecord.setStartTime(expectStartTime.valueOf())\n      }\n\n      if (isNeedExceptTime) {\n        newRecord.expectConsumes = expectTime * 3600 * 1000 // 单位小时，转换\n      } else {\n        newRecord.expectConsumes = -1 // 表示不设置时间\n      }\n\n      storeModel.addCycleRecord(newRecord)\n      storeModel.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n      saveCycleRecord(newRecord)\n    } else {\n      const newTask = new Task()\n      newTask.init(title)\n      newTask.level = level\n\n      if (!isStartNow && expectStartTime !== null) {\n        newTask.expectStartTime = expectStartTime.valueOf()\n      }\n\n      if (isNeedExceptTime) {\n        newTask.expectConsumes.push(expectTime * 3600 * 1000) // 单位小时，转换\n      } else {\n        newTask.expectConsumes.push(-1) // 表示不设置时间\n      }\n\n      const addResult = storeModel.addTask(newTask)\n      if (!Utils.isStringEmpty(addResult)) {\n        message.error(`添加失败 ${addResult}`)\n        return\n      }\n      saveTask(newTask)\n\n      storeModel.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    }\n\n    setTitle(\"\")\n    setExpectStartTime(null)\n  }\n\n  function changeOffsetDay(isAdd: boolean) {\n    if (isAdd) {\n      setCurrentDayOffset(currentDayOffset + 1)\n    } else {\n      setCurrentDayOffset(currentDayOffset - 1)\n    }\n  }\n\n  \n\n  function getOffsetString() {\n    let base = \"\" + currentDayOffset\n    if (currentDayOffset > 0) {\n      base = \"+\" + base\n    }\n    return base\n  }\n\n  function getAllTaskStatus(): string {\n    if (storeModel === undefined) {\n      return \"\"\n    }\n\n    let notDoneTasks = storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset), false).filter((task) => { return !task.isDone() })\n\n    if (notDoneTasks.length === 0) {\n      return \"\"\n    }\n\n    let consumeFormat = \"\"\n    let consumes: number = notDoneTasks.map((task) => {\n      let left = task.getLeftExpectConsumeTime()\n      if (left < 0) return 0\n      return left\n    }).reduce((a, b) => a + b)\n\n    // console.log(\"getAllTaskStatus\" + consumes)\n    if (consumes > 0) {\n      consumeFormat = `，总剩余预估需要花费${Format.formatDuration(consumes)}`\n    }\n\n    return `共${notDoneTasks.length}个任务未完成${consumeFormat}`\n  }\n\n  function getMenu(): React.ReactElement {\n    return (\n      <Menu onClick={(param) => setLevel(Number(param.key))}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n\n  function search() {\n    setSearchText(searchTextUI)\n  }\n\n  function switchSearchMode(searchModeLocal: number) {\n    setCurrentTask(undefined)\n    setSearchMode(searchModeLocal)\n  }\n\n  function isSearchMode(){\n    return searchMode !== 0\n  }\n\n  return (\n    <Container>\n\n      <Div style={{ flex: \"0 1 auto\" }}>\n        <ButtonGroup>\n        <ConfigLayout/>\n        <span style={{ paddingLeft: 10 }} ></span>\n          <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(false)}>←</Button>\n\n          <span style={{ backgroundColor: \"#ffffff\", padding: 4 }} >\n            {Format.formatTimeInDay(DateUtils.getMyCurrentDayStamp(currentDayOffset, DateUtils.dayOffset))}({getOffsetString()})\n        </span>\n\n          <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(true)}>→</Button>\n          <span style={{ paddingLeft: 10 }} ></span>\n          \n          {\n            storeModel !== undefined &&\n            <AlertTips isDangerous={storeModel.config.totalAdjustConsumeTime !== 0}>\n              需平衡时间：{-storeModel.config.totalAdjustConsumeTime / (3600 * 1000)}h\n        </AlertTips>\n          }\n\n          <Switch style={{ marginLeft: '10px', marginRight: '3px' }} checkedChildren=\"Search\" unCheckedChildren=\"Normal\" checked={isSearchMode()} onChange={(event) => switchSearchMode(event? 1: 0)} />\n\n          {\n          isSearchMode() &&\n          <Switch checkedChildren=\"内容\" unCheckedChildren=\"标题\" checked={searchMode == 2} onChange={(event) => switchSearchMode(event ? 2 : 1)} />      \n          }\n\n        </ButtonGroup>\n\n        {\n          !isSearchMode() &&\n          <div>\n            <Row align=\"middle\" style={{ margin: \"10px\" }}>\n              <Col flex=\"1 1 auto\">\n                <Input placeholder=\"输入任务，回车添加\" value={title} onChange={(event) => setTitle(event.target.value)} onPressEnter={onAddTask} />\n              </Col>\n              <Col flex=\"0 1 auto\">\n\n                <Dropdown overlay={getMenu()}>\n                  <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                    {formartLevel(level)} <DownOutlined />\n                  </a>\n                </Dropdown>\n\n                {isNeedExceptTime &&\n                  <Input style={{ width: '100px', marginLeft: \"15px\" }} value={expectTime} placeholder=\"花费时间\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} />\n                }\n\n                <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isNeedExceptTime} onChange={(event) => setNeedExceptTime(event)} />\n\n                <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"立刻开始\" unCheckedChildren=\"之后开始\" checked={isStartNow} onChange={(event) => setStartNow(event)} />\n\n                {/* 长任务、短任务 */}\n                {/* <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"长\" unCheckedChildren=\"短\" checked={isLongTask} onChange={(event) => setLongTask(event)} /> */}\n\n                <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"周期\" unCheckedChildren=\"单个\" checked={isCycleTask} onChange={(event) => setCycleTask(event)} />\n\n              </Col>\n            </Row>\n\n            <Div style={{ margin: \"10px\", color: \"#ffffff\" }}>\n\n              {!isStartNow &&\n                <span style={{ marginLeft: \"15px\" }} >开始时间：\n        <DatePicker showTime value={expectStartTime} onOk={value => setExpectStartTime(moment(value.valueOf()))} /></span>\n              }\n\n              {isLongTask &&\n                <span style={{ marginLeft: \"15px\" }} >长任务：\n        <Input style={{ width: '100px' }} value={exceptWorkday} prefix=\"计划\" suffix=\"天\" onChange={(event) => setExceptWorkday(Number(event.target.value))} />\n                  <Input style={{ width: '100px' }} value={exceptHoliDay} prefix=\"假期\" suffix=\"天\" onChange={(event) => setExceptHoliDay(Number(event.target.value))} />\n                </span>\n              }\n\n              {isCycleTask &&\n                <Input style={{ width: '100px', marginLeft: \"15px\" }} value={cycleGap} placeholder=\"1表示不间隔\" prefix=\"每\" suffix=\"天\" onChange={(event) => setCycleGap(Number(event.target.value))} />\n              }\n\n            </Div>\n\n            <span style={{ backgroundColor: \"#ffffff\", padding: 2, margin: \"10px\" }} >\n              {getAllTaskStatus()}\n            </span>\n          </div>\n        }\n\n        {isSearchMode() &&\n          <div style={{ marginLeft: '10px', marginRight: '10px' }}>\n            <Input placeholder=\"回车进行搜索\" value={searchTextUI} onChange={(event) => setSearchTextUI(event.target.value)} onPressEnter={search} />\n          </div>\n        }\n\n\n      </Div>\n\n      <NoteList />\n    </Container>\n  );\n}\n\n\nconst NoteItem = styled.div`\n:hover{\n\t/* background-color:#b4e7fc; */\n  background-color: ${(props: { choosed: boolean, isDone: boolean, isFuture: boolean, level: number }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean, isDone: boolean, isFuture: boolean, level: number }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      switch (props.level) {\n        case 1:\n          return '#fdf0ee'\n        case 2:\n          return '#fdfcee'\n        case 3:\n          return '#eefdfc'\n        case 4:\n          return '#eefdef'\n        default:\n          return '#ffffff'\n      }\n    }\n  }\n  };\nopacity : ${(props: { choosed: boolean, isDone: boolean, isFuture: boolean, level: number }) => {\n    if (props.isDone) {\n      return 0.1\n    } else if (props.isFuture) { // todo 之后再考虑这个 future UI怎么优化下\n      return 0.5\n    } else {\n      return 1\n    }\n  }\n  };\n`\nconst NoteList: React.FC = () => {\n  const { storeModel, saveTask, saveConfig } = stores.useStore('mainmodel') as { storeModel: StoreModel | undefined, saveTask: (task: Task) => void, saveConfig: () => void }\n\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task | undefined) => void }\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n  const { searchMode, setSearchMode } = stores.useStore(SearchModeStoreKey) as { searchMode: number, setSearchMode: (searchMode: number) => void }\n  const { searchText, setSearchText } = stores.useStore(SearchTextStoreKey) as { searchText: string, setSearchText: (searchText: string) => void }\n\n  useEffect(() => {\n    // console.log(\"NoteList useEffect\")\n\n    if (storeModel!==undefined && (currentDoingTask === undefined || storeModel.config.isImported)) {\n      let doingTasks = storeModel.tasks.filter((value) => { return value.isDoing() })\n\n      // console.log(`XZY doingTasks ${doingTasks.length}`)\n      if (doingTasks.length === 0) {\n        return\n      }\n\n      if (doingTasks.length > 1) {\n        message.error(`有 ${doingTasks.length} 个任务在运行中，自动关闭`)\n\n        for (let i = 1; i < doingTasks.length; i++) {\n          doingTasks[i].stop()\n          saveTask(doingTasks[i])\n        }\n      }\n\n      // console.log(`XZY setCurrentDoingTask ${doingTasks[0].title}`)\n      setCurrentDoingTask(doingTasks[0])\n\n      if(storeModel.config.isImported){\n        storeModel.config.isImported = false\n        saveConfig()\n      }\n    }\n  });\n\n  function onChooseNote(event: any, note: Task) {\n    event.preventDefault()\n    setCurrentTask(note)\n  }\n\n  const onClickMenu = (param: ClickParam, task: Task) => {\n    task.level = Number(param.key)\n\n    storeModel?.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    saveTask(task)\n\n    param.domEvent.preventDefault()\n\n    // 怎么阻止对 parent 的点击事件\n    // param.domEvent.stopPropagation()\n  };\n\n  function getMenu(task: Task): React.ReactElement {\n    return (\n      <Menu onClick={(param) => onClickMenu(param, task)}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n\n  function startTask(event: any, task: Task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n      return\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop()\n      saveTask(currentDoingTask)\n    }\n\n    task.start()\n    setCurrentDoingTask(task)\n    storeModel?.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    saveTask(task)\n  }\n\n  function getShowTips(task: Task): string {\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  function getTasks(): Task[] {\n    if (storeModel === undefined) {\n      return []\n    }\n\n    if (searchMode !== 0) {\n      if (Utils.isStringEmpty(searchText)) {\n        return []\n      }\n      const lowSearchText = searchText.toLowerCase()\n      return storeModel.tasks.filter((task) => {\n        return task.title.toLowerCase().indexOf(lowSearchText) !== -1 \n\n        // 匹配子任务标题\n        || task.childTasks.find((childTask) => childTask.name.toLowerCase().indexOf(lowSearchText) !== -1 ) !== undefined\n\n        // 匹配内容模式（时间线和note）\n        || (searchMode == 2 && (\n          task.note.timeLines.find(timeline => timeline.content.toLowerCase().indexOf(lowSearchText) !== -1 )!== undefined \n          || task.note.content.toLowerCase().indexOf(lowSearchText) !== -1\n        ))\n      })\n    } else {\n      return storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    }\n  }\n\n  return (\n    <Container2>\n      <List\n        size=\"small\"\n        style={{ backgroundColor: 'white', margin: \"1%\" }}\n        bordered\n        dataSource={getTasks()}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => onChooseNote(e, task)} isDone={task.isDone()} isFuture={task.isFutureTask(DateUtils.getMyCurrentDayDur(currentDayOffset))} onDoubleClick={(e) => startTask(e, task)} level={task.level}>\n\n            <Row align=\"middle\">\n              <Col flex=\"1 1 auto\">\n                <NoteItemInput key={task.id} task={task} />\n              </Col>\n              <Col flex=\"0 1 auto\" style={{ backgroundColor: \"rgb(226, 226, 226)\" }}>\n\n                <span style={{ paddingLeft: \"5px\" }}>\n                  {getShowTips(task)}\n                </span>\n\n                <Dropdown overlay={getMenu(task)}>\n                  <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                    {formartLevel(task.level)} <DownOutlined />\n                  </a>\n                </Dropdown>\n\n                <Button style={{ marginLeft: \"5px\", marginRight: \"2px\" }} size=\"small\" onClick={(e) => startTask(e, task)}>Start</Button>\n\n              </Col>\n            </Row>\n\n          </NoteItem>\n        )}\n      />\n    </Container2>\n  );\n}\n\nfunction formartLevel(level: number): string {\n  switch (level) {\n    case 1:\n      return \"🌟\"\n    case 2:\n      return \"🎏\"\n    case 3:\n      return \"3️⃣\"\n    case 4:\n      return \"4️\"\n    case 5:\n      return \"5️\"\n    default:\n      return \"\"\n  }\n\n  // switch (level) {\n  //   case 1:\n  //     return \"🥇\"\n  //   case 2:\n  //     return \"🥈\"\n  //   case 3:\n  //     return \"🥉\"\n  //   case 4:\n  //     return \"4️⃣\"\n  //   case 5:\n  //     return \"5️\"\n  //   default:\n  //     return \"\"\n  // }\n}\n\ninterface NoteItemInputProps {\n  task: Task;\n}\n\nconst NoteItemInput: React.FC<NoteItemInputProps> = (props) => {\n  const [content, setContent] = useState(props.task.title)\n    const {saveTask} = stores.useStore('mainmodel') as { saveTask: (task: Task) => void}\n\n\n  function saveTaskTitle(event: any) {\n    props.task.title = content\n\n    // 试了下就1ms\n    // const start = Utils.getTimestamp()\n    saveTask(props.task)\n    // console.log(\"TIME:\" + (Utils.getTimestamp() - start))\n  }\n\n  return (\n    <Input style={{ background: \"#ffffff70\", fontWeight: \"bold\" }} value={content} onChange={(e) => setContent(e.target.value)} onBlur={saveTaskTitle} />\n  );\n}\n\nexport default TaskListContainer;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, List, Row, Col, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration, TimeLine, AdjustConsume, ChildTask } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport MomentUtils from '../utils/MomentUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\n// const Editor = styled(Input.TextArea)`\n//   flex-grow: 1;\n// `\nconst Editor = styled(SimpleMDE)`\n`\nconst EditorContainer = styled.div`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst TimeLinesContainer = styled.div`\n  height: 250px;\noverflow-y: scroll;\nmargin-left:5px;\n/* margin-top:1px; */\nmargin-bottom:5px;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n/* background-color:rgb(227, 233, 231); */\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\n\nconst ChildTaskItem = styled.div`\npadding-top:1px;\npadding-bottom:1px;\npadding-left:2px;\npadding-right:2px;\n:hover{\nbackground-color: #ffcdc5;\n};\nbackground-color:#fdf0ee;\nfont-size:14px;\n\nopacity : ${(props: { isDone: boolean }) => {\n    if (props.isDone) {\n      return 0.15\n    } else {\n      return 1\n    }\n  }\n  };\n`\n\nconst NoteItem = styled.div`\n    padding-top:1px;\n    padding-bottom:1px;\n    padding-left:2px;\n    padding-right:2px;\n    :hover{\n  background-color: #a2e3cd;\n  };\n  background-color:#e3e9e7;\n    font-size:12px;\n  `\n\nconst DeleteBtn = styled.span`\n  padding-left:4px;\n  padding-right:4px;\n  margin-left:2px;\n  margin-right:2px;\n  color:#fff;\n  :hover{\n    background-color: #02472f;\n    opacity:1;\n    };\n    background-color:#00b477;\n    opacity : ${(props: { isHover: boolean }) => {\n    if (props.isHover) {\n      return 1\n    } else {\n      return 0.05\n    }\n  }\n  };\n`\n\nconst ChildTaskBtn = styled(DeleteBtn)`\n  padding-left:2px;\n  padding-right:2px;\n  margin-left:1px;\n  margin-right:1px;\n  :hover{\n    background-color: #901401;\n    opacity:1;\n    };\n    background-color:#fd7560;\n    opacity : ${(props: { isHover: boolean }) => {\n    if (props.isHover) {\n      return 1\n    } else {\n      return 0.05\n    }\n  }\n  };\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel, saveTask, saveConfig } = stores.useStore('mainmodel') as { storeModel: StoreModel | undefined, saveTask: (task: Task) => void, saveConfig: () => void }\n\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n\n  const [content, setContent] = useState(\"\")\n  const [timeline, setTimeline] = useState(\"\")\n  const [childTaskInput, setChildTaskInput] = useState(\"\")\n\n  const [isExpectConsume, setExpectConsumeUI] = useState(false);\n  const [expectTime, setExpectTime] = useState(-1);\n\n  const [newAdjustTime, setNewAdjustTime] = useState(\"\");\n\n  const [isHaveDeadline, setHaveDeadlineUI] = useState(false);\n  const [deadline, setDeadlineUI] = useState<any>(null);\n\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState<any>(null);\n\n  const [hoverTimeline, setHoverTimeline] = useState<TimeLine | null>(null);\n  const [hoverTask, setHoverTask] = useState<ChildTask | null>(null);\n\n  const [expectStartTime, setExpectStartTimeUI] = useState<any>(null);\n\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      // todo 这部分逻辑抽出去\n      const expectTime = currentTask.getActualExpectConsume()\n      if (expectTime < 0) {\n        setExpectTime(expectTime)\n        setExpectConsume(false, true)\n      } else {\n        setExpectConsume(true, true)\n        setExpectTime(expectTime / (3600 * 1000))\n      }\n\n      setNewAdjustTime(\"\")\n\n      setPendingUI(currentTask.isPending())\n      setPendingReason(currentTask.pendingReason)\n      setPendingTimeUI(getPendingDeadlineTime(currentTask))\n\n      setDeadlineUI(getDeadlineTime(currentTask))\n      setHaveDeadline(currentTask.isHaveDeadline(), true)\n\n      if (currentTask !== undefined && !currentTask.isStarted()) {\n        setExpectStartTimeUI(moment(currentTask.expectStartTime))\n      } else {\n        setExpectStartTimeUI(null)\n      }\n\n      // todo 优化，别在这刷新1\n      storeModel?.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    saveTask(currentTask)\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        currentTask.isDeleted = true\n        saveTask(currentTask)\n        message.success(\"删除任务成功\")\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    const undoneChildTask = task.childTasks.find((task) => !task.isDone())\n    if (undoneChildTask !== undefined) {\n      message.error(`有子任务未完成:${undoneChildTask.name}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel?.normalUpdate(DateUtils.getMyCurrentDayDur(currentDayOffset))\n    message.success(\"任务已完成\")\n    saveTask(task)\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    setDeadlineUI(getDeadlineTime(currentTask))\n    saveTask(task)\n  }\n\n  function getDeadlineTime(task: Task): any {\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task) + TaskInfoFormat.getStartExpected(task)\n    return result\n  }\n\n  function setAdjustTime() {\n    if (storeModel === undefined) {\n      message.error(\"storeModel 未初始化\")\n      return\n    }\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    const newAdjustTimeHours = Number(newAdjustTime)\n    if (newAdjustTimeHours === 0 || newAdjustTimeHours === NaN) {\n      message.error(`请输入合法数字`)\n      return\n    }\n\n    const newAdjustTimeMills = newAdjustTimeHours * 3600 * 1000\n\n    if (newAdjustTimeMills + task.getAllDuration() < 0) {\n      message.error(`调整时间超过已消耗时间`)\n      return\n    }\n\n    task.adjusts.push(AdjustConsume.create(newAdjustTimeMills))\n    storeModel.config.totalAdjustConsumeTime += newAdjustTimeMills\n    saveConfig()\n\n    let msg = \"\"\n    if (newAdjustTimeHours > 0) {\n      msg = `增加 ${newAdjustTimeHours} `\n    } else {\n      msg = `减少 ${-newAdjustTimeHours} `\n    }\n    message.success(`耗时已${msg}小时`)\n\n    setNewAdjustTime(\"\")\n\n    saveTask(task)\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000)\n    }\n\n    saveTask(task)\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onChoosePendingDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`)\n      return\n    }\n\n    const pendingLine = value.valueOf()\n    if (!isTimeValid(pendingLine, \"Pending时间\", Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    task.pendingDeadline = pendingLine\n    setPendingTimeUI(getPendingDeadlineTime(task))\n    saveTask(task)\n  }\n\n  function onChangeExpectStartTime(value: any, task: Task) {\n    const expectStartTime = value.valueOf()\n\n    if (!isTimeValid(expectStartTime, \"预期开始时间\", Duration.create(undefined, task.pendingDeadline, \"PendLine\"), Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    setExpectStartTimeUI(moment(expectStartTime))\n    task.expectStartTime = expectStartTime\n    saveTask(task)\n  }\n\n  function isTimeValid(time: number, timeName: string, ...limitDurations: Duration[]): boolean {\n    let isValid = true\n    for (let index = 0; index < limitDurations.length; index++) {\n      const dur = limitDurations[index];\n      if (dur.start > 0 && time < dur.start) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})早于${dur.start}(${Format.formatTimeInMinute(dur.start)})，请重新设置`)\n        isValid = false\n      } else if (dur.end > 0 && time > dur.end) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})晚于${dur.end}(${Format.formatTimeInMinute(dur.end)})，请重新设置`)\n        isValid = false\n      }\n      if (!isValid) {\n        return false\n      }\n    }\n    return true\n  }\n\n  function getPendingDeadlineTime(task: Task): any {\n    const deadline = task.pendingDeadline\n\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    task.pendingReason = pendingReason\n    saveTask(task)\n  }\n\n  function setPending(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1\n      setPendingTimeUI(null)\n      saveTask(task)\n    }\n    setPendingUI(pendingStatus)\n  }\n\n  function setExpectConsume(pendingStatus: boolean, isOnlyRender:boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      if(!isOnlyRender){\n        task.expectConsumes.push(-1)\n        saveTask(task)\n      }\n      setExpectTime(-1)\n    }\n    setExpectConsumeUI(pendingStatus)\n  }\n\n  function setHaveDeadline(pendingStatus: boolean, isOnlyRender: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      if(!isOnlyRender){\n        task.deadlines.push(-1)\n        saveTask(task)\n      }\n      setDeadlineUI(null)\n    }\n    setHaveDeadlineUI(pendingStatus)\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onDeleteTimeline(task: Task, timeline: TimeLine) {\n    // 区分自动生成的开始结束\n    if (timeline.isStartEndAutoGen) {\n      Modal.confirm({\n        title: '确定要删除此 Dur 吗？',\n        content: `是否删除此 Dur，这意味着消耗时间也会重新计算，将不可恢复，请仔细确认`,\n        onOk() {\n          if (task.removeDuration(timeline.timeStamp)) {\n            message.success(\"删除 Dur 成功\")\n            saveTask(task)\n          } else {\n            message.error(\"删除 Dur 失败\")\n          }\n        },\n      });\n    } else {\n      Modal.confirm({\n        title: '确定要删除此 TimeLine 吗？',\n        content: `是否删除 ${timeline.content}，将不可恢复`,\n        onOk() {\n          if (task.removeTimeline(timeline)) {\n            message.success(\"删除TimeLine成功\")\n            saveTask(task)\n          } else {\n            message.error(\"删除TimeLine失败\")\n          }\n        },\n      });\n    }\n  }\n\n  function onAddTimeline(event: any) {\n    event.preventDefault();\n\n    if (currentTask === undefined) return\n\n    if (Utils.isStringEmpty(timeline)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    // const endTimeline = currentTask.note.endTimeLine();\n    // if (endTimeline == null || !DateUtils.isSameDay(endTimeline.timeStamp, Utils.getTimestamp())) {\n    // currentTask.note.timeLines.push(TimeLine.createDivNode())\n    // }\n\n    currentTask.note.timeLines.push(TimeLine.createContentNode(timeline))\n\n    saveTask(currentTask)\n\n    setTimeline(\"\")\n  }\n\n  function onAddChildTask(task: Task) {\n    if (Utils.isStringEmpty(childTaskInput)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    task.childTasks.push(ChildTask.create(childTaskInput))\n\n    saveTask(task)\n\n    setChildTaskInput(\"\")\n  }\n\n\n  /* ---------------------------------------------------------- */\n\n  function onDeleteChildTask(task: Task, childTask: ChildTask) {\n    Modal.confirm({\n      title: '确定要删除此 ChildTask 吗？',\n      content: `是否删除 ChildTask: ${childTask.name}，将不可恢复，请仔细确认`,\n      onOk() {\n        if (task.removeChildTask(childTask)) {\n          message.success(\"删除 ChildTask 成功\")\n          saveTask(task)\n        } else {\n          message.error(\"删除 ChildTask 失败\")\n        }\n      },\n    });\n  }\n\n  function onDoneChildTask(task: Task, childTask: ChildTask) {\n    if (childTask.isDone()) {\n      childTask.reStart()\n      message.success(\"任务已重新开始\")\n    } else {\n      childTask.done()\n      message.success(\"任务已完成\")\n    }\n    saveTask(task)\n  }\n\n  function onPendChildTask(task: Task, childTask: ChildTask) {\n    setPendingReason(childTask.name)\n    task.pendingReason = childTask.name\n    saveTask(task)\n  }\n\n  function onOrderChildTask(task: Task, childTask: ChildTask, isAdd: boolean) {\n    if (isAdd) {\n      childTask.addOrder()\n    } else {\n      childTask.downOrder()\n    }\n    saveTask(task)\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function getOutTimeCyclerTaskTips(task: Task): string {\n    if (!task.isCycleTask()) return \"\"\n\n    if (DateUtils.getMyCurrentDayDur(0).isIn(task.expectStartTime)) {\n      return \"\"\n    }\n\n    return \"【超期❌】\"\n  }\n\n  /* ---------------------------------------------------------- */\n\n  const editorRef = React.useRef(null)\n\n  // 修改编辑器高度\n  // todo sizechange的时候要刷新\n  useEffect(() => {\n\n    const $codeMirror = document.querySelector('.CodeMirror');\n    const editorDom = editorRef.current as HTMLElement | null\n\n    if ($codeMirror && editorDom) {\n      $codeMirror.setAttribute('style', 'height:' + (editorDom.clientHeight - 88) + 'px;box-shadow:none');\n    }\n  })\n\n  /* ---------------------------------------------------------- */\n\n  if (currentTask === undefined) return (<Div></Div>)\n\n  return (\n    <Container >\n      {/* 不加这个 div 会换行 */}\n      {currentTask !== undefined &&\n        <Div style={{ margin: \"5px\" }}>\n\n          <div style={{ marginLeft: \"5px\", marginRight: \"5px\", fontWeight: \"bold\" }}>{currentTask.title} {getOutTimeCyclerTaskTips(currentTask)}</div>\n\n          <ButtonGroup>\n            <Button onClick={(e) => deleteTask(e)}>D</Button>\n            <Button onClick={(e) => doneTask(e)}>Done</Button>\n          </ButtonGroup>\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isExpectConsume} onChange={(event) => setExpectConsume(event, false)} />\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"截止时间\" unCheckedChildren=\"没有截止\" checked={isHaveDeadline} onChange={(event) => setHaveDeadline(event, false)} />\n\n          <Switch style={{ marginLeft: '9px', marginRight: '5px' }} checkedChildren=\"Pending\" unCheckedChildren=\"NoPend\" checked={isPending} onChange={(event) => setPending(event)} />\n\n        </Div>\n      }\n\n      <div style={{ marginLeft: \"15px\", marginRight: \"15px\", fontWeight: \"bold\" }} >{getShowTips()}</div>\n\n\n      {currentTask !== undefined &&\n        <Div style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n          {expectStartTime !== null &&\n            <span style={{ marginLeft: \"15px\" }} >预期开始时间：\n          <DatePicker showTime value={expectStartTime} onOk={value => onChangeExpectStartTime(value, currentTask)} />\n            </span>\n          }\n\n          {currentTask.isStarted() &&\n            <Input style={{ marginLeft: \"15px\", width: '150px' }} value={newAdjustTime} placeholder={`${currentTask.allAdjusts() / (3600 * 1000)} 回车保存`} prefix=\"调整耗时\" suffix=\"h\" onChange={(event) => setNewAdjustTime(event.target.value)} onPressEnter={setAdjustTime} />\n          }\n\n          {isExpectConsume &&\n            <span style={{ marginLeft: \"15px\" }} >估时：\n        <Input style={{ width: '100px' }} value={expectTime} placeholder=\"花费时间 自动保存\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onBlur={changeExceptTime} />\n            </span>\n          }\n\n\n          {isHaveDeadline &&\n            <span style={{ marginLeft: \"15px\" }} >DeadLine：\n        <DatePicker showTime value={deadline} onOk={value => onChooseDeadline(value)} />\n            </span>\n          }\n\n          {isPending &&\n            <span style={{ marginLeft: \"15px\" }} >Pending：\n      <DatePicker showTime value={pendingTime} onOk={value => onChoosePendingDeadline(value)} />\n\n              <Input style={{ width: '200px' }} value={pendingReason} prefix=\"原因:\" placeholder=\"（自动保存）\" onChange={(event) => setPendingReason(event.target.value)} onBlur={savePendingStatus} />\n            </span>\n          }\n\n        </Div>\n      }\n\n      {currentTask !== undefined &&\n        <div style={{ display: \"flex\" }}>\n          <Div style={{ marginLeft: \"15px\", marginRight: \"5px\", width: \"60%\" }} >\n            <Input placeholder=\"输入时间线，回车添加\" value={timeline} onChange={(event) => setTimeline(event.target.value)} onPressEnter={onAddTimeline} />\n\n            <TimeLinesContainer>\n              <List\n                size=\"small\"\n                bordered\n                dataSource={currentTask.note.getFormartTimeLines(currentTask.doingDurs)}\n                renderItem={timeline => (\n                  <NoteItem key={timeline.getKey()}>\n\n                    {/* <NoteItem key={timeline.getKey()} onMouseEnter={(event) => setHoverTimeline(timeline)} onMouseLeave={(event) => setHoverTimeline(null)}> */}\n                    {\n                      timeline.isDivder ? (\n                        <span style={{ backgroundColor: \"#f9e6ba\", color: \"#ce9100\" }}>{`┗━ ${Format.formatTimeInDay(timeline.timeStamp)} ━━━━`}</span>\n                      ) : (\n                          <span>\n                            <span style={{ color: \"#ce9100\", paddingRight: \"2px\" }}> {Format.formatTimeInSecond(timeline.timeStamp)}</span>\n                            {timeline.content}\n                            {/* todo 可以做成悬浮在最后的按钮，然后hover的时候显示 */}\n                            <DeleteBtn isHover={hoverTimeline?.timeStamp === timeline.timeStamp} onClick={(e) => onDeleteTimeline(currentTask, timeline)}>删除</DeleteBtn>\n                          </span>\n                        )\n                    }\n                  </NoteItem>\n                )}\n              />\n            </TimeLinesContainer>\n          </Div>\n\n          <Div style={{ marginLeft: \"5px\", marginRight: \"15px\", width: \"40%\" }} >\n            <Input placeholder=\"输入子任务，回车添加\" value={childTaskInput} onChange={(event) => setChildTaskInput(event.target.value)} onPressEnter={(event) => onAddChildTask(currentTask)} />\n\n            <TimeLinesContainer>\n              <List\n                size=\"small\"\n                bordered\n                dataSource={currentTask.getOrderedChildTasks()}\n                renderItem={childTask => (\n                  <ChildTaskItem key={childTask.createTime} isDone={childTask.isDone()} >\n\n                    {/* <ChildTaskItem key={childTask.createTime} isDone={childTask.isDone()} onMouseEnter={(event) => setHoverTask(childTask)} onMouseLeave={(event) => setHoverTask(null)}> */}\n                    {/* <span style={{ color: \"#ce9100\", paddingRight: \"2px\" }}> {Format.formatTimeInSecond(timeline.timeStamp)}</span> */}\n\n                    <span style={{ fontWeight: \"bold\" }}>{childTask.name}</span>\n                    <span style={{ color: \"#00000055\" }}> ({childTask.order}) </span>\n                    {/* todo 可以做成悬浮在最后的按钮，然后hover的时候显示 */}\n\n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onDoneChildTask(currentTask, childTask)}>完</ChildTaskBtn>\n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onPendChildTask(currentTask, childTask)}>PE</ChildTaskBtn>\n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onOrderChildTask(currentTask, childTask, true)}>↑</ChildTaskBtn>\n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onOrderChildTask(currentTask, childTask, false)}>↓</ChildTaskBtn>\n                    <ChildTaskBtn isHover={hoverTask?.createTime === childTask.createTime} onClick={(e) => onDeleteChildTask(currentTask, childTask)}>删</ChildTaskBtn>\n                  </ChildTaskItem>\n                )}\n              />\n            </TimeLinesContainer>\n          </Div>\n\n\n        </div>\n      }\n\n      {/* <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      /> */}\n      <EditorContainer onBlur={onBlur} ref={editorRef}>\n        <Editor\n          // 使用了key，没有刷新问题了  \n          key={currentTask && currentTask.id}\n          value={content}\n          onChange={setContent}\n          options={{\n            spellChecker: false,\n            // toolbar: false,\n            // status: false, todo 内部有bug，这么设置之后粘贴图片会报错，需要拉源码过来改下\n            hideIcons: [\"side-by-side\", \"guide\"]\n          }}\n        />\n      </EditorContainer>\n\n    </Container>\n  );\n}\n\nexport default ContentLayout;","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List,Radio } from 'antd';\nimport { StoreModel, Task, Duration, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\nconst Div = styled.div`\nheight: 55vh;\noverflow-y: scroll;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n/* background-color:rgb(227, 233, 231); */\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst NoteItem = styled.div`\npadding-top:1px;\npadding-bottom:1px;\npadding-left:2px;\npadding-right:2px;\n:hover{\nbackground-color: #a2e3cd;\n};\nbackground-color:#e3e9e7;\nfont-size:11px;\n`\n\nconst TimeLineLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel|undefined };\n  const [timelineSize, setTimelineSize] = useState(200);\n\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n\n  // function getCurrentDayDoingTasksTimelines(): TimeLine[] {\n  //   return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n  //     .flatMap((task) => task.note.getStartEndWrappedTimeLines(task.doingDurs).map((timeline) => {\n  //       return timeline.getTitled(task.title)\n  //     })).sort((a, b) => {\n  //       if (a.timeStamp > b.timeStamp) {\n  //         return -1\n  //       } else if (a.timeStamp < b.timeStamp) {\n  //         return 1\n  //       } else {\n  //         return 0\n  //       }\n  //     }\n  //     ).filter((timeline) => !timeline.isDivder)\n  // }\n\n  function getCurrentDayDoingTasksTimelines(): TimeLine[] {\n    if (storeModel === undefined) {\n      return []\n    }\n\n    const all = storeModel.tasks\n      .flatMap((task) => task.note.getStartEndWrappedTimeLines(task.doingDurs).map((timeline) => {\n        return timeline.getTitled(task.title)\n      }))\n      .filter((timeline) => !timeline.isDivder)\n      .sort((a, b) => {\n        if (a.timeStamp > b.timeStamp) {\n          return -1\n        } else if (a.timeStamp < b.timeStamp) {\n          return 1\n        } else {\n          return 0\n        }\n      })\n      .slice(0, timelineSize) \n\n    return TimeLine.addDivders(all)\n  }\n\n\n\n  return (\n    <Div>\n      <Radio.Group onChange={(event) => setTimelineSize(Number(event.target.value))} defaultValue=\"200\" size=\"small\">\n      <Radio.Button value=\"200\">200</Radio.Button>\n      <Radio.Button value=\"400\">400</Radio.Button>\n      <Radio.Button value=\"600\">600</Radio.Button>\n      <Radio.Button value=\"800\">800</Radio.Button>\n      <Radio.Button value=\"1000\">1000</Radio.Button>\n    </Radio.Group>\n\n      {/* // todo 下面这个 key 不能用 getKey() 非常奇怪 */}\n      <List\n        size=\"small\"\n        bordered\n        dataSource={getCurrentDayDoingTasksTimelines()}\n        renderItem={timeline => (\n          <NoteItem key={timeline.timeStamp}> \n            {\n              timeline.isDivder ? (\n                <span style={{ backgroundColor: \"#f9e6ba\", color: \"#ce9100\" }}>{`┗━ ${Format.formatTimeInDay(timeline.timeStamp)} ━━━━`}</span>\n              ) : (\n                  <span>\n                    <span style={{ color: \"#ce9100\", paddingRight: \"2px\" }}>{Format.formatTimeInSecond(timeline.timeStamp)}</span>\n                    <span style={{ color: \"#229a72\", display: \"inline-block\", verticalAlign: \"top\", maxWidth: \"110px\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>  {timeline.title} </span>\n                    {timeline.content}\n                  </span>\n                )\n            }\n          </NoteItem>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TimeLineLayout;\n","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List } from 'antd';\nimport { StoreModel, Task, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\n\n\n\nconst Div = styled.div`\nheight: 45vh;\noverflow-y: scroll;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst NoteItem = styled.div`\npadding:2px;\nmargin:1px;\n:hover{\n  background-color: ${(props: { choosed: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return 'rgba(194, 226, 255, 0.495)'\n    }\n  }\n  };\n\n`\n\nconst TodayWorkConatiner: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel | undefined };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task) => void }\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n\n  function getCurrentDayDoingTasks(): Task[] {\n    if (storeModel === undefined) {\n      return []\n    }\n    return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(currentDayOffset))\n      .sort((a, b) => {\n        if (a.lastStartTime() > b.lastStartTime()) {\n          return -1\n        } else if (a.lastStartTime() < b.lastStartTime()) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n  }\n\n  return (\n    <Div>\n      <List\n        size=\"small\"\n        bordered\n        dataSource={getCurrentDayDoingTasks()}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => setCurrentTask(task)}>\n            {task.title}\n            <span style={{ color: \"#0295d2\" }}>{Format.formatDuration3(task.getAllDurationInDur(DateUtils.getMyCurrentDayDur(currentDayOffset)))}</span>\n          </NoteItem>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TodayWorkConatiner;\n","import 'reflect-metadata'\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport TaskListContainer from './TaskListContainer'\nimport ContentLayout from './ContentLayout'\nimport TimeLineLayout from './TimeLineLayout'\nimport TodayWorkConatiner from './TodayWorkConatiner';\nimport stores from '../stores';\n\nconst AppContainer = styled.div`\n  display: grid;\n  min-height: 100vh;\n  height: 100%;\n  width: 100%;\n  grid-template-columns: 35% 45% 20%;\n  grid-template-rows: 100%;\n`\n\nconst App: React.FC = () => {\n  // useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  // todo 暂时只会这么用\n  const { fetchData } = stores.useStore('mainmodel') as { fetchData: () => void }\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  return (\n    <AppContainer>\n      <TaskListContainer />\n      <ContentLayout />\n\n      <div>\n        <TimeLineLayout />\n        <TodayWorkConatiner />\n      </div>\n\n    </AppContainer>\n  );\n}\n\n/**\n * 这个还是不work\n */\nfunction useInterval(callback:any, delay:number) {\n  const savedCallback = useRef<any>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}