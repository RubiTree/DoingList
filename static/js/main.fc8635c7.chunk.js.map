{"version":3,"sources":["utils/Utils.ts","utils/DateUtils.ts","utils/Format.ts","model/model.ts","stores/MainStore.ts","stores/CurrentTaskStore.ts","stores/CurrentDoingTaskStore.ts","stores/index.ts","stores/CurrentDayOffsetStore.ts","utils/TaskInfoFormat.ts","layouts/TaskListContainer.tsx","layouts/ContentLayout.tsx","layouts/TimeLineLayout.tsx","layouts/App.tsx","serviceWorker.ts","index.tsx"],"names":["Utils","obj","content","transfer","document","createElement","style","cssText","body","appendChild","value","focus","select","execCommand","blur","removeChild","fileName","console","log","eleLink","download","display","blob","Blob","href","URL","createObjectURL","click","Date","getTime","src","regex","search","RegExp","regExp","Math","random","toString","start1","end1","start2","end2","array","object","length","this","i","shift","pop","splice","DateUtils","hour","today","setHours","someStamp","day","dayZeroTime","offsetHour","result","Duration","init","end","dayMills","offsetDay","dayOffset","getCurrentDayStamp","getOffsetedDayDur","getMyCurrentDayStamp","time1","time2","getDay","Format","timeMs","date","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","time","天","floor","小时","分","秒","Object","entries","filter","val","map","key","join","d","Task","Type","Note","id","title","level","createTime","doneTime","pendingDeadline","pendingReason","deadlines","expectConsumes","expectStartTime","cycleId","getTimestamp","generateId","idCounter","task","undefined","doingDurs","start","duration","currentTime","push","delay","isTimeDangers","getActualDeadline","isDangerousPending","isDangerousDeadline","deadline","index","getDur","reduce","a","b","getActualExpectConsume","getAllDuration","name","timeStamp","isDoing","error","dur","CycleRecord","_startTime","_gap","gap","startTime","getSomeDayStamp","getStartTime","getGap","newTask","formatTimeInDay2","TimeLine","timeLines","hasTimeLine","slice","reverse","timeline","isDivder","formatTimeInDay","formatTimeInSecond","t","StoreModel","tasks","isDone","isIn","containsProject","cycleRecord","containsCycleRecord","cycleRecords","forEach","record","isTimeToCreateTask","isSameId","isTodayTask","getMyCurrentDayDur2","addTask","createTask","find","item","invokeAddCycleTask","orderTasks","sort","isDangerous","storage","isDebug","fetch","_getMockStoreModel","storageJson","localStorage","getItem","plainToClass","JSON","parse","adaptData","save","storeModel","setItem","stringify","newLocal","model","setModel","currentTaskStore","currentTask","setCurrentTask","currentDoingTaskStore","currentDoingTask","setCurrentDoingTask","storeManager","Store","registerStore","mainmodel","currentDayOffset","setCurrentDayOffset","offset","TaskInfoFormat","formatDuration2","isStringEmpty","pendingStatus","getPendingStatus","getDeadlineStatus","leftTime","left","getLeftExpectConsumeTime","Container","styled","div","Div","Container2","span","ButtonGroup","Input","Group","Button","NoteItem","props","choosed","NoteList","stores","useStore","useEffect","doingTasks","stop","getMenu","onClick","param","Number","normalUpdate","domEvent","preventDefault","onClickMenu","Item","size","backgroundColor","margin","bordered","dataSource","getTasks","getMyCurrentDayDur","renderItem","isSameTask","e","note","flex","getDoingStatusTips","getDeadline","getConsumeExpected","getShowTips","overlay","paddingLeft","className","formartLevel","DownOutlined","event","message","formatTimeInMs","lastStartTime","startTask","NoteItemInput","useState","setContent","background","fontWeight","onChange","target","onBlur","TaskListContainer","setTitle","isNeedExceptTime","setNeedExceptTimeUI","expectTime","setExpectTime","setLevel","isCycleTask","setCycleTaskUI","cycleGap","setCycleGap","isLongTask","setLongTaskUI","exceptWorkday","setExceptWorkday","exceptHoliDay","setExceptHoliDay","isStartNow","setStartNow","setExpectStartTime","setNeedExceptTime","setCycleTask","setLongTask","changeOffsetDay","isAdd","downloadFile","formatTimeInMsToFileName","type","padding","base","getOffsetString","multiple","file","files","reader","FileReader","onload","uploadContent","Modal","confirm","onOk","onCancel","readAsText","upload","placeholder","onPressEnter","newRecord","setStartTime","addCycleRecord","marginLeft","marginRight","checkedChildren","unCheckedChildren","checked","color","width","prefix","suffix","showTime","moment","valueOf","notDoneTasks","consumeFormat","consumes","formatDuration","getAllTaskStatus","Editor","TextArea","ContentLayout","setTimeline","isExpectConsume","setExpectConsumeUI","isHaveDeadline","setHaveDeadlineUI","setDeadlineUI","isPending","setPendingUI","setPendingReason","pendingTime","setPendingTimeUI","setExpectStartTimeUI","lastTask","setLastTask","isManual","info","saveToLocal","_realDone","done","success","getDeadlineTime","isTimeValid","timeName","isValid","formatTimeInMinute","getPendingDeadlineTime","setExpectConsume","setHaveDeadline","isStarted","removeTask","doneTask","getConsumed","getStartExpected","marginTop","marginBottom","create","onChangeExpectStartTime","onChooseDeadline","pendingLine","onChoosePendingDeadline","endTimeline","endTimeLine","isSameDay","createDivNode","createContentNode","height","overflow","whiteSpace","getFormartTimeLines","TimeLineLayout","flatMap","AppContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fc8635c7.chunk.js","sourcesContent":["\nclass Utils {\n    public static isStringEmpty(obj: any): boolean {\n        if (typeof obj === \"undefined\" || obj === null || obj === \"\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static exportContentToClipboard(content: string) {\n        let transfer = document.createElement('textarea');\n        // 不这么设置屏幕会跳，具体哪儿有问题还没确定\n        transfer.style.cssText = \"width:30%;padding:2%;min-width: 100px;opacity: 0.5;color: rgb(255, 255, 255);line-height: 18px;text-align: center;border-radius: 5px;position: fixed;top: 50%;left: 30%;z-index: 999999;background: rgb(0, 0, 0);font-size: 15px;\";\n        document.body.appendChild(transfer);\n        transfer.value = content;  // 这里表示想要复制的内容\n        transfer.focus();\n        transfer.select();\n        if (document.execCommand('copy')) {\n            document.execCommand('copy');\n        }\n        transfer.blur();\n        document.body.removeChild(transfer);\n    }\n\n    public static downloadFile(fileName: string, content: string) {\n        console.log(\"download\")\n        // 创建隐藏的可下载链接\n        var eleLink = document.createElement('a');\n        eleLink.download = fileName;\n        eleLink.style.display = 'none';\n        // 字符内容转变成blob地址\n        var blob = new Blob([content]);\n        eleLink.href = URL.createObjectURL(blob);\n        // 触发点击\n        document.body.appendChild(eleLink);\n        eleLink.click();\n        // 然后移除\n        document.body.removeChild(eleLink);\n    }\n\n    public static generateId(): number {\n        return (new Date()).getTime()\n    }\n\n    // rename currentTimpstamp\n    public static getTimestamp(): number {\n        return (new Date()).getTime()\n    }\n\n    public static match(src: string, regex: string): boolean {\n        return src.search(new RegExp(regex, 'i')) > -1\n    }\n\n    // todo 不能重载吗？\n    public static matchs(src: string, regExp: RegExp): boolean {\n        return src.search(regExp) > -1\n    }\n\n    public static getRandomColor(): string {\n        return '#' + (Math.random() * 0xffffff << 0).toString(16);\n    }\n\n    public static hasIntersection(start1: number, end1: number, start2: number, end2: number): boolean {\n\n        if (end2 < start1 || end1 < start2) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    public static removeObject(array: any[], object: any): boolean {\n        let length = this.length;\n        for (let i = 0; i < length; i++) {\n            if (array[i] === object) {\n                if (i === 0) {\n                    array.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    array.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    array.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n\n        return false\n    }\n}\n\nexport default Utils","import { Duration } from \"../model/model\";\n\nclass DateUtils {\n    private static dayMills: number = 24 * 60 * 60 * 1000\n    public static dayOffset: number = 6\n\n    // 获得今天某个小时的时间戳\n    public static getCurrentDayStamp(hour: number): number {\n        let today = new Date();\n        today.setHours(hour, 0, 0, 0);\n        return today.getTime();\n    }\n\n    // 获得某个时间戳那天某个小时的时间戳\n    public static getSomeDayStamp(someStamp: number, hour: number): number {\n        let day = new Date(someStamp)\n        day.setHours(hour, 0, 0, 0)\n        return day.getTime();\n    }\n\n    // 获得某天偏移某个小时后的dur\n    // 暂时 offsetHour 只支持 0-24 之间的数\n    public static getOffsetedDayDur(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    //-------------------- 以下业务相关 --------------------\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 0 点时间戳\n     */\n    public static getMyCurrentDayStamp(offsetDay: number, dayOffset: number): number {\n        let now = new Date().getTime()\n        // 今天6点\n        let todayOffset = DateUtils.getCurrentDayStamp(dayOffset)\n\n        if (now > todayOffset) {\n            return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay\n        } else {\n            return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay\n        }\n    }\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 dur，这个某些天本身也 offset 6\n     */\n    public static getMyCurrentDayDur(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, DateUtils.dayOffset), DateUtils.dayOffset)\n    }\n\n    /**\n     * 获得今天（是否当天按0点判断） offset 某些天的 dur, 这个是0\n     */\n    public static getMyCurrentDayDur2(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, 0), 0)\n    }\n\n    public static isSameDay(time1: number, time2: number): boolean {\n        return new Date(time1).getDay() ===  new Date(time2).getDay()\n    }\n}\n\nexport default DateUtils","class Format {\n    public static formatTimeInMs(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + ':';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return \"[\" + Y + M + D + h + m + s + msString + \"]\";\n    }\n\n    public static formatTimeInMsToFileName(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '_';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '_';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + '_';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + '_';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + '_';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return Y + M + D + h + m + s + msString;\n    }\n\n    public static formatTimeInMinute(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\n\n        return Y + M + D + h + m;\n    }\n\n    // 时-分-秒\n    public static formatTimeInSecond(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n\n        return \"[\" + h + m + s + \"]\";\n    }\n\n    // 年-月-日\n    public static formatTimeInDay(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return Y + M + D;\n    }\n\n    // 月-日\n    public static formatTimeInDay2(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return M + D;\n    }\n\n    public static formatDuration(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            天: Math.floor(timeMs / 86400000),\n            小时: Math.floor(timeMs / 3600000) % 24,\n            分: Math.floor(timeMs / 60000) % 60,\n            秒: Math.floor(timeMs / 1000) % 60,\n            //   毫秒: Math.floor(timeMs) % 1000\n        };\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n\n    public static formatDuration2(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            d: Math.floor(timeMs / 86400000),\n            h: Math.floor(timeMs / 3600000) % 24,\n            m: Math.floor(timeMs / 60000) % 60,\n            s: Math.floor(timeMs / 1000) % 60,\n        };\n\n        if (time.d > 0) {\n            time.m = 0\n            time.s = 0\n        }\n        if (time.h > 0) {\n            time.s = 0\n        }\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n}\n\nexport default Format\n\n","import Utils from '../utils/Utils'\nimport { Type } from \"class-transformer\";\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\nclass Task {\n    // todo delete 内存id增加器（因为mock初始化太快了，都在一个毫秒内）\n    private static idCounter = 0\n\n    public id: number = -1\n\n    public title: string = \"undefine\"\n\n    @Type(() => Note)\n    public note: Note = new Note()\n\n    public level: number = 3\n\n    public createTime: number = -1\n    public doneTime: number = -1\n\n    public pendingDeadline: number = -1\n    public pendingReason: string = \"\"\n\n    // 可修改，最后一个有效\n    public deadlines: number[] = []\n    // 预计花费时间，单位毫秒，可修改，最后一个有效\n    public expectConsumes: number[] = []\n    // 预期开始时间，默认是createTime，可以设置成不同时间，如果在 expectStartTime 前开始任务，此时间会自动变成这个开始任务的时间（显示逻辑一致）\n    public expectStartTime: number = -1\n\n    @Type(() => Duration)\n    public doingDurs: Duration[] = []\n\n    public cycleId: number = -1\n\n    // 反序列化不能有带参数的构造器\n    // public constructor(title: string) {\n    //     this.title = title\n    //     this.createTime = Utils.getTimestamp()\n\n    //     this.id = Utils.generateId() + Task.idCounter\n    //     Task.idCounter = Task.idCounter + 1000\n    // }\n\n    public init(title: string) {\n        this.title = title\n        this.createTime = Utils.getTimestamp()\n        this.expectStartTime = this.createTime\n\n        this.id = Utils.generateId() + Task.idCounter\n        Task.idCounter = Task.idCounter + 1000\n    }\n\n    public adaptData() {\n        if (this.expectStartTime === -1) {\n            this.expectStartTime = this.createTime\n        }\n    }\n\n    public isSameTask(task: Task | undefined): boolean {\n        if (task === undefined) {\n            return false\n        } else {\n            return this.id === task.id\n        }\n    }\n\n    public isDoing(): boolean {\n        if (this.doingDurs.length === 0) {\n            return false\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.end === -1\n        }\n    }\n\n    public isStarted(): boolean {\n        return this.doingDurs.length !== 0\n    }\n\n    public lastStartTime(): number {\n        if (this.doingDurs.length === 0) {\n            return -1\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.start\n        }\n    }\n\n    public start() {\n        let duration = new Duration()\n        const currentTime = Utils.getTimestamp();\n        duration.init(currentTime)\n        this.doingDurs.push(duration)\n\n        if (currentTime < this.expectStartTime) {\n            this.expectStartTime = currentTime\n        }\n    }\n\n    public stop() {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp()\n    }\n\n    public stopDelay(delay: number) {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() + delay\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public isPending(): boolean {\n        return this.pendingDeadline !== -1\n    }\n\n    public isDangerousPending(): boolean {\n        return this.isTimeDangers(this.pendingDeadline)\n    }\n\n    public isDangerousDeadline(): boolean {\n        return this.isTimeDangers(this.getActualDeadline())\n    }\n\n    public isDangerous(): boolean {\n        return this.isDangerousPending() || this.isDangerousDeadline()\n    }\n\n    /**\n     * dealine 距离还有2个小时，或者已经过了\n     */\n    private isTimeDangers(deadline: number): boolean {\n        if (deadline <= 0) {\n            return false\n        }\n\n        if (deadline - Utils.getTimestamp() <= 2 * 60 * 60 * 1000) {\n            return true\n        }\n\n        return false\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    // 返回毫秒数\n    // todo rename getAllDoingDuration\n    public getAllDuration(): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b)\n    }\n\n    public getActualDeadline(): number {\n        if (this.deadlines.length === 0) {\n            return -1\n        }\n\n        return this.deadlines[this.deadlines.length - 1]\n    }\n\n    public isHaveDeadline(): boolean {\n        return this.getActualDeadline() > 0\n    }\n\n    public getActualExpectConsume(): number {\n        if (this.expectConsumes.length === 0) {\n            return -1\n        }\n\n        return this.expectConsumes[this.expectConsumes.length - 1]\n    }\n\n    public isExpectConsume(): boolean {\n        return this.getActualExpectConsume() > 0\n    }\n\n    // 超出预期时间返回多花的时间，负值\n    // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n    public getLeftExpectConsumeTime(): number {\n        let left = this.getActualExpectConsume() - this.getAllDuration()\n\n        // 不用打印\n        // if (left < 0) {\n        //     console.error(\"超出预期时间\")\n        // }\n\n        return left\n    }\n}\n\nclass Duration {\n    public start: number = -1\n    public end: number = -1\n    public name: string = \"\"\n\n    // todo 没法重载\n    public init(start: number) {\n        this.start = start\n    }\n    public init2(start: number, end?: number) {\n        this.start = start\n        if (end != undefined) {\n            this.end = end\n        }\n    }\n\n    public isIn(timeStamp: number) {\n        return timeStamp >= this.start && timeStamp <= this.end\n    }\n\n    public getDur(isDoing: boolean): number {\n        let end = this.end\n        if (end == -1 && isDoing) {\n            end = Utils.getTimestamp()\n        }\n        if (end == -1) {\n            console.error(\"这段时间未结束\")\n            return 0\n        }\n        return end - this.start\n    }\n\n    public isValid(isDoing: boolean) {\n        if (!isDoing && this.end == -1) return false\n        return true\n    }\n\n    public static create(start?: number, end?: number, name?: string): Duration {\n        let dur = new Duration()\n        if (start != undefined) {\n            dur.start = start\n        }\n        if (end != undefined) {\n            dur.end = end\n        }\n        if (name != undefined) {\n            dur.name = name\n        }\n        return dur\n    }\n}\n\nclass CycleRecord {\n    public id: number = -1\n    // 可以不断更新\n    public _startTime: number[] = []\n    // 单位天，其实不是gap，是 gap-1\n    public _gap: number[] = []\n\n    // ---- 模板\n    public title: string = \"undefine\"\n    public level: number = 3\n    public expectConsumes: number = -1\n    // ---- 模板\n\n    public init(gap: number, title: string, level: number) {\n        this.id = Utils.generateId()\n        this.title = title\n        this.level = level\n        this._gap.push(gap)\n        this._startTime.push(Utils.getTimestamp())\n    }\n\n    public getGap(): number {\n        if (this._gap.length === 0) {\n            return -1\n        }\n        return this._gap[this._gap.length - 1]\n    }\n\n    public setGap(gap: number) {\n        this._gap.push(gap)\n    }\n\n    public getStartTime(): number {\n        if (this._startTime.length === 0) {\n            return -1\n        }\n        return this._startTime[this._startTime.length - 1]\n    }\n\n    public setStartTime(startTime: number) {\n        this._startTime.push(startTime)\n    }\n\n    /**\n     * 只要 currentTimeStamp 这天 0点-24点 在 starttime + n*gap 的这天 0点-24点，就创建任务\n     * 创建的方式是找最新创建的一个任务，然后拷贝它的属性（这个有点复杂，要考虑没有最新创建任务的情况，暂时不这么实现，而是使用模板吧）\n     */\n    public isTimeToCreateTask(): boolean {\n        let currentZero = DateUtils.getCurrentDayStamp(0)\n        let startZero = DateUtils.getSomeDayStamp(this.getStartTime(), 0)\n        return (currentZero - startZero) % (this.getGap() * 24 * 3600 * 1000) === 0\n    }\n\n    public createTask(): Task {\n        const newTask = new Task()\n        newTask.init(`[周期|${Format.formatTimeInDay2(Utils.getTimestamp())}] ${this.title}`)\n        newTask.level = this.level\n        newTask.expectConsumes.push(this.expectConsumes)\n        newTask.cycleId = this.id\n        return newTask\n    }\n}\n\nclass Note {\n    public content: string = \"\"\n\n    @Type(() => TimeLine)\n    public timeLines: TimeLine[] = []\n\n    public hasTimeLine(): boolean {\n        return this.timeLines.length !== 0\n    }\n\n    public endTimeLine(): TimeLine|null {\n        if(!this.hasTimeLine()) return null\n        return this.timeLines[this.timeLines.length - 1]\n    }\n\n    public getFormartTimeLines(): string {\n        return this.timeLines.slice().reverse().map((timeline) => {\n            if (timeline.isDivder) {\n                return `----- ${Format.formatTimeInDay(timeline.timeStamp)} -----`\n            } else {\n                return `${Format.formatTimeInSecond(timeline.timeStamp)} ${timeline.content}`\n            }\n        }).join(\"\\n\")\n    }\n}\n\nclass TimeLine {\n    public timeStamp: number = -1\n    public isDivder: boolean = false\n    public content: string = \"\"\n\n    public static createContentNode(content: string): TimeLine{\n        const t = new TimeLine()\n        t.timeStamp = Utils.getTimestamp()\n        t.content = content\n        return t\n    }\n\n    public static createDivNode(): TimeLine{\n        const t = new TimeLine()\n        t.timeStamp = Utils.getTimestamp()\n        t.isDivder = true\n        return t\n    }\n}\n\nclass StoreModel {\n    @Type(() => Task)\n    public tasks: Task[] = []\n\n    @Type(() => CycleRecord)\n    public cycleRecords: CycleRecord[] = []\n\n    /**\n     * 筛选规则：\n     * 1. 所有 未完成 且 预期开始时间在今天endtime之前 的任务\n     * 2. 今天完成的任务\n     */\n    public getTasks(dur: Duration): Task[] {\n        return this.tasks.filter((value) => {\n            return (!value.isDone() && value.expectStartTime <= dur.end) || dur.isIn(value.doneTime)\n        })\n    }\n\n    public addTask(task: Task) {\n        if (this.containsProject(task.id)) return\n        this.tasks.push(task)\n    }\n\n    public addCycleRecord(cycleRecord: CycleRecord) {\n        if (this.containsCycleRecord(cycleRecord.id)) return\n        this.cycleRecords.push(cycleRecord)\n    }\n\n    public invokeAddCycleTask() {\n        this.cycleRecords.forEach(record => {\n            if (record.isTimeToCreateTask()) {\n                const isNotCreated = this.tasks.filter((task) => {\n                    const isSameId = task.cycleId === record.id\n                    const isTodayTask = DateUtils.getMyCurrentDayDur2(0).isIn(task.createTime)\n                    // console.log(`isNotCreated, isSameId:${isSameId} isTodayTask:${isTodayTask}`)\n                    return isSameId && isTodayTask\n                }).length === 0\n                if (isNotCreated) {\n                    // console.log(`create cycle task, record:${record.title}`)\n                    this.addTask(record.createTask())\n                }\n            }\n        });\n    }\n\n    public removeTask(task: Task): boolean {\n        if (!this.containsProject(task.id)) return false\n\n        let length = this.tasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.tasks[i].id === task.id) {\n                if (i === 0) {\n                    this.tasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.tasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.tasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    private containsProject(id: number): boolean {\n        return this.tasks.find(item => item.id === id) !== undefined\n    }\n\n    private containsCycleRecord(id: number): boolean {\n        return this.cycleRecords.find(item => item.id === id) !== undefined\n    }\n\n    public normalUpdate() {\n        this.invokeAddCycleTask()\n        this.orderTasks()\n    }\n\n    public orderTasks() {\n        this.tasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 正在做的放最前\n                if (a.isDoing()) {\n                    return -1\n                } else if (b.isDoing()) {\n                    return 1\n                } else {\n                    // 到时间的放前面\n                    if (a.isDangerous() && !b.isDangerous()) {\n                        return -1\n                    } else if (!a.isDangerous() && b.isDangerous()) {\n                        return 1\n                    } else {\n                        // 然后比较level\n                        if (a.level > b.level) {\n                            return 1\n                        } else if (a.level < b.level) {\n                            return -1\n                        } else {\n                            // 同样 level 比较创建时间\n                            if (a.createTime > b.createTime) {\n                                return -1\n                            } else if (a.createTime < b.createTime) {\n                                return 1\n                            } else {\n                                return 0\n                            }\n                        }\n                    }\n                }\n            }\n        })\n    }\n}\n\n\nexport { Task, Duration, StoreModel, Note, CycleRecord, TimeLine }","import { Task, Duration, StoreModel } from '../model/model'\nimport Utils from '../utils/Utils';\nimport stores from '../stores';\nimport 'reflect-metadata'\nimport '../../node_modules/reflect-metadata/Reflect.js'\nimport { plainToClass } from \"class-transformer\";\n\n\nconst STORAGE_KEY = 'DoingList3'\nconst storage = {\n    isDebug: false,\n    fetch: function (): StoreModel {\n        if (this.isDebug) {\n            return this._getMockStoreModel()\n        }\n\n        let result = new StoreModel()\n\n        let storageJson = localStorage.getItem(STORAGE_KEY)\n        if (storageJson != null) {\n            result = plainToClass(StoreModel, JSON.parse(storageJson))\n            result.tasks.forEach((task) => {task.adaptData()})\n            return result\n        }\n        \n        return result\n    },\n\n    save: function (storeModel: StoreModel) {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(storeModel))\n    },\n\n    _getMockStoreModel(): StoreModel {\n        let result = new StoreModel()\n\n        for (let index = 0; index < 12; index++) {\n            const newLocal = new Task();\n        newLocal.init(\"我的第 \" + index + \" 个任务\")\n            result.addTask(newLocal)\n        }\n\n        return result\n    },\n}\n\nconst model = {\n    storeModel: storage.fetch(),\n\n    save() {\n        storage.save(this.storeModel)\n    },\n\n    setModel(model: StoreModel) {\n        this.storeModel = model\n        this.save()\n    },\n};\n\nexport default model","import { Task } from '../model/model'\n\nconst CurrentTaskKey = \"CurrentTaskKey\"\n\nconst currentTaskStore = {\n    currentTask: undefined as Task|undefined,\n\n    setCurrentTask(task: Task) {\n        this.currentTask = task\n    },\n};\n\nexport {CurrentTaskKey, currentTaskStore}","import { Task } from '../model/model'\n\nconst CurrentDoingTaskKey = \"CurrentDoingTaskKey\"\n\nconst currentDoingTaskStore = {\n    currentDoingTask: undefined as Task|undefined,\n\n    setCurrentDoingTask(task: Task| undefined) {\n        this.currentDoingTask = task\n    },\n};\n\nexport {CurrentDoingTaskKey, currentDoingTaskStore}","import mainmodel from './MainStore';\nimport Store from '@ice/store';\n\nimport { CurrentTaskKey, currentTaskStore } from './CurrentTaskStore';\nimport { CurrentDoingTaskKey, currentDoingTaskStore } from './CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey, currentDayOffsetStore } from './CurrentDayOffsetStore';\n\nconst storeManager = new Store();\n//  *（@@@？todo 使用常量 mainmodel？）* \nstoreManager.registerStore('mainmodel', mainmodel);\nstoreManager.registerStore(CurrentTaskKey, currentTaskStore);\nstoreManager.registerStore(CurrentDoingTaskKey, currentDoingTaskStore);\nstoreManager.registerStore(CurrentDayOffsetKey, currentDayOffsetStore);\n\nexport default storeManager;","\nconst CurrentDayOffsetKey = \"CurrentDayOffsetKey\"\n\nconst currentDayOffsetStore = {\n    currentDayOffset: 0,\n\n    setCurrentDayOffset(offset: number) {\n        this.currentDayOffset = offset\n    },\n};\n\nexport {CurrentDayOffsetKey, currentDayOffsetStore}","import { Task } from '../model/model'\nimport Format from '../utils/Format'\nimport Utils from '../utils/Utils'\n\nclass TaskInfoFormat {\n\n    public static getDoingStatusTips(task: Task): string {\n        if (task.isDoing()) {\n            return \"Doing🔴\"\n            // ⛑🏃‍♀️🧠 🏄‍♂️ 🌟 🔴\n        } else {\n            return \"\"\n        }\n    }\n\n    public static getConsumed(task: Task): string {\n        let time = Format.formatDuration2(task.getAllDuration());\n        if (Utils.isStringEmpty(time)) {\n            return \"\"\n        }\n        return `进行${time}(${task.doingDurs.length}次) `\n    }\n\n    public static getDeadline(task: Task): string {\n        const pendingStatus = TaskInfoFormat.getPendingStatus(task)\n        if (Utils.isStringEmpty(pendingStatus)) {\n            return TaskInfoFormat.getDeadlineStatus(task)\n        } else {\n            return pendingStatus\n        }\n    }\n\n    private static getDeadlineStatus(task: Task): string {\n        let deadline = task.getActualDeadline()\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Dead已超期❗ `\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Dead剩余${time} `\n    }\n\n    // todo 合并重复函数\n    private static getPendingStatus(task: Task): string {\n        let deadline = task.pendingDeadline\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Pend已超期❗ `\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Pend剩余${time} `\n    }\n\n    public static getConsumeExpected(task: Task): string {\n        if (task.getActualExpectConsume() <= 0) {\n            return \"\"\n        }\n\n        let left = task.getLeftExpectConsumeTime()\n        if (left <= 0) {\n            return `多用${Format.formatDuration2(-left)} `\n        } else {\n            return `还要${Format.formatDuration2(left)} `\n        }\n    }\n\n    public static getStartExpected(task: Task): string {\n        const currentTime = Utils.getTimestamp()\n        if (currentTime > task.expectStartTime) {\n            return \"\"\n        }\n\n        return `还有${Format.formatDuration2(task.expectStartTime - currentTime)}开始`\n    }\n}\n\nexport default TaskInfoFormat","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, Row, Col, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\n// 这样居然真的行\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport stores from '../stores';\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { Task, Note, CycleRecord } from '../model/model'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport 'antd/dist/antd.css';\nimport { plainToClass } from \"class-transformer\";\nimport moment from 'moment'\n\nconst Container = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n`\n\nconst Div = styled.div`\n`\n\nconst ParamTag = styled.span`\n  width:100px;\n  display:inline-block;\n  text-align:center;\n`\n\nconst Container2 = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  overflow:auto;\n  /* height: 800px; */\n  height: 85vh;\n  margin-top:10px;\n`\n\nconst InputGroup = styled(Input.Group)`\nmargin: 1%;\n`\nconst ButtonGroup = styled(Button.Group)`\nmargin: 1%;\n`\n\nconst TaskListContainer: React.FC = () => {\n  const { storeModel, save, setModel } = stores.useStore('mainmodel') as { storeModel: StoreModel, save: () => void, setModel: (storeModel: StoreModel) => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n  const [title, setTitle] = useState(\"\");\n  const [isNeedExceptTime, setNeedExceptTimeUI] = useState(true);\n  const [expectTime, setExpectTime] = useState(2);\n\n  const [level, setLevel] = useState(3);\n\n  const [isCycleTask, setCycleTaskUI] = useState(false);\n  const [cycleGap, setCycleGap] = useState(1);\n\n  const [isLongTask, setLongTaskUI] = useState(false);\n  const [exceptWorkday, setExceptWorkday] = useState(3);\n  const [exceptHoliDay, setExceptHoliDay] = useState(1);\n\n  const [isStartNow, setStartNow] = useState(true);\n  const [expectStartTime, setExpectStartTime] = useState<any>(null);\n\n  // React.useEffect(() => {\n  //   console.log(\"TaskListContainer useEffect\")\n  // },[])\n\n  function setNeedExceptTime(isNeedExceptTime: boolean) {\n    if (!isNeedExceptTime && isLongTask) {\n      message.error(\"长任务必须估时\")\n      return\n    }\n\n    setNeedExceptTimeUI(isNeedExceptTime)\n  }\n\n  function setCycleTask(isCycleTask: boolean) {\n    if (isCycleTask) {\n      setLongTask(false)\n    }\n\n    setCycleTaskUI(isCycleTask)\n  }\n\n  function setLongTask(isLongTask: boolean) {\n    if (isLongTask) {\n      setNeedExceptTime(true)\n      setCycleTask(false)\n    }\n\n    setLongTaskUI(isLongTask)\n  }\n\n  function onAddTask(event: any) {\n    event.preventDefault();\n\n    if (Utils.isStringEmpty(title)) {\n      message.error(\"请输入内容\")\n      return\n    }\n    if (isLongTask && isCycleTask) {\n      message.error(\"不能同时是长任务和周期任务\")\n      return\n    }\n\n    if (isCycleTask) {\n      const newRecord = new CycleRecord()\n      newRecord.init(cycleGap, title, level)\n\n      if (!isStartNow && expectStartTime !== null) {\n        newRecord.setStartTime(expectStartTime)\n      }\n\n      if (isNeedExceptTime) {\n        newRecord.expectConsumes = expectTime * 3600 * 1000 // 单位小时，转换\n      } else {\n        newRecord.expectConsumes = -1 // 表示不设置时间\n      }\n\n      storeModel.addCycleRecord(newRecord)\n      storeModel.normalUpdate()\n    } else {\n      const newTask = new Task()\n      newTask.init(title)\n      newTask.level = level\n\n      if (!isStartNow && expectStartTime !== null) {\n        newTask.expectStartTime = expectStartTime\n      }\n\n      if (isNeedExceptTime) {\n        newTask.expectConsumes.push(expectTime * 3600 * 1000) // 单位小时，转换\n      } else {\n        newTask.expectConsumes.push(-1) // 表示不设置时间\n      }\n\n      storeModel.addTask(newTask)\n      storeModel.normalUpdate()\n    }\n\n    save()\n\n    setTitle(\"\")\n    setExpectStartTime(null)\n  }\n\n  function changeOffsetDay(isAdd: boolean) {\n    if (isAdd) {\n      setCurrentDayOffset(currentDayOffset + 1)\n    } else {\n      setCurrentDayOffset(currentDayOffset - 1)\n    }\n  }\n\n  function download() {\n    Utils.downloadFile(`DoingList_${Format.formatTimeInMsToFileName(Utils.getTimestamp())}.dl`, JSON.stringify(storeModel))\n  }\n\n  function upload(e: any) {\n    let file = e.target.files[0];\n    console.log(file)\n\n    let reader = new FileReader();\n    reader.onload = function (this) {\n      let uploadContent = this.result\n      if (typeof uploadContent === 'string') {\n        Modal.confirm({\n          title: '确定要导入嘛？',\n          content: `导入会覆盖当前所有任务`,\n          onOk() {\n            Modal.confirm({\n              title: '是否需要先下载当前任务？',\n              content: ``,\n              onOk() {\n                download()\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              },\n              onCancel() {\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              }\n            });\n          },\n        })\n      } else {\n        message.error(\"导入文件有问题，导入失败\")\n      }\n    }\n    //读取文件内容\n    reader.readAsText(file);\n  }\n\n  function getOffsetString() {\n    let base = \"\" + currentDayOffset\n    if (currentDayOffset > 0) {\n      base = \"+\" + base\n    }\n    return base\n  }\n\n  function getAllTaskStatus(): string {\n    let notDoneTasks = storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset)).filter((task) => { return !task.isDone() })\n\n    if (notDoneTasks.length === 0) {\n      return \"\"\n    }\n\n    let consumeFormat = \"\"\n    let consumes: number = notDoneTasks.map((task) => {\n      let left = task.getLeftExpectConsumeTime()\n      if (left < 0) return 0\n      return left\n    }).reduce((a, b) => a + b)\n\n    // console.log(\"getAllTaskStatus\" + consumes)\n    if (consumes > 0) {\n      consumeFormat = `，总剩余预估需要花费${Format.formatDuration(consumes)}`\n    }\n\n    return `共${notDoneTasks.length}个任务未完成${consumeFormat}`\n  }\n\n  function getMenu(): React.ReactElement {\n    return (\n      <Menu onClick={(param) => setLevel(Number(param.key))}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n\n  return (\n    <Container>\n\n      {/* todo 这个组件可以单独抽出去 */}\n      <ButtonGroup>\n        <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(false)}>←</Button>\n\n        <span style={{ backgroundColor: \"#ffffff\", padding: 4 }} >\n          {Format.formatTimeInDay(DateUtils.getMyCurrentDayStamp(currentDayOffset, DateUtils.dayOffset))}({getOffsetString()})\n        </span>\n\n        <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(true)}>→</Button>\n        <span style={{ paddingLeft: 10 }} ></span>\n        <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导出</Button>\n        <input type=\"file\" id=\"upload-file\" multiple onChange={(event) => upload(event)} />\n        {/* <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导入</Button> */}\n      </ButtonGroup>\n\n      <Row style={{ margin: \"10px\" }}>\n        <Col flex=\"1 1 auto\">\n          <Input placeholder=\"输入任务，回车添加\" value={title} onChange={(event) => setTitle(event.target.value)} onPressEnter={onAddTask} />\n        </Col>\n        <Col flex=\"0 1 auto\">\n\n          <Dropdown overlay={getMenu()}>\n            <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n              {formartLevel(level)} <DownOutlined />\n            </a>\n          </Dropdown>\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isNeedExceptTime} onChange={(event) => setNeedExceptTime(event)} />\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"立刻开始\" unCheckedChildren=\"之后开始\" checked={isStartNow} onChange={(event) => setStartNow(event)} />\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"长任务\" unCheckedChildren=\"短任务\" checked={isLongTask} onChange={(event) => setLongTask(event)} />\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"周期\" unCheckedChildren=\"单个\" checked={isCycleTask} onChange={(event) => setCycleTask(event)} />\n\n        </Col>\n      </Row>\n\n      <Div style={{ margin: \"10px\", color: \"#ffffff\" }}>\n        {isNeedExceptTime &&\n          <Input style={{ width: '100px', marginLeft: \"15px\" }} value={expectTime} placeholder=\"花费时间\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} />\n        }\n\n        {!isStartNow &&\n          <span style={{ marginLeft: \"15px\" }} >开始时间：\n        <DatePicker showTime value={expectStartTime} onOk={value => setExpectStartTime(moment(value.valueOf()))} /></span>\n        }\n\n        {isLongTask &&\n          <span style={{ marginLeft: \"15px\" }} >长任务：\n        <Input style={{ width: '100px' }} value={exceptWorkday} prefix=\"计划\" suffix=\"天\" onChange={(event) => setExceptWorkday(Number(event.target.value))} />\n            <Input style={{ width: '100px' }} value={exceptHoliDay} prefix=\"假期\" suffix=\"天\" onChange={(event) => setExceptHoliDay(Number(event.target.value))} />\n          </span>\n        }\n\n        {isCycleTask &&\n          <Input style={{ width: '100px', marginLeft: \"15px\" }} value={cycleGap} placeholder=\"1表示不间隔\" prefix=\"每\" suffix=\"天\" onChange={(event) => setCycleGap(Number(event.target.value))} />\n        }\n\n      </Div>\n\n\n\n      <span style={{ backgroundColor: \"#ffffff\", padding: 2, margin: \"10px\" }} >\n        {getAllTaskStatus()}\n      </span>\n\n      <NoteList />\n    </Container>\n  );\n}\n\n\nconst NoteItem = styled.div`\n:hover{\n\t/* background-color:#b4e7fc; */\n  background-color: ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#ffffff'\n    }\n  }\n  };\nopacity : ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.isDone) {\n      return 0.15\n    } else {\n      return 1\n    }\n  }\n  };;\n`\nconst NoteList: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task) => void }\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n\n  useEffect(() => {\n    // console.log(\"NoteList useEffect\")\n\n    if (currentDoingTask === undefined) {\n      let doingTasks = storeModel.tasks.filter((value) => { return value.isDoing() })\n\n      if (doingTasks.length === 0) {\n        return\n      }\n\n      if (doingTasks.length > 1) {\n        console.error(`有 ${doingTasks.length} 个任务在运行中，自动关闭`)\n\n        for (let i = 1; i < doingTasks.length; i++) {\n          doingTasks[i].stop()\n        }\n      }\n\n      setCurrentDoingTask(doingTasks[0])\n    }\n  });\n\n  function onChooseNote(event: any, note: Task) {\n    event.preventDefault()\n    setCurrentTask(note)\n  }\n\n  const onClickMenu = (param: ClickParam, task: Task) => {\n    task.level = Number(param.key)\n\n    storeModel.normalUpdate()\n    save()\n\n    param.domEvent.preventDefault()\n\n    // 怎么阻止对 parent 的点击事件\n    // param.domEvent.stopPropagation()\n  };\n\n  function getMenu(task: Task): React.ReactElement {\n    return (\n      <Menu onClick={(param) => onClickMenu(param, task)}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n\n  function startTask(event: any, task: Task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n      return\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop()\n    }\n\n    task.start()\n    setCurrentDoingTask(task)\n    storeModel.normalUpdate()\n    save()\n  }\n\n  function getShowTips(task: Task): string {\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  return (\n    <Container2>\n      <List\n        size=\"small\"\n        style={{ backgroundColor: 'white', margin: \"1%\" }}\n        bordered\n        dataSource={storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset))}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => onChooseNote(e, task)} isDone={task.isDone()}>\n\n            <Row>\n              <Col flex=\"1 1 auto\">\n                <NoteItemInput key={task.id} task={task} />\n              </Col>\n              <Col flex=\"0 1 auto\">\n\n                {getShowTips(task)}\n                <Dropdown overlay={getMenu(task)}>\n                  <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                    {formartLevel(task.level)} <DownOutlined />\n                  </a>\n                </Dropdown>\n\n                <Button onClick={(e) => startTask(e, task)}>Start</Button>\n\n              </Col>\n            </Row>\n\n          </NoteItem>\n        )}\n      />\n    </Container2>\n  );\n}\n\nfunction formartLevel(level: number): string {\n  switch (level) {\n    case 1:\n      return \"🌟\"\n    case 2:\n      return \"🎏\"\n    case 3:\n      return \"3️⃣\"\n    case 4:\n      return \"4️\"\n    case 5:\n      return \"5️\"\n    default:\n      return \"\"\n  }\n\n  // switch (level) {\n  //   case 1:\n  //     return \"🥇\"\n  //   case 2:\n  //     return \"🥈\"\n  //   case 3:\n  //     return \"🥉\"\n  //   case 4:\n  //     return \"4️⃣\"\n  //   case 5:\n  //     return \"5️\"\n  //   default:\n  //     return \"\"\n  // }\n}\n\ninterface NoteItemInputProps {\n  task: Task;\n}\n\nconst NoteItemInput: React.FC<NoteItemInputProps> = (props) => {\n  const [content, setContent] = useState(props.task.title)\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n\n  function saveTaskTitle(event: any) {\n    props.task.title = content\n    save()\n  }\n\n  return (\n    <Input style={{ background: \"#ffffff70\", fontWeight: \"bold\" }} value={content} onChange={(e) => setContent(e.target.value)} onBlur={saveTaskTitle} />\n  );\n}\n\nexport default TaskListContainer;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration, TimeLine } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport MomentUtils from '../utils/MomentUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n  const [timeline, setTimeline] = useState(\"\")\n\n  const [isExpectConsume, setExpectConsumeUI] = useState(false);\n  const [expectTime, setExpectTime] = useState(-1);\n\n  const [isHaveDeadline, setHaveDeadlineUI] = useState(false);\n  const [deadline, setDeadlineUI] = useState<any>(null);\n\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState<any>(null);\n\n  const [expectStartTime, setExpectStartTimeUI] = useState<any>(null);\n\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      // todo 这部分逻辑抽出去\n      const expectTime = currentTask.getActualExpectConsume()\n      if (expectTime < 0) {\n        setExpectTime(expectTime)\n        setExpectConsume(false)\n      } else {\n        setExpectConsume(true)\n        setExpectTime(expectTime / (3600 * 1000))\n      }\n\n      setPendingUI(currentTask.isPending())\n      setPendingReason(currentTask.pendingReason)\n      setPendingTimeUI(getPendingDeadlineTime(currentTask))\n\n      setDeadlineUI(getDeadlineTime(currentTask))\n      setHaveDeadline(currentTask.isHaveDeadline())\n\n      if (currentTask !== undefined && !currentTask.isStarted()) {\n        setExpectStartTimeUI(moment(currentTask.expectStartTime))\n      } else {\n        setExpectStartTimeUI(null)\n      }\n\n      storeModel.normalUpdate()\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.normalUpdate()\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    setDeadlineUI(getDeadlineTime(currentTask))\n    save()\n  }\n\n  function getDeadlineTime(task: Task): any {\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task) + TaskInfoFormat.getStartExpected(task)\n    return result\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000)\n    }\n\n    save()\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onChoosePendingDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`)\n      return\n    }\n\n    const pendingLine = value.valueOf()\n    if (!isTimeValid(pendingLine, \"Pending时间\", Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    task.pendingDeadline = pendingLine\n    setPendingTimeUI(getPendingDeadlineTime(task))\n    save()\n  }\n\n  function onChangeExpectStartTime(value: any, task: Task) {\n    const expectStartTime = value.valueOf()\n\n    if (!isTimeValid(expectStartTime, \"预期开始时间\", Duration.create(undefined, task.pendingDeadline, \"PendLine\"), Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    setExpectStartTimeUI(expectStartTime)\n    task.expectStartTime = expectStartTime\n    save()\n  }\n\n  function isTimeValid(time: number, timeName: string, ...limitDurations: Duration[]): boolean {\n    let isValid = true\n    for (let index = 0; index < limitDurations.length; index++) {\n      const dur = limitDurations[index];\n      if (dur.start > 0 && time < dur.start) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})早于${dur.start}(${Format.formatTimeInMinute(dur.start)})，请重新设置`)\n        isValid = false\n      } else if (dur.end > 0 && time > dur.end) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})晚于${dur.end}(${Format.formatTimeInMinute(dur.end)})，请重新设置`)\n        isValid = false\n      }\n      if (!isValid) {\n        return false\n      }\n    }\n    return true\n  }\n\n  function getPendingDeadlineTime(task: Task): any {\n    const deadline = task.pendingDeadline\n\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    task.pendingReason = pendingReason\n    save()\n  }\n\n  function setPending(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1\n      setPendingTimeUI(null)\n      save()\n    }\n    setPendingUI(pendingStatus)\n  }\n\n  function setExpectConsume(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      task.expectConsumes.push(-1)\n      setExpectTime(-1)\n      save()\n    }\n    setExpectConsumeUI(pendingStatus)\n  }\n\n  function setHaveDeadline(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      task.deadlines.push(-1)\n      setDeadlineUI(null)\n      save()\n    }\n    setHaveDeadlineUI(pendingStatus)\n  }\n\n  function onAddTimeline(event: any) {\n    event.preventDefault();\n\n    if (currentTask === undefined) return\n\n    if (Utils.isStringEmpty(timeline)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    const endTimeline = currentTask.note.endTimeLine();\n    if (endTimeline == null || !DateUtils.isSameDay(endTimeline.timeStamp, Utils.getTimestamp())) {\n      currentTask.note.timeLines.push(TimeLine.createDivNode())\n    }\n\n    currentTask.note.timeLines.push(TimeLine.createContentNode(timeline))\n\n    save()\n\n    setTimeline(\"\")\n  }\n\n  /* ---------------------------------------------------------- */\n\n  if (currentTask === undefined) return null\n\n  return (\n    <Container style={{ margin: \"5px\" }}>\n      {/* 不加这个 div 会换行 */}\n      {currentTask !== undefined &&\n        <Div style={{ margin: \"5px\" }}>\n          <ButtonGroup>\n            {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n            <Button onClick={(e) => deleteTask(e)}>D</Button>\n            {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n            <Button onClick={(e) => doneTask(e)}>Done</Button>\n          </ButtonGroup>\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isExpectConsume} onChange={(event) => setExpectConsume(event)} />\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"截止时间\" unCheckedChildren=\"没有截止\" checked={isHaveDeadline} onChange={(event) => setHaveDeadline(event)} />\n\n          <Switch style={{ marginLeft: '9px', marginRight: '5px' }} checkedChildren=\"Pending\" unCheckedChildren=\"NoPend\" checked={isPending} onChange={(event) => setPending(event)} />\n\n        </Div>\n      }\n\n\n      <div style={{ marginLeft: \"15px\", marginRight: \"15px\", fontWeight: \"bold\" }} >{getShowTips()}</div>\n\n\n      <Div style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n        {expectStartTime !== null &&\n          <span style={{ marginLeft: \"15px\" }} >预期开始时间：\n          <DatePicker showTime value={expectStartTime} onOk={value => onChangeExpectStartTime(value, currentTask)} />\n          </span>\n        }\n\n        {isExpectConsume &&\n          <span style={{ marginLeft: \"15px\" }} >估时：\n        <Input style={{ width: '100px' }} value={expectTime} placeholder=\"花费时间 回车保存\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onBlur={changeExceptTime} />\n          </span>\n        }\n\n        {isHaveDeadline &&\n          <span style={{ marginLeft: \"15px\" }} >DeadLine：\n        <DatePicker showTime value={deadline} onOk={value => onChooseDeadline(value)} />\n          </span>\n        }\n\n        {isPending &&\n          <span style={{ marginLeft: \"15px\" }} >Pending：\n      <DatePicker showTime value={pendingTime} onOk={value => onChoosePendingDeadline(value)} />\n\n            <Input style={{ width: '200px' }} value={pendingReason} prefix=\"原因:\" placeholder=\"（自动保存）\" onChange={(event) => setPendingReason(event.target.value)} onBlur={savePendingStatus} />\n          </span>\n        }\n\n      </Div>\n\n      {currentTask !== undefined &&\n        <Div style={{ marginLeft: \"15px\" }} >\n          <Input placeholder=\"输入时间线，回车添加\" value={timeline} onChange={(event) => setTimeline(event.target.value)} onPressEnter={onAddTimeline} />\n          <Div style={{ height: \"250px\", overflow: \"scroll\", whiteSpace:\"pre-wrap\" }}>\n            {currentTask.note.getFormartTimeLines()}\n          </Div>\n        </Div>\n\n      }\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;","import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { StoreModel, Duration, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\n\nconst Div = styled.div`\n\n`\n\nconst TimeLineLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  function getTimelines(): string {\n    return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n      .flatMap((task) => task.note.timeLines).sort((a, b) => {\n        if (a.timeStamp > b.timeStamp) {\n          return -1\n        } else if (a.timeStamp < b.timeStamp) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n      .map((timeline) => {\n        if (timeline.isDivder) {\n          return \"\"\n        } else {\n          return `${Format.formatTimeInSecond(timeline.timeStamp)} ${timeline.content} \\n`\n        }\n      }).join(\"\")\n  }\n\n  return (\n    <Div style={{ overflow: \"scroll\", whiteSpace: \"pre-wrap\", padding: \"5px\", backgroundColor:\"rgb(227, 233, 231)\" }}>\n      {getTimelines()}\n    </Div>\n  );\n}\n\nexport default TimeLineLayout;\n","import 'reflect-metadata'\nimport React,{useState} from 'react';\nimport styled from 'styled-components';\nimport TaskListContainer from './TaskListContainer'\nimport ContentLayout from './ContentLayout'\nimport TimeLineLayout from './TimeLineLayout'\n\n\nconst AppContainer = styled.div`\n  display: grid;\n  min-height: 100vh;\n  height: 100%;\n  width: 100%;\n  grid-template-columns: 40% 40% 20%;\n  grid-template-rows: 100%;\n`\n\nconst App: React.FC = () => {\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  return (\n    <AppContainer>\n      <TaskListContainer/>\n      <ContentLayout/>\n      <TimeLineLayout/>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}