{"version":3,"sources":["utils/Utils.ts","model/model.ts","stores/MainStore.ts","stores/CurrentTaskStore.ts","stores/CurrentDoingTaskStore.ts","stores/index.ts","stores/CurrentDayOffsetStore.ts","utils/DateUtils.ts","utils/Format.ts","utils/TaskInfoFormat.ts","layouts/TaskListContainer.tsx","layouts/ContentLayout.tsx","layouts/App.tsx","serviceWorker.ts","index.tsx"],"names":["Utils","obj","content","transfer","document","createElement","style","cssText","body","appendChild","value","focus","select","execCommand","blur","removeChild","fileName","console","log","eleLink","download","display","blob","Blob","href","URL","createObjectURL","click","Date","getTime","src","regex","search","RegExp","regExp","Math","random","toString","start1","end1","start2","end2","array","object","length","this","i","shift","pop","splice","Task","Type","Duration","id","title","note","Note","level","createTime","doneTime","pendingDeadline","pendingReason","deadlines","expectConsumes","getTimestamp","generateId","idCounter","task","undefined","doingDurs","end","start","duration","init","push","delay","isTimeDangers","getActualDeadline","isDangerousPending","isDangerousDeadline","deadline","map","index","getDur","reduce","a","b","left","getActualExpectConsume","getAllDuration","error","timeStamp","isDoing","StoreModel","dur","tasks","filter","isDone","isIn","containsProject","find","item","sort","isDangerous","storage","isDebug","fetch","_getMockStoreModel","result","storageJson","localStorage","getItem","plainToClass","JSON","parse","save","storeModel","setItem","stringify","newLocal","addTask","model","setModel","currentTaskStore","currentTask","setCurrentTask","currentDoingTaskStore","currentDoingTask","setCurrentDoingTask","storeManager","Store","registerStore","mainmodel","currentDayOffset","setCurrentDayOffset","offset","DateUtils","hour","today","setHours","dayZeroTime","offsetHour","day","dayMills","offsetDay","getCurrentDayStamp","dayOffset","getOffsetedDayDur","getMyCurrentDayStamp","Format","timeMs","date","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","time","天","floor","小时","分","秒","Object","entries","val","key","join","d","TaskInfoFormat","formatDuration2","isStringEmpty","pendingStatus","getPendingStatus","getDeadlineStatus","leftTime","getLeftExpectConsumeTime","Container","styled","div","Container2","ButtonGroup","Input","Group","Button","NoteItem","props","choosed","NoteList","stores","useStore","useEffect","doingTasks","stop","getMenu","onClick","param","Number","orderTasks","domEvent","preventDefault","onClickMenu","Item","size","backgroundColor","margin","bordered","dataSource","getTasks","getMyCurrentDayDur","renderItem","isSameTask","e","flex","getDoingStatusTips","getDeadline","getConsumeExpected","getShowTips","overlay","paddingLeft","className","formartLevel","DownOutlined","event","message","formatTimeInMs","lastStartTime","startTask","NoteItemInput","useState","setContent","background","fontWeight","onChange","target","onBlur","TaskListContainer","setTitle","isNeedExceptTime","setNeedExceptTime","expectTime","setExpectTime","onAddNote","newTask","changeOffsetDay","isAdd","downloadFile","formatTimeInMsToFileName","type","padding","formatTimeInDay","base","getOffsetString","multiple","file","files","reader","FileReader","onload","uploadContent","Modal","confirm","onOk","onCancel","readAsText","upload","compact","width","placeholder","onPressEnter","checkedChildren","unCheckedChildren","defaultChecked","defaultValue","prefix","suffix","notDoneTasks","consumeFormat","consumes","formatDuration","getAllTaskStatus","Div","Editor","TextArea","ContentLayout","setDeadlineUI","isPending","setPendingUI","setPendingReason","pendingTime","setPendingTimeUI","lastTask","setLastTask","isManual","info","saveToLocal","_realDone","done","success","getDeadlineTime","moment","getPendingDeadlineTime","removeTask","doneTask","showTime","valueOf","onChooseDeadline","getConsumed","checked","pendingLine","formatTimeInMinute","onChoosePendingDeadline","AppContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.847c88f2.chunk.js","sourcesContent":["\nclass Utils {\n    public static isStringEmpty(obj: any): boolean {\n        if (typeof obj === \"undefined\" || obj === null || obj === \"\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static exportContentToClipboard(content: string) {\n        let transfer = document.createElement('textarea');\n        // 不这么设置屏幕会跳，具体哪儿有问题还没确定\n        transfer.style.cssText = \"width:30%;padding:2%;min-width: 100px;opacity: 0.5;color: rgb(255, 255, 255);line-height: 18px;text-align: center;border-radius: 5px;position: fixed;top: 50%;left: 30%;z-index: 999999;background: rgb(0, 0, 0);font-size: 15px;\";\n        document.body.appendChild(transfer);\n        transfer.value = content;  // 这里表示想要复制的内容\n        transfer.focus();\n        transfer.select();\n        if (document.execCommand('copy')) {\n            document.execCommand('copy');\n        }\n        transfer.blur();\n        document.body.removeChild(transfer);\n    }\n\n    public static downloadFile(fileName: string, content: string) {\n        console.log(\"download\")\n        // 创建隐藏的可下载链接\n        var eleLink = document.createElement('a');\n        eleLink.download = fileName;\n        eleLink.style.display = 'none';\n        // 字符内容转变成blob地址\n        var blob = new Blob([content]);\n        eleLink.href = URL.createObjectURL(blob);\n        // 触发点击\n        document.body.appendChild(eleLink);\n        eleLink.click();\n        // 然后移除\n        document.body.removeChild(eleLink);\n    }\n\n    public static generateId(): number {\n        return (new Date()).getTime()\n    }\n\n    // rename currentTimpstamp\n    public static getTimestamp(): number {\n        return (new Date()).getTime()\n    }\n\n    public static match(src: string, regex: string): boolean {\n        return src.search(new RegExp(regex, 'i')) > -1\n    }\n\n    // todo 不能重载吗？\n    public static matchs(src: string, regExp: RegExp): boolean {\n        return src.search(regExp) > -1\n    }\n\n    public static getRandomColor(): string {\n        return '#' + (Math.random() * 0xffffff << 0).toString(16);\n    }\n\n    public static hasIntersection(start1: number, end1: number, start2: number, end2: number): boolean {\n\n        if (end2 < start1 || end1 < start2) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    public static removeObject(array: any[], object: any): boolean {\n        let length = this.length;\n        for (let i = 0; i < length; i++) {\n            if (array[i] === object) {\n                if (i === 0) {\n                    array.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    array.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    array.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n\n        return false\n    }\n}\n\nexport default Utils","import Utils from '../utils/Utils'\nimport { Type } from \"class-transformer\";\n\nclass Task {\n    // todo delete 内存id增加器（因为mock初始化太快了，都在一个毫秒内）\n    private static idCounter = 0\n\n    public id: number = -1\n\n    public title: string = \"undefine\"\n    public note: Note = new Note()\n\n    public level: number = 3\n\n    public createTime: number = -1\n    public doneTime: number = -1\n\n    public pendingDeadline: number = -1\n    public pendingReason: string = \"\"\n\n    // 可修改，最后一个有效\n    public deadlines: number[] = []\n    // 预计花费时间，单位毫秒，可修改，最后一个有效\n    public expectConsumes: number[] = []\n\n    @Type(() => Duration)\n    public doingDurs: Duration[] = []\n\n    // 反序列化不能有带参数的构造器\n    // public constructor(title: string) {\n    //     this.title = title\n    //     this.createTime = Utils.getTimestamp()\n\n    //     this.id = Utils.generateId() + Task.idCounter\n    //     Task.idCounter = Task.idCounter + 1000\n    // }\n\n    public init(title: string) {\n        this.title = title\n        this.createTime = Utils.getTimestamp()\n\n        this.id = Utils.generateId() + Task.idCounter\n        Task.idCounter = Task.idCounter + 1000\n    }\n\n    public isSameTask(task: Task | undefined): boolean {\n        if (task === undefined) {\n            return false\n        } else {\n            return this.id === task.id\n        }\n    }\n\n    public isDoing(): boolean {\n        if (this.doingDurs.length === 0) {\n            return false\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.end === -1\n        }\n    }\n\n    public lastStartTime(): number {\n        if (this.doingDurs.length === 0) {\n            return -1\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.start\n        }\n    }\n\n    public start() {\n        let duration = new Duration()\n        duration.init(Utils.getTimestamp())\n        this.doingDurs.push(duration)\n    }\n\n    public stop() {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp()\n    }\n\n    public stopDelay(delay: number) {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() + delay\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public isPending(): boolean {\n        return this.pendingDeadline !== -1\n    }\n\n    public isDangerousPending(): boolean {\n        return this.isTimeDangers(this.pendingDeadline)\n    }\n\n    public isDangerousDeadline(): boolean {\n        return this.isTimeDangers(this.getActualDeadline())\n    }\n\n    public isDangerous(): boolean {\n        return this.isDangerousPending() || this.isDangerousDeadline()\n    }\n\n    /**\n     * dealine 距离还有2个小时，或者已经过了\n     */\n    private isTimeDangers(deadline: number): boolean {\n        if (deadline <= 0) {\n            return false\n        }\n\n        if (deadline - Utils.getTimestamp() <= 2 * 60 * 60 * 1000) {\n            return true\n        }\n\n        return false\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    // 返回毫秒数\n    // todo rename getAllDoingDuration\n    public getAllDuration(): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b)\n    }\n\n    public getActualDeadline(): number {\n        if (this.deadlines.length === 0) {\n            return -1\n        }\n\n        return this.deadlines[this.deadlines.length - 1]\n    }\n\n    public getActualExpectConsume(): number {\n        if (this.expectConsumes.length === 0) {\n            return -1\n        }\n\n        return this.expectConsumes[this.expectConsumes.length - 1]\n    }\n\n    // 超出预期时间返回多花的时间，负值\n    // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n    public getLeftExpectConsumeTime(): number {\n        let left = this.getActualExpectConsume() - this.getAllDuration()\n        if (left < 0) {\n            console.error(\"超出预期时间\")\n        }\n        return left\n    }\n}\n\nclass Duration {\n    public start: number = -1\n    public end: number = -1\n\n    // todo 没法重载\n    public init(start: number) {\n        this.start = start\n    }\n    public init2(start: number, end?: number) {\n        this.start = start\n        if (end != undefined) {\n            this.end = end\n        }\n    }\n\n    public isIn(timeStamp: number) {\n        return timeStamp >= this.start && timeStamp <= this.end\n    }\n\n    public getDur(isDoing: boolean): number {\n        let end = this.end\n        if (end == -1 && isDoing) {\n            end = Utils.getTimestamp()\n        }\n        if (end == -1) {\n            console.error(\"这段时间未结束\")\n            return 0\n        }\n        return end - this.start\n    }\n\n    public isValid(isDoing: boolean) {\n        if (!isDoing && this.end == -1) return false\n        return true\n    }\n}\n\nclass Note {\n    public content: string = \"\"\n}\n\nclass StoreModel {\n    @Type(() => Task)\n    public tasks: Task[] = []\n\n    /**\n     * 筛选规则：\n     * 1. 所有未完成的任务（之后要排除非当天的计划任务）\n     * 2. 今天完成的任务\n     */\n    public getTasks(dur: Duration): Task[] {\n        return this.tasks.filter((value) => { return !value.isDone() || dur.isIn(value.doneTime) })\n    }\n\n    public addTask(task: Task) {\n        if (this.containsProject(task.id)) return\n\n        this.tasks.push(task)\n    }\n\n    public removeTask(task: Task): boolean {\n        if (!this.containsProject(task.id)) return false\n\n        let length = this.tasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.tasks[i].id === task.id) {\n                if (i === 0) {\n                    this.tasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.tasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.tasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    private containsProject(id: number): boolean {\n        return this.tasks.find(item => item.id === id) !== undefined\n    }\n\n    public orderTasks() {\n        this.tasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 正在做的放最前\n                if (a.isDoing()) {\n                    return -1\n                } else if (b.isDoing()) {\n                    return 1\n                } else {\n                    // 到时间的放前面\n                    if (a.isDangerous() && !b.isDangerous()) {\n                        return -1\n                    } else if (!a.isDangerous() && b.isDangerous()) {\n                        return 1\n                    } else {\n                        // 然后比较level\n                        if (a.level > b.level) {\n                            return 1\n                        } else if (a.level < b.level) {\n                            return -1\n                        } else {\n                            // 同样 level 比较创建时间\n                            if (a.createTime > b.createTime) {\n                                return -1\n                            } else if (a.createTime < b.createTime) {\n                                return 1\n                            } else {\n                                return 0\n                            }\n                        }\n                    }\n                }\n            }\n        })\n    }\n}\n\n\nexport { Task, Duration, StoreModel, Note }","import { Task, Duration, StoreModel } from '../model/model'\nimport Utils from '../utils/Utils';\nimport stores from '../stores';\nimport 'reflect-metadata'\nimport '../../node_modules/reflect-metadata/Reflect.js'\nimport { plainToClass } from \"class-transformer\";\n\n\nconst STORAGE_KEY = 'DoingList3'\nconst storage = {\n    isDebug: false,\n    fetch: function (): StoreModel {\n        if (this.isDebug) {\n            return this._getMockStoreModel()\n        }\n\n        let result = new StoreModel()\n\n        let storageJson = localStorage.getItem(STORAGE_KEY)\n        if (storageJson != null) {\n            return plainToClass(StoreModel, JSON.parse(storageJson))\n        }\n\n        return result\n    },\n\n    save: function (storeModel: StoreModel) {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(storeModel))\n    },\n\n    _getMockStoreModel(): StoreModel {\n        let result = new StoreModel()\n\n        for (let index = 0; index < 12; index++) {\n            const newLocal = new Task();\n        newLocal.init(\"我的第 \" + index + \" 个任务\")\n            result.addTask(newLocal)\n        }\n\n        return result\n    },\n}\n\nconst model = {\n    storeModel: storage.fetch(),\n\n    save() {\n        storage.save(this.storeModel)\n    },\n\n    setModel(model: StoreModel) {\n        this.storeModel = model\n        this.save()\n    },\n};\n\nexport default model","import { Task } from '../model/model'\n\nconst CurrentTaskKey = \"CurrentTaskKey\"\n\nconst currentTaskStore = {\n    currentTask: undefined as Task|undefined,\n\n    setCurrentTask(task: Task) {\n        this.currentTask = task\n    },\n};\n\nexport {CurrentTaskKey, currentTaskStore}","import { Task } from '../model/model'\n\nconst CurrentDoingTaskKey = \"CurrentDoingTaskKey\"\n\nconst currentDoingTaskStore = {\n    currentDoingTask: undefined as Task|undefined,\n\n    setCurrentDoingTask(task: Task| undefined) {\n        this.currentDoingTask = task\n    },\n};\n\nexport {CurrentDoingTaskKey, currentDoingTaskStore}","import mainmodel from './MainStore';\nimport Store from '@ice/store';\n\nimport { CurrentTaskKey, currentTaskStore } from './CurrentTaskStore';\nimport { CurrentDoingTaskKey, currentDoingTaskStore } from './CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey, currentDayOffsetStore } from './CurrentDayOffsetStore';\n\nconst storeManager = new Store();\n//  *（@@@？todo 使用常量 mainmodel？）* \nstoreManager.registerStore('mainmodel', mainmodel);\nstoreManager.registerStore(CurrentTaskKey, currentTaskStore);\nstoreManager.registerStore(CurrentDoingTaskKey, currentDoingTaskStore);\nstoreManager.registerStore(CurrentDayOffsetKey, currentDayOffsetStore);\n\nexport default storeManager;","\nconst CurrentDayOffsetKey = \"CurrentDayOffsetKey\"\n\nconst currentDayOffsetStore = {\n    currentDayOffset: 0,\n\n    setCurrentDayOffset(offset: number) {\n        this.currentDayOffset = offset\n    },\n};\n\nexport {CurrentDayOffsetKey, currentDayOffsetStore}","import { Duration } from \"../model/model\";\n\nclass DateUtils {\n    private static dayMills: number = 24 * 60 * 60 * 1000\n    private static dayOffset: number = 6\n\n    public static getCurrentDayStamp(hour: number): number {\n        let today = new Date();\n        today.setHours(hour, 0, 0, 0);\n        return today.getTime();\n    }\n\n    // 暂时 offsetHour 只支持 0-24 之间的数\n    public static getOffsetedDayDur(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    //-------------------- 以下业务相关 --------------------\n\n    public static getMyCurrentDayStamp(offsetDay: number): number {\n        let now = new Date().getTime()\n        let todayOffset = DateUtils.getCurrentDayStamp(DateUtils.dayOffset)\n        if (now > todayOffset) {\n            return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay\n        } else {\n            return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay\n        }\n    }\n\n    public static getMyCurrentDayDur(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay), DateUtils.dayOffset)\n    }\n}\n\nexport default DateUtils","class Format {\n    public static formatTimeInMs(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + ':';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return \"[\" + Y + M + D + h + m + s + msString + \"]\";\n    }\n\n    public static formatTimeInMsToFileName(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '_';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '_';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + '_';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + '_';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + '_';\n\n        let msString = \"\"\n        let ms = date.getMilliseconds()\n        if (ms < 10) {\n            msString = '00' + ms\n        } else if (ms < 100) {\n            msString = '0' + ms\n        } else {\n            msString = '' + ms\n        }\n\n        return Y + M + D + h + m + s + msString;\n    }\n\n    public static formatTimeInMinute(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\n\n        return Y + M + D + h + m;\n    }\n\n    public static formatTimeInDay(timeMs: number) {\n        let date = new Date(timeMs);//如果date为13位不需要乘1000\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\n        return Y + M + D;\n    }\n\n    public static formatDuration(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            天: Math.floor(timeMs / 86400000),\n            小时: Math.floor(timeMs / 3600000) % 24,\n            分: Math.floor(timeMs / 60000) % 60,\n            秒: Math.floor(timeMs / 1000) % 60,\n            //   毫秒: Math.floor(timeMs) % 1000\n        };\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n\n    public static formatDuration2(timeMs: number): string {\n        if (timeMs < 0) timeMs = -timeMs;\n\n        const time = {\n            d: Math.floor(timeMs / 86400000),\n            h: Math.floor(timeMs / 3600000) % 24,\n            m: Math.floor(timeMs / 60000) % 60,\n            s: Math.floor(timeMs / 1000) % 60,\n        };\n\n        if (time.d > 0) {\n            time.m = 0\n            time.s = 0\n        }\n        if (time.h > 0) {\n            time.s = 0\n        }\n\n        return Object.entries(time)\n            .filter(val => val[1] !== 0)\n            .map(([key, val]) => `${val}${key}`)\n            .join('');\n    };\n}\n\nexport default Format\n\n","import { Task } from '../model/model'\nimport Format from '../utils/Format'\nimport Utils from '../utils/Utils'\n\nclass TaskInfoFormat {\n\n    public static getDoingStatusTips(task: Task): string {\n        if (task.isDoing()) {\n            return \"Doing🔴\"\n            // ⛑🏃‍♀️🧠 🏄‍♂️ 🌟 🔴\n        } else {\n            return \"\"\n        }\n    }\n\n    public static getConsumed(task: Task): string {\n        let time = Format.formatDuration2(task.getAllDuration());\n        if (Utils.isStringEmpty(time)) {\n            return \"\"\n        }\n        return `进行${time}(${task.doingDurs.length}次) `\n    }\n\n    public static getDeadline(task: Task): string {\n        const pendingStatus = TaskInfoFormat.getPendingStatus(task)\n        if (Utils.isStringEmpty(pendingStatus)) {\n            return TaskInfoFormat.getDeadlineStatus(task)\n        } else {\n            return pendingStatus\n        }\n    }\n\n    private static getDeadlineStatus(task: Task): string {\n        let deadline = task.getActualDeadline()\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Dead已超期❗ `\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Dead剩余${time} `\n    }\n\n    // todo 合并重复函数\n    private static getPendingStatus(task: Task): string {\n        let deadline = task.pendingDeadline\n        if (deadline <= 0) {\n            return \"\"\n        }\n        const leftTime = deadline - Utils.getTimestamp();\n        if (leftTime <= 1000) {\n            return `Pend已超期❗ `\n        }\n        let time = Format.formatDuration2(leftTime);\n        return `Pend剩余${time} `\n    }\n\n    public static getConsumeExpected(task: Task): string {\n        if (task.getActualExpectConsume() <= 0) {\n            return \"\"\n        }\n\n        let left = task.getLeftExpectConsumeTime()\n        if (left <= 0) {\n            return `多用${Format.formatDuration2(-left)}`\n        } else {\n            return `还要${Format.formatDuration2(left)}`\n        }\n    }\n}\n\nexport default TaskInfoFormat","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, Row, Col, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\n// 这样居然真的行\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport stores from '../stores';\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { Task, Note } from '../model/model'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport 'antd/dist/antd.css';\nimport { plainToClass } from \"class-transformer\";\n\nconst Container = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n`\n\nconst Container2 = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  overflow:auto;\n  /* height: 800px; */\n  height: 85vh;\n  margin-top:10px;\n`\n\nconst InputGroup = styled(Input.Group)`\nmargin: 1%;\n`\nconst ButtonGroup = styled(Button.Group)`\nmargin: 1%;\n`\n\nconst TaskListContainer: React.FC = () => {\n  const { storeModel, save, setModel } = stores.useStore('mainmodel') as { storeModel: StoreModel, save: () => void, setModel: (storeModel: StoreModel) => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n  const [title, setTitle] = useState(\"\");\n  const [isNeedExceptTime, setNeedExceptTime] = useState(true);\n  const [expectTime, setExpectTime] = useState(2);\n\n  // React.useEffect(() => {\n  //   console.log(\"TaskListContainer useEffect\")\n  // },[])\n\n  function onAddNote(event: any) {\n    event.preventDefault();\n\n    if (Utils.isStringEmpty(title)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    const newTask = new Task()\n    newTask.init(title)\n\n    if (isNeedExceptTime) {\n      newTask.expectConsumes.push(expectTime * 3600 * 1000) // 单位小时，转换\n    } else {\n      newTask.expectConsumes.push(-1) // 表示不设置时间\n    }\n\n    storeModel.addTask(newTask)\n    storeModel.orderTasks()\n    save()\n\n    setTitle(\"\")\n  }\n\n  function changeOffsetDay(isAdd: boolean) {\n    if (isAdd) {\n      setCurrentDayOffset(currentDayOffset + 1)\n    } else {\n      setCurrentDayOffset(currentDayOffset - 1)\n    }\n  }\n\n  function download() {\n    Utils.downloadFile(`DoingList_${Format.formatTimeInMsToFileName(Utils.getTimestamp())}.dl`, JSON.stringify(storeModel))\n  }\n\n  function upload(e: any) {\n    let file = e.target.files[0];\n    console.log(file)\n\n    let reader = new FileReader();\n    reader.onload = function (this) {\n      let uploadContent = this.result\n      if (typeof uploadContent === 'string') {\n        Modal.confirm({\n          title: '确定要导入嘛？',\n          content: `导入会覆盖当前所有任务`,\n          onOk() {\n            Modal.confirm({\n              title: '是否需要先下载当前任务？',\n              content: ``,\n              onOk() {\n                download()\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              },\n              onCancel() {\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              }\n            });\n          },\n        })\n      } else {\n        message.error(\"导入文件有问题，导入失败\")\n      }\n    }\n    //读取文件内容\n    reader.readAsText(file);\n  }\n\n  function getOffsetString() {\n    let base = \"\" + currentDayOffset\n    if (currentDayOffset > 0) {\n      base = \"+\" + base\n    }\n    return base\n  }\n\n  function getAllTaskStatus(): string {\n    let notDoneTasks = storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset)).filter((task) => { return !task.isDone() })\n\n    if (notDoneTasks.length === 0) {\n      return \"\"\n    }\n\n    let consumeFormat = \"\"\n    let consumes: number = notDoneTasks.map((task) => {\n      let left = task.getLeftExpectConsumeTime()\n      if (left < 0) return 0\n      return left\n    }).reduce((a, b) => a + b)\n\n    // console.log(\"getAllTaskStatus\" + consumes)\n    if (consumes > 0) {\n      consumeFormat = `，总剩余预估需要花费${Format.formatDuration(consumes)}`\n    }\n\n    return `共${notDoneTasks.length}个任务未完成${consumeFormat}`\n  }\n\n  return (\n    <Container>\n\n      {/* todo 这个组件可以单独抽出去 */}\n      <ButtonGroup>\n        <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(false)}>←</Button>\n\n        {/* 这个取当前时间的操作简直无敌... 蠢 */}\n        {/* <DatePicker defaultValue={moment(moment().format(dateFormat), dateFormat)} format={dateFormat} /> */}\n\n        <span style={{ backgroundColor: \"#ffffff\", padding: 4 }} >\n          {Format.formatTimeInDay(DateUtils.getMyCurrentDayStamp(currentDayOffset))}({getOffsetString()})\n        </span>\n\n        <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(true)}>→</Button>\n        <span style={{ paddingLeft: 10 }} ></span>\n        <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导出</Button>\n        <input type=\"file\" id=\"upload-file\" multiple onChange={(event) => upload(event)} />\n        {/* <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导入</Button> */}\n      </ButtonGroup>\n\n      <Input.Group compact style={{ width: '96%', margin: '2%', backgroundColor: \"#ffffff\" }}>\n        <Input style={{ width: '60%' }} placeholder=\"输入任务，回车添加\" value={title} onChange={(event) => setTitle(event.target.value)} onPressEnter={onAddNote} />\n        <Switch checkedChildren=\"估时\" unCheckedChildren=\"不估时\" defaultChecked={isNeedExceptTime} onChange={(event) => setNeedExceptTime(event)} />\n        <Input style={{ width: '20%' }} defaultValue={expectTime} placeholder=\"花费时间\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onPressEnter={onAddNote} />\n      </Input.Group>\n\n\n\n      <span style={{ backgroundColor: \"#ffffff\", padding: 4, margin: '2%' }} >\n        {getAllTaskStatus()}\n      </span>\n\n      <NoteList />\n    </Container>\n  );\n}\n\n\nconst NoteItem = styled.div`\n:hover{\n\t/* background-color:#b4e7fc; */\n  background-color: ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#ffffff'\n    }\n  }\n  };\nopacity : ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.isDone) {\n      return 0.15\n    } else {\n      return 1\n    }\n  }\n  };;\n`\nconst NoteList: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task) => void }\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n\n  useEffect(() => {\n    // console.log(\"NoteList useEffect\")\n\n    if (currentDoingTask === undefined) {\n      let doingTasks = storeModel.tasks.filter((value) => { return value.isDoing() })\n\n      if (doingTasks.length === 0) {\n        return\n      }\n\n      if (doingTasks.length > 1) {\n        console.error(`有 ${doingTasks.length} 个任务在运行中，自动关闭`)\n\n        for (let i = 1; i < doingTasks.length; i++) {\n          doingTasks[i].stop()\n        }\n      }\n\n      setCurrentDoingTask(doingTasks[0])\n    }\n  });\n\n  function onChooseNote(event: any, note: Task) {\n    event.preventDefault()\n    setCurrentTask(note)\n  }\n\n  const onClickMenu = (param: ClickParam, task: Task) => {\n    task.level = Number(param.key)\n\n    storeModel.orderTasks()\n    save()\n\n    param.domEvent.preventDefault()\n\n    // 怎么阻止对 parent 的点击事件\n    // param.domEvent.stopPropagation()\n  };\n\n  function getMenu(task: Task): React.ReactElement {\n    return (\n      <Menu onClick={(param) => onClickMenu(param, task)}>\n        <Menu.Item key=\"1\">优先级 1</Menu.Item>\n        <Menu.Item key=\"2\">优先级 2</Menu.Item>\n        <Menu.Item key=\"3\">优先级 3</Menu.Item>\n        <Menu.Item key=\"4\">优先级 4</Menu.Item>\n        <Menu.Item key=\"5\">优先级 5</Menu.Item>\n      </Menu>\n    )\n  }\n  \n  function startTask(event: any, task: Task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n      return\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop()\n    }\n\n    task.start()\n    setCurrentDoingTask(task)\n    storeModel.orderTasks()\n    save()\n  }\n\n\n  function formartLevel(level: number): string {\n    switch (level) {\n      case 1:\n        return \"🌟\"\n      case 2:\n        return \"🎏\"\n      case 3:\n        return \"3️⃣\"\n      case 4:\n        return \"4️\"\n      case 5:\n        return \"5️\"\n      default:\n        return \"\"\n    }\n\n    // switch (level) {\n    //   case 1:\n    //     return \"🥇\"\n    //   case 2:\n    //     return \"🥈\"\n    //   case 3:\n    //     return \"🥉\"\n    //   case 4:\n    //     return \"4️⃣\"\n    //   case 5:\n    //     return \"5️\"\n    //   default:\n    //     return \"\"\n    // }\n  }\n\n  function getShowTips(task: Task): string {\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  return (\n    <Container2>\n      <List\n        size=\"small\"\n        style={{ backgroundColor: 'white', margin: \"1%\" }}\n        bordered\n        dataSource={storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset))}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => onChooseNote(e, task)} isDone={task.isDone()}>\n\n            <Row>\n              <Col flex=\"1 1 auto\">\n                <NoteItemInput key={task.id} task={task} />\n              </Col>\n              <Col flex=\"0 1 auto\">\n\n                {getShowTips(task)}\n                <Dropdown overlay={getMenu(task)}>\n                  <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                    {formartLevel(task.level)} <DownOutlined />\n                  </a>\n                </Dropdown>\n\n                <Button  onClick={(e) => startTask(e, task)}>Start</Button>\n\n              </Col>\n            </Row>\n\n          </NoteItem>\n        )}\n      />\n    </Container2>\n  );\n}\n\ninterface NoteItemInputProps {\n  task: Task;\n}\n\nconst NoteItemInput: React.FC<NoteItemInputProps> = (props) => {\n  const [content, setContent] = useState(props.task.title)\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n\n  function saveTaskTitle(event: any) {\n    props.task.title = content\n    save()\n  }\n\n  return (\n    <Input style={{ background: \"#ffffff70\", fontWeight: \"bold\" }} value={content} onChange={(e) => setContent(e.target.value)} onBlur={saveTaskTitle} />\n  );\n}\n\nexport default TaskListContainer;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n  const [expectTime, setExpectTime] = useState(-1);\n  const [deadline, setDeadlineUI] = useState<any>(null);\n\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState<any>(null);\n\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      // todo 这部分逻辑抽出去\n      const expectTime = currentTask.getActualExpectConsume()\n      if (expectTime == -1) {\n        setExpectTime(expectTime)\n      } else {\n        setExpectTime(expectTime / (3600 * 1000))\n      }\n\n      setPendingUI(currentTask.isPending())\n      setPendingReason(currentTask.pendingReason)\n      setPendingTimeUI(getPendingDeadlineTime(currentTask))\n\n      setDeadlineUI(getDeadlineTime(currentTask))\n\n      storeModel.orderTasks()\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.orderTasks()\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    setDeadlineUI(getDeadlineTime(currentTask))\n    save()\n  }\n\n  function getDeadlineTime(task: Task): any {\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task)  + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000)\n    }\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onChoosePendingDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`)\n      return\n    }\n\n    const pendingLine = value.valueOf()\n    const deadline = task.getActualDeadline()\n    if ( deadline> 0 && pendingLine > deadline) {\n      message.error(`Pending时间(${Format.formatTimeInMinute(pendingLine)})晚于Deadline(${Format.formatTimeInMinute(deadline)})，请重新设置`)\n      return\n    }\n\n    task.pendingDeadline = pendingLine\n    setPendingTimeUI(getPendingDeadlineTime(task))\n    save()\n  }\n\n  function getPendingDeadlineTime(task: Task): any {\n    const deadline = task.pendingDeadline\n\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    task.pendingReason = pendingReason\n    save()\n  }\n\n  function setPending(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1\n    }\n    setPendingUI(pendingStatus)\n    save()\n  }\n\n  /* ---------------------------------------------------------- */\n\n  return (\n    <Container>\n      {/* todo 没有 currentTask 就不展示 */}\n\n      {/* 不加这个 div 会换行 */}\n      <Div>\n        <ButtonGroup>\n          {/* 点击整行就是查看且开始，view是只查看不开始。暂时用不着吧 */}\n          {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n          <Button onClick={(e) => deleteTask(e)}>D</Button>\n          {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n          <Button onClick={(e) => doneTask(e)}>Done</Button>\n\n        </ButtonGroup>\n\n        <DatePicker showTime value={deadline} onOk={value => onChooseDeadline(value)} />\n        {getShowTips()}\n\n        <Input style={{ width: 'auto' }} value={expectTime} placeholder=\"花费时间 回车保存\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onPressEnter={changeExceptTime} />\n      </Div>\n\n      <Div>\n        <Switch checkedChildren=\"Pending\" unCheckedChildren=\"No Pending\" checked={isPending} onChange={(event) => setPending(event)} />\n\n        <DatePicker showTime value={pendingTime} onOk={value => onChoosePendingDeadline(value)} />\n\n        <Input style={{ width: 'auto' }} value={pendingReason} prefix=\"原因:\" placeholder=\"自动保存\" onChange={(event) => setPendingReason(event.target.value)} onBlur={savePendingStatus} />\n      </Div>\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;","import 'reflect-metadata'\nimport React,{useState} from 'react';\nimport styled from 'styled-components';\nimport TaskListContainer from './TaskListContainer'\nimport ContentLayout from './ContentLayout'\n\n\nconst AppContainer = styled.div`\n  display: grid;\n  min-height: 100vh;\n  height: 100%;\n  width: 100%;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 100%;\n`\n\nconst App: React.FC = () => {\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  return (\n    <AppContainer>\n      <TaskListContainer/>\n      <ContentLayout/>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}