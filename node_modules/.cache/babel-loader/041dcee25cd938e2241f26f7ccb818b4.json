{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TodayWorkConatiner.tsx\";\nimport 'reflect-metadata';\nimport React from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List } from 'antd';\nimport DateUtils from '../utils/DateUtils';\nconst Div = styled.div`\nheight: 45vh;\noverflow: scroll;\nwhite-space: pre-wrap;\npadding: 5px;\nbackground-color:rgba(194, 226, 255, 0.795);\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`;\n\nconst TodayWorkConatiner = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel');\n\n  function getTimelines() {\n    return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(0)).sort((a, b) => {\n      if (a.lastStartTime() > b.lastStartTime()) {\n        return -1;\n      } else if (a.lastStartTime() < b.lastStartTime()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }).map(task => {\n      return `${task.title} `;\n    }).join(\"\\n\");\n  }\n\n  function getCurrentDayDoingTasks() {\n    return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(0)).sort((a, b) => {\n      if (a.lastStartTime() > b.lastStartTime()) {\n        return -1;\n      } else if (a.lastStartTime() < b.lastStartTime()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  } //     {getTimelines()}\n\n\n  return /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    size: \"small\",\n    style: {\n      backgroundColor: 'white',\n      margin: \"1%\"\n    },\n    bordered: true,\n    dataSource: getCurrentDayDoingTasks(),\n    renderItem: task => /*#__PURE__*/React.createElement(\"div\", {\n      key: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TodayWorkConatiner;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TodayWorkConatiner.tsx"],"names":["React","styled","stores","List","DateUtils","Div","div","TodayWorkConatiner","storeModel","useStore","getTimelines","getCurrentDayDoingTasks","getMyCurrentDayDur","sort","a","b","lastStartTime","map","task","title","join","backgroundColor","margin","id"],"mappings":";AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AAIA,MAAMC,GAAG,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;;;;;;CAAvB;;AAkBA,MAAMC,kBAA4B,GAAG,MAAM;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,MAAM,CAACO,QAAP,CAAgB,WAAhB,CAAvB;;AAEA,WAASC,YAAT,GAAgC;AAC9B,WAAOF,UAAU,CAACG,uBAAX,CAAmCP,SAAS,CAACQ,kBAAV,CAA6B,CAA7B,CAAnC,EACJC,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,UAAID,CAAC,CAACE,aAAF,KAAoBD,CAAC,CAACC,aAAF,EAAxB,EAA2C;AACzC,eAAO,CAAC,CAAR;AACD,OAFD,MAEO,IAAIF,CAAC,CAACE,aAAF,KAAoBD,CAAC,CAACC,aAAF,EAAxB,EAA2C;AAChD,eAAO,CAAP;AACD,OAFM,MAEA;AACL,eAAO,CAAP;AACD;AACF,KATI,EAWJC,GAXI,CAWCC,IAAD,IAAU;AACb,aAAQ,GAAEA,IAAI,CAACC,KAAM,GAArB;AACD,KAbI,EAaFC,IAbE,CAaG,IAbH,CAAP;AAcD;;AAED,WAAST,uBAAT,GAA2C;AACzC,WAAOH,UAAU,CAACG,uBAAX,CAAmCP,SAAS,CAACQ,kBAAV,CAA6B,CAA7B,CAAnC,EACJC,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,UAAID,CAAC,CAACE,aAAF,KAAoBD,CAAC,CAACC,aAAF,EAAxB,EAA2C;AACzC,eAAO,CAAC,CAAR;AACD,OAFD,MAEO,IAAIF,CAAC,CAACE,aAAF,KAAoBD,CAAC,CAACC,aAAF,EAAxB,EAA2C;AAChD,eAAO,CAAP;AACD,OAFM,MAEA;AACL,eAAO,CAAP;AACD;AACF,KATI,CAAP;AAWD,GAhCwC,CAkCzC;;;AACA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAE;AAAEK,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,MAAM,EAAE;AAApC,KAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,UAAU,EAAEX,uBAAuB,EAJrC;AAKE,IAAA,UAAU,EAAEO,IAAI,iBACd;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACK,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAiBD,CApDD;;AAsDA,eAAehB,kBAAf","sourcesContent":["import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List } from 'antd';\nimport { StoreModel, Task, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\n\nconst Div = styled.div`\nheight: 45vh;\noverflow: scroll;\nwhite-space: pre-wrap;\npadding: 5px;\nbackground-color:rgba(194, 226, 255, 0.795);\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst TodayWorkConatiner: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n\n  function getTimelines(): string {\n    return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(0))\n      .sort((a, b) => {\n        if (a.lastStartTime() > b.lastStartTime()) {\n          return -1\n        } else if (a.lastStartTime() < b.lastStartTime()) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n      .map((task) => {\n        return `${task.title} `\n      }).join(\"\\n\")\n  }\n\n  function getCurrentDayDoingTasks(): Task[] {\n    return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(0))\n      .sort((a, b) => {\n        if (a.lastStartTime() > b.lastStartTime()) {\n          return -1\n        } else if (a.lastStartTime() < b.lastStartTime()) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n  }\n\n  //     {getTimelines()}\n  return (\n    <Div>\n      {/* <div style={{ fontWeight: \"bold\" }}>【最近任务】</div> */}\n  \n      <List\n        size=\"small\"\n        style={{ backgroundColor: 'white', margin: \"1%\" }}\n        bordered\n        dataSource={getCurrentDayDoingTasks()}\n        renderItem={task => (\n          <div key={task.id} >\n            {}\n          </div>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TodayWorkConatiner;\n"]},"metadata":{},"sourceType":"module"}