{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import'reflect-metadata';import React from'react';import styled from'styled-components';import stores from'../stores';import DateUtils from'../utils/DateUtils';import Format from'../utils/Format';var Div=styled.div(_templateObject());var TimeLineLayout=function TimeLineLayout(){var _ref=stores.useStore('mainmodel'),storeModel=_ref.storeModel;// React.useEffect(() => {\n//   console.log(\"app useEffect\")\n// },[])\nfunction getTimelines(){return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0)).flatMap(function(task){return task.note.timeLines;}).sort(function(a,b){if(a.timeStamp>b.timeStamp){return-1;}else if(a.timeStamp<b.timeStamp){return 1;}else{return 0;}}).map(function(timeline){if(timeline.isDivder){return\"\";}else{return\"\".concat(Format.formatTimeInSecond(timeline.timeStamp),\" \").concat(timeline.content,\" \\n\");}}).join(\"\");}return/*#__PURE__*/React.createElement(Div,{style:{overflow:\"scroll\",whiteSpace:\"pre-wrap\",margin:\"5px\"}},getTimelines());};export default TimeLineLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TimeLineLayout.tsx"],"names":["React","styled","stores","DateUtils","Format","Div","div","TimeLineLayout","useStore","storeModel","getTimelines","getTasks","getMyCurrentDayDur","flatMap","task","note","timeLines","sort","a","b","timeStamp","map","timeline","isDivder","formatTimeInSecond","content","join","overflow","whiteSpace","margin"],"mappings":"yVAAA,MAAO,kBAAP,CACA,MAAOA,CAAAA,KAAP,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CAGA,GAAMC,CAAAA,GAAG,CAAGJ,MAAM,CAACK,GAAV,mBAAT,CAIA,GAAMC,CAAAA,cAAwB,CAAG,QAA3BA,CAAAA,cAA2B,EAAM,UACdL,MAAM,CAACM,QAAP,CAAgB,WAAhB,CADc,CAC7BC,UAD6B,MAC7BA,UAD6B,CAGrC;AACA;AACA;AAEA,QAASC,CAAAA,YAAT,EAAgC,CAC9B,MAAOD,CAAAA,UAAU,CAACE,QAAX,CAAoBR,SAAS,CAACS,kBAAV,CAA6B,CAA7B,CAApB,EACJC,OADI,CACI,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,CAAUC,SAApB,EADJ,EACmCC,IADnC,CACwC,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACrD,GAAID,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAApB,CAA+B,CAC7B,MAAO,CAAC,CAAR,CACD,CAFD,IAEO,IAAIF,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAApB,CAA+B,CACpC,MAAO,EAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CATI,EAWJC,GAXI,CAWA,SAACC,QAAD,CAAc,CACjB,GAAIA,QAAQ,CAACC,QAAb,CAAuB,CACrB,MAAO,EAAP,CACD,CAFD,IAEO,CACL,gBAAUnB,MAAM,CAACoB,kBAAP,CAA0BF,QAAQ,CAACF,SAAnC,CAAV,aAA2DE,QAAQ,CAACG,OAApE,QACD,CACF,CAjBI,EAiBFC,IAjBE,CAiBG,EAjBH,CAAP,CAkBD,CAED,mBACE,oBAAC,GAAD,EAAK,KAAK,CAAE,CAAEC,QAAQ,CAAE,QAAZ,CAAsBC,UAAU,CAAE,UAAlC,CAA8CC,MAAM,CAAE,KAAtD,CAAZ,EACGnB,YAAY,EADf,CADF,CAKD,CAjCD,CAmCA,cAAeH,CAAAA,cAAf","sourcesContent":["import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { StoreModel, Duration, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\n\nconst Div = styled.div`\n\n`\n\nconst TimeLineLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  function getTimelines(): string {\n    return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n      .flatMap((task) => task.note.timeLines).sort((a, b) => {\n        if (a.timeStamp > b.timeStamp) {\n          return -1\n        } else if (a.timeStamp < b.timeStamp) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n      .map((timeline) => {\n        if (timeline.isDivder) {\n          return \"\"\n        } else {\n          return `${Format.formatTimeInSecond(timeline.timeStamp)} ${timeline.content} \\n`\n        }\n      }).join(\"\")\n  }\n\n  return (\n    <Div style={{ overflow: \"scroll\", whiteSpace: \"pre-wrap\", margin: \"5px\" }}>\n      {getTimelines()}\n    </Div>\n  );\n}\n\nexport default TimeLineLayout;\n"]},"metadata":{},"sourceType":"module"}