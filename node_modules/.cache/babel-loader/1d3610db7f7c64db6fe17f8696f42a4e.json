{"ast":null,"code":"import { Duration } from \"../model/model\";\n\nclass DateUtils {\n  // 获得今天某个小时的时间戳\n  static getCurrentDayStamp(hour) {\n    let today = new Date();\n    today.setHours(hour, 0, 0, 0);\n    return today.getTime();\n  } // 获得某天偏移某个小时后的dur\n  // 暂时 offsetHour 只支持 0-24 之间的数\n\n\n  static getOffsetedDayDur(dayZeroTime, offsetHour) {\n    let day = new Date(dayZeroTime);\n    day.setHours(offsetHour, 0, 0, 0);\n    let result = new Duration();\n    result.init(day.getTime());\n    result.end = day.getTime() + DateUtils.dayMills;\n    return result;\n  } // 获得某个时间戳那天某个小时的时间戳\n\n\n  static getSomeDayStamp(dayZeroTime, offsetHour) {\n    let day = new Date(dayZeroTime);\n    day.setHours(offsetHour, 0, 0, 0);\n    let result = new Duration();\n    result.init(day.getTime());\n    result.end = day.getTime() + DateUtils.dayMills;\n    return result;\n  } //-------------------- 以下业务相关 --------------------\n\n  /**\n   * 获得今天（是否当天按6点判断） offset 某些天的 0 点时间戳\n   */\n\n\n  static getMyCurrentDayStamp(offsetDay) {\n    let now = new Date().getTime(); // 今天6点\n\n    let todayOffset = DateUtils.getCurrentDayStamp(DateUtils.dayOffset);\n\n    if (now > todayOffset) {\n      return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay;\n    } else {\n      return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay;\n    }\n  }\n  /**\n   * 获得今天（是否当天按6点判断） offset 某些天的 dur\n   */\n\n\n  static getMyCurrentDayDur(offsetDay) {\n    return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay), DateUtils.dayOffset);\n  }\n\n}\n\nDateUtils.dayMills = 24 * 60 * 60 * 1000;\nDateUtils.dayOffset = 6;\nexport default DateUtils;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/utils/DateUtils.ts"],"names":["Duration","DateUtils","getCurrentDayStamp","hour","today","Date","setHours","getTime","getOffsetedDayDur","dayZeroTime","offsetHour","day","result","init","end","dayMills","getSomeDayStamp","getMyCurrentDayStamp","offsetDay","now","todayOffset","dayOffset","getMyCurrentDayDur"],"mappings":"AAAA,SAASA,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,SAAN,CAAgB;AAIZ;AACA,SAAcC,kBAAd,CAAiCC,IAAjC,EAAuD;AACnD,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAD,IAAAA,KAAK,CAACE,QAAN,CAAeH,IAAf,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACA,WAAOC,KAAK,CAACG,OAAN,EAAP;AACH,GATW,CAWZ;AACA;;;AACA,SAAcC,iBAAd,CAAgCC,WAAhC,EAAqDC,UAArD,EAAmF;AAC/E,QAAIC,GAAG,GAAG,IAAIN,IAAJ,CAASI,WAAT,CAAV;AACAE,IAAAA,GAAG,CAACL,QAAJ,CAAaI,UAAb,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AAEA,QAAIE,MAAM,GAAG,IAAIZ,QAAJ,EAAb;AACAY,IAAAA,MAAM,CAACC,IAAP,CAAYF,GAAG,CAACJ,OAAJ,EAAZ;AACAK,IAAAA,MAAM,CAACE,GAAP,GAAaH,GAAG,CAACJ,OAAJ,KAAgBN,SAAS,CAACc,QAAvC;AACA,WAAOH,MAAP;AACH,GArBW,CAuBZ;;;AACA,SAAcI,eAAd,CAA8BP,WAA9B,EAAmDC,UAAnD,EAAiF;AAC7E,QAAIC,GAAG,GAAG,IAAIN,IAAJ,CAASI,WAAT,CAAV;AACAE,IAAAA,GAAG,CAACL,QAAJ,CAAaI,UAAb,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AAEA,QAAIE,MAAM,GAAG,IAAIZ,QAAJ,EAAb;AACAY,IAAAA,MAAM,CAACC,IAAP,CAAYF,GAAG,CAACJ,OAAJ,EAAZ;AACAK,IAAAA,MAAM,CAACE,GAAP,GAAaH,GAAG,CAACJ,OAAJ,KAAgBN,SAAS,CAACc,QAAvC;AACA,WAAOH,MAAP;AACH,GAhCW,CAkCZ;;AAEA;;;;;AAGA,SAAcK,oBAAd,CAAmCC,SAAnC,EAA8D;AAC1D,QAAIC,GAAG,GAAG,IAAId,IAAJ,GAAWE,OAAX,EAAV,CAD0D,CAE1D;;AACA,QAAIa,WAAW,GAAGnB,SAAS,CAACC,kBAAV,CAA6BD,SAAS,CAACoB,SAAvC,CAAlB;;AAEA,QAAIF,GAAG,GAAGC,WAAV,EAAuB;AACnB,aAAOnB,SAAS,CAACC,kBAAV,CAA6B,CAA7B,IAAkCD,SAAS,CAACc,QAAV,GAAqBG,SAA9D;AACH,KAFD,MAEO;AACH,aAAOjB,SAAS,CAACC,kBAAV,CAA6B,CAA7B,IAAkCD,SAAS,CAACc,QAA5C,GAAuDd,SAAS,CAACc,QAAV,GAAqBG,SAAnF;AACH;AACJ;AAED;;;;;AAGA,SAAcI,kBAAd,CAAiCJ,SAAjC,EAA8D;AAC1D,WAAOjB,SAAS,CAACO,iBAAV,CAA4BP,SAAS,CAACgB,oBAAV,CAA+BC,SAA/B,CAA5B,EAAuEjB,SAAS,CAACoB,SAAjF,CAAP;AACH;;AAxDW;;AAAVpB,S,CACac,Q,GAAmB,KAAK,EAAL,GAAU,EAAV,GAAe,I;AAD/Cd,S,CAEaoB,S,GAAoB,C;AAyDvC,eAAepB,SAAf","sourcesContent":["import { Duration } from \"../model/model\";\n\nclass DateUtils {\n    private static dayMills: number = 24 * 60 * 60 * 1000\n    private static dayOffset: number = 6\n\n    // 获得今天某个小时的时间戳\n    public static getCurrentDayStamp(hour: number): number {\n        let today = new Date();\n        today.setHours(hour, 0, 0, 0);\n        return today.getTime();\n    }\n\n    // 获得某天偏移某个小时后的dur\n    // 暂时 offsetHour 只支持 0-24 之间的数\n    public static getOffsetedDayDur(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    // 获得某个时间戳那天某个小时的时间戳\n    public static getSomeDayStamp(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    //-------------------- 以下业务相关 --------------------\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 0 点时间戳\n     */\n    public static getMyCurrentDayStamp(offsetDay: number): number {\n        let now = new Date().getTime()\n        // 今天6点\n        let todayOffset = DateUtils.getCurrentDayStamp(DateUtils.dayOffset)\n\n        if (now > todayOffset) {\n            return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay\n        } else {\n            return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay\n        }\n    }\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 dur\n     */\n    public static getMyCurrentDayDur(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay), DateUtils.dayOffset)\n    }\n}\n\nexport default DateUtils"]},"metadata":{},"sourceType":"module"}