{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Button, Modal } from 'antd';\nimport stores from '../stores';\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`;\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`;\n\nconst ContentLayout = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel');\n  const {\n    currentTask\n  } = stores.useStore(CurrentTaskKey);\n  const {\n    save\n  } = stores.useStore('mainmodel');\n  const [content, setContent] = useState(\"\");\n  /* ---------------------------初始化------------------------------- */\n  // 渲染当前note\n\n  const [lastTask, setLastTask] = useState(undefined);\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return;\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask);\n      setContent(currentTask.note.content);\n    }\n  });\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event) {\n    event.preventDefault();\n    saveToLocal(event, false);\n  }\n\n  function saveToLocal(event, isManual) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return;\n    currentTask.note.content = content;\n    save();\n    if (isManual) message.info(\"已保存\");\n  }\n  /* ---------------------------------------------------------- */\n\n\n  function deleteTask(event) {\n    if (currentTask === undefined) return;\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\");\n          save();\n        } else {\n          message.error(\"删除任务失败\");\n        }\n      }\n\n    });\n  }\n  /* ---------------------------------------------------------- */\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: e => deleteTask(e, task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: e => doneTask(e, task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: e => startTask(e, task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(Dropdown, {\n    overlay: getMenu(task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      paddingLeft: 5\n    },\n    className: \"ant-dropdown-link\",\n    onClick: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, formartLevel(task.level), \" \", /*#__PURE__*/React.createElement(DownOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 46\n    }\n  })))), /*#__PURE__*/React.createElement(Editor, {\n    placeholder: \"\\u4EFB\\u52A1\\u65E5\\u5FD7\\uFF08\\u81EA\\u52A8\\u4FDD\\u5B58\\uFF09\",\n    value: content,\n    onChange: event => setContent(event.target.value),\n    onBlur: e => onBlur(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ContentLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx"],"names":["React","useState","useEffect","styled","Input","message","Button","Modal","stores","CurrentTaskKey","Container","div","Editor","TextArea","ButtonGroup","Group","ContentLayout","storeModel","useStore","currentTask","save","content","setContent","lastTask","setLastTask","undefined","isSameTask","note","onBlur","event","preventDefault","saveToLocal","isManual","info","deleteTask","confirm","title","onOk","removeTask","success","error","e","task","doneTask","startTask","getMenu","paddingLeft","formartLevel","level","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Button, Modal } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n    \n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  /* ---------------------------------------------------------- */\n\n  return (\n    <Container>\n      <ButtonGroup>\n              {/* 点击整行就是查看且开始，view是只查看不开始。暂时用不着吧 */}\n              {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n              <Button size=\"small\" onClick={(e) => deleteTask(e, task)}>D</Button>\n              {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n              <Button size=\"small\" onClick={(e) => doneTask(e, task)}>Done</Button>\n              <Button size=\"small\" onClick={(e) => startTask(e, task)}>Start</Button>\n\n              <Dropdown  overlay={getMenu(task)}>\n                <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                  {formartLevel(task.level)} <DownOutlined />\n                </a>\n              </Dropdown>\n              \n            </ButtonGroup>\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;"]},"metadata":{},"sourceType":"module"}