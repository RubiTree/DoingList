{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport TaskInfoFormat from '../utils/TaskInfoFormat';\nimport Format from '../utils/Format';\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport moment from 'moment';\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\nconst Div = styled.div`\n`;\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`;\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`;\n\nconst ContentLayout = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel');\n  const {\n    currentTask\n  } = stores.useStore(CurrentTaskKey);\n  const {\n    save\n  } = stores.useStore('mainmodel');\n  const [content, setContent] = useState(\"\");\n  const [expectTime, setExpectTime] = useState(-1);\n  const [isPending, setPending] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"false\"); // toolsbar\n\n  const {\n    currentDoingTask,\n    setCurrentDoingTask\n  } = stores.useStore(CurrentDoingTaskKey);\n  /* ---------------------------初始化------------------------------- */\n  // 渲染当前note\n\n  const [lastTask, setLastTask] = useState(undefined);\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return;\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask);\n      setContent(currentTask.note.content); // todo 这部分逻辑抽出去\n\n      const expectTime = currentTask.getActualExpectConsume();\n\n      if (expectTime == -1) {\n        setExpectTime(expectTime);\n      } else {\n        setExpectTime(expectTime / (3600 * 1000));\n      }\n    }\n  });\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event) {\n    event.preventDefault();\n    saveToLocal(event, false);\n  }\n\n  function saveToLocal(event, isManual) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return;\n    currentTask.note.content = content;\n    save();\n    if (isManual) message.info(\"已保存\");\n  }\n  /* ------------------------------toolsbar---------------------------- */\n\n\n  function deleteTask(event) {\n    if (currentTask === undefined) return;\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\");\n          save();\n        } else {\n          message.error(\"删除任务失败\");\n        }\n      }\n\n    });\n  }\n\n  function doneTask(event) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`);\n      return;\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n\n        onOk() {\n          _realDone(task);\n        }\n\n      });\n      return;\n    }\n\n    task.stop();\n    setCurrentDoingTask(undefined);\n\n    _realDone(task);\n  }\n\n  function _realDone(task) {\n    task.done();\n    storeModel.orderTasks();\n    message.success(\"任务已完成\");\n    save();\n  }\n\n  function onChooseDeadline(value) {\n    if (currentTask === undefined) return;\n    const task = currentTask; // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf());\n    save();\n  }\n\n  function getDeadlineTime() {\n    if (currentTask === undefined) return undefined;\n    const task = currentTask;\n    const deadline = task.getActualDeadline();\n\n    if (deadline > 0) {\n      return moment(deadline);\n    }\n\n    return undefined;\n  }\n\n  function getShowTips() {\n    if (currentTask === undefined) return \"\";\n    const task = currentTask;\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task);\n    return result;\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1); // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000);\n    }\n  }\n  /* ---------------------------------------------------------- */\n\n\n  function onChoosePendingDeadline(value) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n    task.pendingDeadline = value;\n    save();\n  }\n\n  function getPendingDeadlineTime() {\n    if (currentTask === undefined) return undefined;\n    const task = currentTask;\n    const deadline = task.pendingDeadline;\n\n    if (deadline > 0) {\n      return moment(deadline);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------- */\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => deleteTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => doneTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \"Done\")), /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    defaultValue: getDeadlineTime(),\n    onOk: value => onChooseDeadline(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }), getShowTips(), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '100px'\n    },\n    value: expectTime,\n    placeholder: \"\\u82B1\\u8D39\\u65F6\\u95F4\",\n    prefix: \"\\u9884\\u8BA1\",\n    suffix: \"h\",\n    onChange: event => setExpectTime(Number(event.target.value)),\n    onPressEnter: changeExceptTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checkedChildren: \"Pending\",\n    unCheckedChildren: \"No Pending\",\n    defaultChecked: isPending,\n    onChange: event => setPending(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    defaultValue: getDeadlineTime(),\n    onOk: value => onChooseDeadline(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: 'auto'\n    },\n    value: expectTime,\n    prefix: \"\\u539F\\u56E0:\",\n    onChange: event => setExpectTime(Number(event.target.value)),\n    onPressEnter: changeExceptTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Editor, {\n    placeholder: \"\\u4EFB\\u52A1\\u65E5\\u5FD7\\uFF08\\u81EA\\u52A8\\u4FDD\\u5B58\\uFF09\",\n    value: content,\n    onChange: event => setContent(event.target.value),\n    onBlur: e => onBlur(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ContentLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx"],"names":["React","useState","useEffect","styled","Input","message","Switch","Button","Modal","DatePicker","stores","TaskInfoFormat","Format","CurrentTaskKey","CurrentDoingTaskKey","moment","Container","div","Div","Editor","TextArea","ButtonGroup","Group","ContentLayout","storeModel","useStore","currentTask","save","content","setContent","expectTime","setExpectTime","isPending","setPending","pendingReason","setPendingReason","currentDoingTask","setCurrentDoingTask","lastTask","setLastTask","undefined","isSameTask","note","getActualExpectConsume","onBlur","event","preventDefault","saveToLocal","isManual","info","deleteTask","confirm","title","onOk","removeTask","success","error","doneTask","task","isDone","formatTimeInMs","doneTime","isDoing","_realDone","stop","done","orderTasks","onChooseDeadline","value","deadlines","push","valueOf","getDeadlineTime","deadline","getActualDeadline","getShowTips","result","getDoingStatusTips","getConsumed","getDeadline","getConsumeExpected","changeExceptTime","expectConsumes","onChoosePendingDeadline","pendingDeadline","getPendingDeadlineTime","e","width","Number","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAA+DC,KAA/D,EAAsEC,UAAtE,QAAwF,MAAxF;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAKA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAO,oBAAP;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAIA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,SAAS,GAAGb,MAAM,CAACc,GAAI;;;;;CAA7B;AAOA,MAAMC,GAAG,GAAGf,MAAM,CAACc,GAAI;CAAvB;AAGA,MAAME,MAAM,GAAGhB,MAAM,CAACC,KAAK,CAACgB,QAAP,CAAiB;;CAAtC;AAIA,MAAMC,WAAW,GAAGlB,MAAM,CAACI,MAAM,CAACe,KAAR,CAAe;;CAAzC;;AAIA,MAAMC,aAAuB,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAiBd,MAAM,CAACe,QAAP,CAAgB,WAAhB,CAAvB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBhB,MAAM,CAACe,QAAP,CAAgBZ,cAAhB,CAAxB;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWjB,MAAM,CAACe,QAAP,CAAgB,WAAhB,CAAjB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC6B,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAAC,CAAC,CAAF,CAA5C;AAEA,QAAM,CAAC+B,SAAD,EAAYC,UAAZ,IAA0BhC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACiC,aAAD,EAAgBC,gBAAhB,IAAoClC,QAAQ,CAAC,OAAD,CAAlD,CARoC,CAWpC;;AACA,QAAM;AAAEmC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4C3B,MAAM,CAACe,QAAP,CAAgBX,mBAAhB,CAAlD;AAEA;AAEA;;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BtC,QAAQ,CAAmBuC,SAAnB,CAAxC;AACAtC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIwB,WAAW,KAAKc,SAApB,EAA+B;;AAE/B,QAAI,CAACd,WAAW,CAACe,UAAZ,CAAuBH,QAAvB,CAAL,EAAuC;AACrC;AACAC,MAAAA,WAAW,CAACb,WAAD,CAAX;AACAG,MAAAA,UAAU,CAACH,WAAW,CAACgB,IAAZ,CAAiBd,OAAlB,CAAV,CAHqC,CAKrC;;AACA,YAAME,UAAU,GAAGJ,WAAW,CAACiB,sBAAZ,EAAnB;;AACA,UAAIb,UAAU,IAAI,CAAC,CAAnB,EAAsB;AACpBC,QAAAA,aAAa,CAACD,UAAD,CAAb;AACD,OAFD,MAEO;AACLC,QAAAA,aAAa,CAACD,UAAU,IAAE,OAAO,IAAT,CAAX,CAAb;AACD;AACF;AACF,GAjBQ,CAAT;AAmBA;;AAEA,WAASc,MAAT,CAAgBC,KAAhB,EAA4B;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,WAAW,CAACF,KAAD,EAAQ,KAAR,CAAX;AACD;;AAED,WAASE,WAAT,CAAqBF,KAArB,EAAiCG,QAAjC,EAAoD;AAClD,QAAIH,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACX,QAAIpB,WAAW,KAAKc,SAApB,EAA+B;AAE/Bd,IAAAA,WAAW,CAACgB,IAAZ,CAAiBd,OAAjB,GAA2BA,OAA3B;AACAD,IAAAA,IAAI;AAEJ,QAAIqB,QAAJ,EAAc3C,OAAO,CAAC4C,IAAR,CAAa,KAAb;AACf;AAED;;;AAEA,WAASC,UAAT,CAAoBL,KAApB,EAAgC;AAC9B,QAAInB,WAAW,KAAKc,SAApB,EAA+B;AAE/BhC,IAAAA,KAAK,CAAC2C,OAAN,CAAc;AACZC,MAAAA,KAAK,EAAE,SADK;AAEZxB,MAAAA,OAAO,EAAG,UAASF,WAAW,CAAC0B,KAAM,EAFzB;;AAGZC,MAAAA,IAAI,GAAG;AACL,YAAI7B,UAAU,CAAC8B,UAAX,CAAsB5B,WAAtB,CAAJ,EAAwC;AACtCrB,UAAAA,OAAO,CAACkD,OAAR,CAAgB,QAAhB;AACA5B,UAAAA,IAAI;AACL,SAHD,MAGO;AACLtB,UAAAA,OAAO,CAACmD,KAAR,CAAc,QAAd;AACD;AACF;;AAVW,KAAd;AAYD;;AAED,WAASC,QAAT,CAAkBZ,KAAlB,EAA8B;AAC5B,QAAInB,WAAW,KAAKc,SAApB,EAA+B;AAC/B,UAAMkB,IAAI,GAAGhC,WAAb;;AAEA,QAAIgC,IAAI,CAACC,MAAL,EAAJ,EAAmB;AACjBtD,MAAAA,OAAO,CAACmD,KAAR,CAAe,cAAa5C,MAAM,CAACgD,cAAP,CAAsBF,IAAI,CAACG,QAA3B,CAAqC,EAAjE;AACA;AACD;;AAED,QAAI,CAACH,IAAI,CAACI,OAAL,EAAL,EAAqB;AACnBtD,MAAAA,KAAK,CAAC2C,OAAN,CAAc;AACZC,QAAAA,KAAK,EAAE,mBADK;AAEZxB,QAAAA,OAAO,EAAG,UAAS8B,IAAI,CAACN,KAAM,EAFlB;;AAGZC,QAAAA,IAAI,GAAG;AACLU,UAAAA,SAAS,CAACL,IAAD,CAAT;AACD;;AALW,OAAd;AAOA;AACD;;AAEDA,IAAAA,IAAI,CAACM,IAAL;AACA3B,IAAAA,mBAAmB,CAACG,SAAD,CAAnB;;AACAuB,IAAAA,SAAS,CAACL,IAAD,CAAT;AACD;;AAED,WAASK,SAAT,CAAmBL,IAAnB,EAA+B;AAC7BA,IAAAA,IAAI,CAACO,IAAL;AACAzC,IAAAA,UAAU,CAAC0C,UAAX;AACA7D,IAAAA,OAAO,CAACkD,OAAR,CAAgB,OAAhB;AACA5B,IAAAA,IAAI;AACL;;AAED,WAASwC,gBAAT,CAA0BC,KAA1B,EAAsC;AACpC,QAAI1C,WAAW,KAAKc,SAApB,EAA+B;AAC/B,UAAMkB,IAAI,GAAGhC,WAAb,CAFoC,CAIpC;AACA;AACA;AACA;AACA;AACA;;AAEAgC,IAAAA,IAAI,CAACW,SAAL,CAAeC,IAAf,CAAoBF,KAAK,CAACG,OAAN,EAApB;AACA5C,IAAAA,IAAI;AACL;;AAED,WAAS6C,eAAT,GAAgC;AAC9B,QAAI9C,WAAW,KAAKc,SAApB,EAA+B,OAAOA,SAAP;AAC/B,UAAMkB,IAAI,GAAGhC,WAAb;AAEA,UAAM+C,QAAQ,GAAGf,IAAI,CAACgB,iBAAL,EAAjB;;AACA,QAAID,QAAQ,GAAG,CAAf,EAAkB;AAChB,aAAO1D,MAAM,CAAC0D,QAAD,CAAb;AACD;;AAED,WAAOjC,SAAP;AACD;;AAED,WAASmC,WAAT,GAA+B;AAC7B,QAAIjD,WAAW,KAAKc,SAApB,EAA+B,OAAO,EAAP;AAC/B,UAAMkB,IAAI,GAAGhC,WAAb;AAEA,QAAIkD,MAAM,GAAG,OAAOjE,cAAc,CAACkE,kBAAf,CAAkCnB,IAAlC,CAAP,GAAiD/C,cAAc,CAACmE,WAAf,CAA2BpB,IAA3B,CAAjD,GAAoF/C,cAAc,CAACoE,WAAf,CAA2BrB,IAA3B,CAApF,GAAuH/C,cAAc,CAACqE,kBAAf,CAAkCtB,IAAlC,CAApI;AACA,WAAOkB,MAAP;AACD;;AAED,WAASK,gBAAT,GAA4B;AAC1B,QAAIvD,WAAW,KAAKc,SAApB,EAA+B;AAC/B,UAAMkB,IAAI,GAAGhC,WAAb;;AAEA,QAAII,UAAU,IAAI,CAAC,CAAnB,EAAsB;AACpB4B,MAAAA,IAAI,CAACwB,cAAL,CAAoBZ,IAApB,CAAyB,CAAC,CAA1B,EADoB,CACS;AAC9B,KAFD,MAEO;AACLZ,MAAAA,IAAI,CAACwB,cAAL,CAAoBZ,IAApB,CAAyBxC,UAAU,GAAG,IAAb,GAAoB,IAA7C;AACD;AACF;AAED;;;AAEA,WAASqD,uBAAT,CAAiCf,KAAjC,EAA6C;AAC3C,QAAI1C,WAAW,KAAKc,SAApB,EAA+B;AAC/B,UAAMkB,IAAI,GAAGhC,WAAb;AAEAgC,IAAAA,IAAI,CAAC0B,eAAL,GAAuBhB,KAAvB;AACAzC,IAAAA,IAAI;AACL;;AAED,WAAS0D,sBAAT,GAAuC;AACrC,QAAI3D,WAAW,KAAKc,SAApB,EAA+B,OAAOA,SAAP;AAC/B,UAAMkB,IAAI,GAAGhC,WAAb;AAEA,UAAM+C,QAAQ,GAAGf,IAAI,CAAC0B,eAAtB;;AACA,QAAIX,QAAQ,GAAG,CAAf,EAAkB;AAChB,aAAO1D,MAAM,CAAC0D,QAAD,CAAb;AACD;;AAED,WAAOjC,SAAP;AACD;AAED;;;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAG8C,CAAD,IAAOpC,UAAU,CAACoC,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,eAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGA,CAAD,IAAO7B,QAAQ,CAAC6B,CAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF,eAUE,oBAAC,UAAD;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,YAAY,EAAEd,eAAe,EAAlD;AAAsD,IAAA,IAAI,EAAEJ,KAAK,IAAID,gBAAgB,CAACC,KAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWGO,WAAW,EAXd,eAaE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAkC,IAAA,KAAK,EAAEzD,UAAzC;AAAqD,IAAA,WAAW,EAAC,0BAAjE;AAAwE,IAAA,MAAM,EAAC,cAA/E;AAAoF,IAAA,MAAM,EAAC,GAA3F;AAA+F,IAAA,QAAQ,EAAGe,KAAD,IAAWd,aAAa,CAACyD,MAAM,CAAC3C,KAAK,CAAC4C,MAAN,CAAarB,KAAd,CAAP,CAAjI;AAA+J,IAAA,YAAY,EAAEa,gBAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAJF,eAoBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,eAAe,EAAC,SAAxB;AAAkC,IAAA,iBAAiB,EAAC,YAApD;AAAiE,IAAA,cAAc,EAAEjD,SAAjF;AAA4F,IAAA,QAAQ,EAAGa,KAAD,IAAWZ,UAAU,CAACY,KAAD,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,UAAD;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,YAAY,EAAE2B,eAAe,EAAlD;AAAsD,IAAA,IAAI,EAAEJ,KAAK,IAAID,gBAAgB,CAACC,KAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAiC,IAAA,KAAK,EAAEzD,UAAxC;AAAoD,IAAA,MAAM,EAAC,eAA3D;AAAiE,IAAA,QAAQ,EAAGe,KAAD,IAAWd,aAAa,CAACyD,MAAM,CAAC3C,KAAK,CAAC4C,MAAN,CAAarB,KAAd,CAAP,CAAnG;AAAiI,IAAA,YAAY,EAAEa,gBAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CApBF,eA4BE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,8DADd;AAC2B,IAAA,KAAK,EAAErD,OADlC;AAC2C,IAAA,QAAQ,EAAGiB,KAAD,IAAWhB,UAAU,CAACgB,KAAK,CAAC4C,MAAN,CAAarB,KAAd,CAD1E;AACgG,IAAA,MAAM,EAAGkB,CAAD,IAAO1C,MAAM,CAAC0C,CAAD,CADrH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,CADF;AAkCD,CAjND;;AAmNA,eAAe/D,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n  const [expectTime, setExpectTime] = useState(-1);\n\n  const [isPending, setPending] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"false\");\n  \n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      // todo 这部分逻辑抽出去\n      const expectTime = currentTask.getActualExpectConsume()\n      if (expectTime == -1) {\n        setExpectTime(expectTime)\n      } else {\n        setExpectTime(expectTime/(3600 * 1000))\n      }\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.orderTasks()\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    save()\n  }\n\n  function getDeadlineTime(): any {\n    if (currentTask === undefined) return undefined\n    const task = currentTask\n\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return undefined\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000) \n    }\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onChoosePendingDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    task.pendingDeadline = value\n    save()\n  }\n\n  function getPendingDeadlineTime(): any {\n    if (currentTask === undefined) return undefined\n    const task = currentTask\n\n    const deadline = task.pendingDeadline\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return undefined\n  }\n\n  /* ---------------------------------------------------------- */\n\n  return (\n    <Container>\n      {/* todo 没有 currentTask 就不展示 */}\n\n      {/* 不加这个 div 会换行 */}\n      <Div>\n        <ButtonGroup>\n          {/* 点击整行就是查看且开始，view是只查看不开始。暂时用不着吧 */}\n          {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n          <Button onClick={(e) => deleteTask(e)}>D</Button>\n          {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n          <Button onClick={(e) => doneTask(e)}>Done</Button>\n\n        </ButtonGroup>\n\n        <DatePicker showTime defaultValue={getDeadlineTime()} onOk={value => onChooseDeadline(value)} />\n        {getShowTips()}\n\n        <Input style={{ width: '100px' }} value={expectTime} placeholder=\"花费时间\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onPressEnter={changeExceptTime} />\n      </Div>\n\n      <Div>\n        <Switch checkedChildren=\"Pending\" unCheckedChildren=\"No Pending\" defaultChecked={isPending} onChange={(event) => setPending(event)} />\n\n        <DatePicker showTime defaultValue={getDeadlineTime()} onOk={value => onChooseDeadline(value)} />\n\n        <Input style={{ width: 'auto' }} value={expectTime} prefix=\"原因:\" onChange={(event) => setExpectTime(Number(event.target.value))} onPressEnter={changeExceptTime} />\n      </Div>\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;"]},"metadata":{},"sourceType":"module"}