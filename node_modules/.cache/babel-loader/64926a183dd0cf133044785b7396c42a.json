{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\npadding-top:1px;\\npadding-bottom:1px;\\npadding-left:2px;\\npadding-right:2px;\\n:hover{\\nbackground-color: #a2e3cd;\\n};\\nbackground-color:#e3e9e7;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\nheight: 55vh;\\noverflow-y: scroll;\\nwhite-space: pre-wrap;\\npadding: 5px;\\nbackground-color:#ffffff;\\n/* background-color:rgb(227, 233, 231); */\\n\\n::-webkit-scrollbar {\\n            -webkit-appearance: none;\\n            width: 7px;\\n        }\\n        ::-webkit-scrollbar-thumb {\\n            border-radius: 4px;\\n            background-color: rgba(0, 0, 0, .5);\\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n        }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import'reflect-metadata';import React from'react';import styled from'styled-components';import stores from'../stores';import{List}from'antd';import DateUtils from'../utils/DateUtils';import Format from'../utils/Format';var Div=styled.div(_templateObject());var TimeLineLayout=function TimeLineLayout(){var _ref=stores.useStore('mainmodel'),storeModel=_ref.storeModel;// React.useEffect(() => {\n//   console.log(\"app useEffect\")\n// },[])\nfunction getTimelines(){return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0)).flatMap(function(task){return task.note.timeLines.map(function(timeline){return timeline.getTitled(task.title);});}).sort(function(a,b){if(a.timeStamp>b.timeStamp){return-1;}else if(a.timeStamp<b.timeStamp){return 1;}else{return 0;}}).map(function(timeline){if(timeline.isDivder){return\"\";}else{return\"\".concat(Format.formatTimeInSecond2(timeline.timeStamp),\" \").concat(timeline.content,\" \\n\");}}).join(\"\");}function getCurrentDayDoingTasks(){return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0)).flatMap(function(task){return task.note.timeLines.map(function(timeline){return timeline.getTitled(task.title);});}).sort(function(a,b){if(a.timeStamp>b.timeStamp){return-1;}else if(a.timeStamp<b.timeStamp){return 1;}else{return 0;}}).filter(function(timeline){return!timeline.isDivder;});}var NoteItem=styled.div(_templateObject2());return/*#__PURE__*/React.createElement(Div,null,/*#__PURE__*/React.createElement(List,{size:\"small\",bordered:true,dataSource:getCurrentDayDoingTasks(),renderItem:function renderItem(timeline){return/*#__PURE__*/React.createElement(NoteItem,{key:timeline.timeStamp},/*#__PURE__*/React.createElement(\"span\",{style:{color:\"#e5b33c\"}},Format.formatTimeInSecond2(timeline.timeStamp)),/*#__PURE__*/React.createElement(\"span\",{style:{color:\"#229a72\"}},timeline.title),timeline.content);}}));};export default TimeLineLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TimeLineLayout.tsx"],"names":["React","styled","stores","List","DateUtils","Format","Div","div","TimeLineLayout","useStore","storeModel","getTimelines","getTasks","getMyCurrentDayDur","flatMap","task","note","timeLines","map","timeline","getTitled","title","sort","a","b","timeStamp","isDivder","formatTimeInSecond2","content","join","getCurrentDayDoingTasks","filter","NoteItem","color"],"mappings":"wiCAAA,MAAO,kBAAP,CACA,MAAOA,CAAAA,KAAP,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,OAASC,IAAT,KAAqB,MAArB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CAIA,GAAMC,CAAAA,GAAG,CAAGL,MAAM,CAACM,GAAV,mBAAT,CAmBA,GAAMC,CAAAA,cAAwB,CAAG,QAA3BA,CAAAA,cAA2B,EAAM,UACdN,MAAM,CAACO,QAAP,CAAgB,WAAhB,CADc,CAC7BC,UAD6B,MAC7BA,UAD6B,CAGrC;AACA;AACA;AAEA,QAASC,CAAAA,YAAT,EAAgC,CAC9B,MAAOD,CAAAA,UAAU,CAACE,QAAX,CAAoBR,SAAS,CAACS,kBAAV,CAA6B,CAA7B,CAApB,EACJC,OADI,CACI,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,CAAUC,SAAV,CAAoBC,GAApB,CAAwB,SAACC,QAAD,CAAc,CACvD,MAAOA,CAAAA,QAAQ,CAACC,SAAT,CAAmBL,IAAI,CAACM,KAAxB,CAAP,CACD,CAFkB,CAAV,EADJ,EAGDC,IAHC,CAGI,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACjB,GAAID,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAApB,CAA+B,CAC7B,MAAO,CAAC,CAAR,CACD,CAFD,IAEO,IAAIF,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAApB,CAA+B,CACpC,MAAO,EAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CAXI,EAaJP,GAbI,CAaA,SAACC,QAAD,CAAc,CACjB,GAAIA,QAAQ,CAACO,QAAb,CAAuB,CACrB,MAAO,EAAP,CACD,CAFD,IAEO,CACL,gBAAUrB,MAAM,CAACsB,mBAAP,CAA2BR,QAAQ,CAACM,SAApC,CAAV,aAA4DN,QAAQ,CAACS,OAArE,QACD,CACF,CAnBI,EAmBFC,IAnBE,CAmBG,EAnBH,CAAP,CAoBD,CAED,QAASC,CAAAA,uBAAT,EAA+C,CAC7C,MAAOpB,CAAAA,UAAU,CAACE,QAAX,CAAoBR,SAAS,CAACS,kBAAV,CAA6B,CAA7B,CAApB,EACJC,OADI,CACI,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,CAAUC,SAAV,CAAoBC,GAApB,CAAwB,SAACC,QAAD,CAAc,CACvD,MAAOA,CAAAA,QAAQ,CAACC,SAAT,CAAmBL,IAAI,CAACM,KAAxB,CAAP,CACD,CAFkB,CAAV,EADJ,EAGDC,IAHC,CAGI,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACjB,GAAID,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAApB,CAA+B,CAC7B,MAAO,CAAC,CAAR,CACD,CAFD,IAEO,IAAIF,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAApB,CAA+B,CACpC,MAAO,EAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CAXI,EAYHM,MAZG,CAYI,SAACZ,QAAD,QAAc,CAACA,QAAQ,CAACO,QAAxB,EAZJ,CAAP,CAaD,CAED,GAAMM,CAAAA,QAAQ,CAAG/B,MAAM,CAACM,GAAV,oBAAd,CAWA,mBACE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EACE,IAAI,CAAC,OADP,CAEE,QAAQ,KAFV,CAGE,UAAU,CAAEuB,uBAAuB,EAHrC,CAIE,UAAU,CAAE,oBAAAX,QAAQ,qBAClB,oBAAC,QAAD,EAAU,GAAG,CAAEA,QAAQ,CAACM,SAAxB,eAEE,4BAAM,KAAK,CAAE,CAAEQ,KAAK,CAAE,SAAT,CAAb,EAAoC5B,MAAM,CAACsB,mBAAP,CAA2BR,QAAQ,CAACM,SAApC,CAApC,CAFF,cAGE,4BAAM,KAAK,CAAE,CAAEQ,KAAK,CAAE,SAAT,CAAb,EAAoCd,QAAQ,CAACE,KAA7C,CAHF,CAIGF,QAAQ,CAACS,OAJZ,CADkB,EAJtB,EADF,CADF,CAiBD,CA1ED,CA4EA,cAAepB,CAAAA,cAAf","sourcesContent":["import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List } from 'antd';\nimport { StoreModel, Task, Duration, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport TimelineItem from 'antd/lib/timeline/TimelineItem';\n\n\nconst Div = styled.div`\nheight: 55vh;\noverflow-y: scroll;\nwhite-space: pre-wrap;\npadding: 5px;\nbackground-color:#ffffff;\n/* background-color:rgb(227, 233, 231); */\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst TimeLineLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  function getTimelines(): string {\n    return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n      .flatMap((task) => task.note.timeLines.map((timeline) => {\n        return timeline.getTitled(task.title)\n      })).sort((a, b) => {\n        if (a.timeStamp > b.timeStamp) {\n          return -1\n        } else if (a.timeStamp < b.timeStamp) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n      .map((timeline) => {\n        if (timeline.isDivder) {\n          return \"\"\n        } else {\n          return `${Format.formatTimeInSecond2(timeline.timeStamp)} ${timeline.content} \\n`\n        }\n      }).join(\"\")\n  }\n\n  function getCurrentDayDoingTasks(): TimeLine[] {\n    return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n      .flatMap((task) => task.note.timeLines.map((timeline) => {\n        return timeline.getTitled(task.title)\n      })).sort((a, b) => {\n        if (a.timeStamp > b.timeStamp) {\n          return -1\n        } else if (a.timeStamp < b.timeStamp) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      ).filter((timeline) => !timeline.isDivder)\n  }\n\n  const NoteItem = styled.div`\npadding-top:1px;\npadding-bottom:1px;\npadding-left:2px;\npadding-right:2px;\n:hover{\nbackground-color: #a2e3cd;\n};\nbackground-color:#e3e9e7;\n`\n\n  return (\n    <Div>\n      <List\n        size=\"small\"\n        bordered\n        dataSource={getCurrentDayDoingTasks()}\n        renderItem={timeline => (\n          <NoteItem key={timeline.timeStamp} >\n            {/* <span style={{ color: \"#ffffff\" }}>{Format.formatTimeInSecond2(timeline.timeStamp)}</span>  */}\n            <span style={{ color: \"#e5b33c\" }}>{Format.formatTimeInSecond2(timeline.timeStamp)}</span> \n            <span style={{ color: \"#229a72\" }}>{timeline.title}</span> \n            {timeline.content}\n          </NoteItem>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TimeLineLayout;\n"]},"metadata":{},"sourceType":"module"}