{"ast":null,"code":"import { Task, StoreModel } from '../model/model';\nimport 'reflect-metadata';\nimport '../../node_modules/reflect-metadata/Reflect.js';\nimport { plainToClass } from \"class-transformer\";\nconst STORAGE_KEY = 'DoingList3';\nconst storage = {\n  isDebug: false,\n  fetch: function () {\n    if (this.isDebug) {\n      return this._getMockStoreModel();\n    }\n\n    let result = new StoreModel();\n    let storageJson = localStorage.getItem(STORAGE_KEY);\n\n    if (storageJson != null) {\n      return plainToClass(StoreModel, JSON.parse(storageJson));\n    }\n\n    return result;\n  },\n  save: function (storeModel) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(storeModel));\n  },\n\n  _getMockStoreModel() {\n    let result = new StoreModel();\n\n    for (let index = 0; index < 12; index++) {\n      const newLocal = new Task();\n      newLocal.init(\"我的第 \" + index + \" 个任务\");\n      result.addTask(newLocal);\n    }\n\n    return result;\n  }\n\n};\nconst model = {\n  storeModel: storage.fetch(),\n\n  save() {\n    storage.save(this.storeModel);\n  },\n\n  setModel(model) {\n    this.storeModel = model;\n    this.save();\n  }\n\n};\nexport default model;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/stores/MainStore.ts"],"names":["Task","StoreModel","plainToClass","STORAGE_KEY","storage","isDebug","fetch","_getMockStoreModel","result","storageJson","localStorage","getItem","JSON","parse","save","storeModel","setItem","stringify","index","newLocal","init","addTask","model","setModel"],"mappings":"AAAA,SAASA,IAAT,EAAyBC,UAAzB,QAA2C,gBAA3C;AAGA,OAAO,kBAAP;AACA,OAAO,gDAAP;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAGA,MAAMC,WAAW,GAAG,YAApB;AACA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,KADG;AAEZC,EAAAA,KAAK,EAAE,YAAwB;AAC3B,QAAI,KAAKD,OAAT,EAAkB;AACd,aAAO,KAAKE,kBAAL,EAAP;AACH;;AAED,QAAIC,MAAM,GAAG,IAAIP,UAAJ,EAAb;AAEA,QAAIQ,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBR,WAArB,CAAlB;;AACA,QAAIM,WAAW,IAAI,IAAnB,EAAyB;AACrB,aAAOP,YAAY,CAACD,UAAD,EAAaW,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAb,CAAnB;AACH;;AAED,WAAOD,MAAP;AACH,GAfW;AAiBZM,EAAAA,IAAI,EAAE,UAAUC,UAAV,EAAkC;AACpCL,IAAAA,YAAY,CAACM,OAAb,CAAqBb,WAArB,EAAkCS,IAAI,CAACK,SAAL,CAAeF,UAAf,CAAlC;AACH,GAnBW;;AAqBZR,EAAAA,kBAAkB,GAAe;AAC7B,QAAIC,MAAM,GAAG,IAAIP,UAAJ,EAAb;;AAEA,SAAK,IAAIiB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;AACrC,YAAMC,QAAQ,GAAG,IAAInB,IAAJ,EAAjB;AACJmB,MAAAA,QAAQ,CAACC,IAAT,CAAc,SAASF,KAAT,GAAiB,MAA/B;AACIV,MAAAA,MAAM,CAACa,OAAP,CAAeF,QAAf;AACH;;AAED,WAAOX,MAAP;AACH;;AA/BW,CAAhB;AAkCA,MAAMc,KAAK,GAAG;AACVP,EAAAA,UAAU,EAAEX,OAAO,CAACE,KAAR,EADF;;AAGVQ,EAAAA,IAAI,GAAG;AACHV,IAAAA,OAAO,CAACU,IAAR,CAAa,KAAKC,UAAlB;AACH,GALS;;AAOVQ,EAAAA,QAAQ,CAACD,KAAD,EAAoB;AACxB,SAAKP,UAAL,GAAkBO,KAAlB;AACA,SAAKR,IAAL;AACH;;AAVS,CAAd;AAaA,eAAeQ,KAAf","sourcesContent":["import { Task, Duration, StoreModel } from '../model/model'\nimport Utils from '../utils/Utils';\nimport stores from '../stores';\nimport 'reflect-metadata'\nimport '../../node_modules/reflect-metadata/Reflect.js'\nimport { plainToClass } from \"class-transformer\";\n\n\nconst STORAGE_KEY = 'DoingList3'\nconst storage = {\n    isDebug: false,\n    fetch: function (): StoreModel {\n        if (this.isDebug) {\n            return this._getMockStoreModel()\n        }\n\n        let result = new StoreModel()\n\n        let storageJson = localStorage.getItem(STORAGE_KEY)\n        if (storageJson != null) {\n            return plainToClass(StoreModel, JSON.parse(storageJson))\n        }\n\n        return result\n    },\n\n    save: function (storeModel: StoreModel) {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(storeModel))\n    },\n\n    _getMockStoreModel(): StoreModel {\n        let result = new StoreModel()\n\n        for (let index = 0; index < 12; index++) {\n            const newLocal = new Task();\n        newLocal.init(\"我的第 \" + index + \" 个任务\")\n            result.addTask(newLocal)\n        }\n\n        return result\n    },\n}\n\nconst model = {\n    storeModel: storage.fetch(),\n\n    save() {\n        storage.save(this.storeModel)\n    },\n\n    setModel(model: StoreModel) {\n        this.storeModel = model\n        this.save()\n    },\n};\n\nexport default model"]},"metadata":{},"sourceType":"module"}