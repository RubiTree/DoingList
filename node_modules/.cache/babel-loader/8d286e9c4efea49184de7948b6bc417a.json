{"ast":null,"code":"import _initializerDefineProperty from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";import _classCallCheck from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";import _initializerWarningHelper from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";var _dec,_dec2,_dec3,_class,_descriptor,_descriptor2,_descriptor3,_class2,_temp,_dec4,_class3,_descriptor4,_temp2,_dec5,_dec6,_class5,_descriptor5,_descriptor6,_temp3;import Utils from'../utils/Utils';import{Type}from\"class-transformer\";import DateUtils from'../utils/DateUtils';import Format from'../utils/Format';var Task=(_dec=Type(function(){return Note;}),_dec2=Type(function(){return AdjustConsume;}),_dec3=Type(function(){return Duration;}),(_class=(_temp=_class2=/*#__PURE__*/function(){function Task(){_classCallCheck(this,Task);this.id=-1;this.title=\"undefine\";_initializerDefineProperty(this,\"note\",_descriptor,this);this.level=3;this.createTime=-1;this.doneTime=-1;this.pendingDeadline=-1;this.pendingReason=\"\";this.deadlines=[];this.expectConsumes=[];this.expectStartTime=-1;_initializerDefineProperty(this,\"adjusts\",_descriptor2,this);_initializerDefineProperty(this,\"doingDurs\",_descriptor3,this);this.cycleId=-1;}_createClass(Task,[{key:\"init\",// 反序列化不能有带参数的构造器\n// public constructor(title: string) {\n//     this.title = title\n//     this.createTime = Utils.getTimestamp()\n//     this.id = Utils.generateId() + Task.idCounter\n//     Task.idCounter = Task.idCounter + 1000\n// }\nvalue:function init(title){this.title=title;this.createTime=Utils.getTimestamp();this.expectStartTime=this.createTime;this.id=Utils.generateId()+Task.idCounter;Task.idCounter=Task.idCounter+1000;}},{key:\"adaptData\",value:function adaptData(){if(this.expectStartTime===-1){this.expectStartTime=this.createTime;}}},{key:\"isSameTask\",value:function isSameTask(task){if(task===undefined){return false;}else{return this.id===task.id;}}},{key:\"isDoing\",value:function isDoing(){if(this.doingDurs.length===0){return false;}else{var lastTask=this.doingDurs[this.doingDurs.length-1];return lastTask.end===-1;}}},{key:\"isStarted\",value:function isStarted(){return this.doingDurs.length!==0;}},{key:\"lastStartTime\",value:function lastStartTime(){if(this.doingDurs.length===0){return-1;}else{var lastTask=this.doingDurs[this.doingDurs.length-1];return lastTask.start;}}},{key:\"start\",value:function start(){var duration=new Duration();var currentTime=Utils.getTimestamp();duration.init(currentTime);this.doingDurs.push(duration);if(currentTime<this.expectStartTime){this.expectStartTime=currentTime;}}},{key:\"stop\",value:function stop(){this.doingDurs[this.doingDurs.length-1].end=Utils.getTimestamp();}},{key:\"stopDelay\",value:function stopDelay(delay){this.doingDurs[this.doingDurs.length-1].end=Utils.getTimestamp()+delay;}},{key:\"isDone\",value:function isDone(){return this.doneTime!==-1;}},{key:\"isPending\",value:function isPending(){return this.pendingDeadline!==-1;}},{key:\"isDangerousPending\",value:function isDangerousPending(){return this.isTimeDangers(this.pendingDeadline);}},{key:\"isDangerousDeadline\",value:function isDangerousDeadline(){return this.isTimeDangers(this.getActualDeadline());}},{key:\"isDangerous\",value:function isDangerous(){return this.isDangerousPending()||this.isDangerousDeadline();}/**\n     * dealine 距离还有2个小时，或者已经过了\n     */},{key:\"isTimeDangers\",value:function isTimeDangers(deadline){if(deadline<=0){return false;}if(deadline-Utils.getTimestamp()<=2*60*60*1000){return true;}return false;}},{key:\"done\",value:function done(){this.doneTime=Utils.getTimestamp();}// 返回毫秒数\n// todo rename getAllDoingDuration\n},{key:\"getAllDuration\",value:function getAllDuration(){var _this=this;if(this.doingDurs.length===0){return 0;}return this.doingDurs.map(function(value,index){return value.getDur(index===_this.doingDurs.length-1);}).reduce(function(a,b){return a+b;})+this.allAdjusts();}},{key:\"allAdjusts\",value:function allAdjusts(){if(this.adjusts.length===0){return 0;}return this.adjusts.map(function(adjust){return adjust.adjust;}).reduce(function(a,b){return a+b;});}},{key:\"getAllDurationInDur\",value:function getAllDurationInDur(limitDur){var _this2=this;if(this.doingDurs.length===0){return 0;}return this.doingDurs.map(function(value,index){return value.getLimitDur(index===_this2.doingDurs.length-1,limitDur);}).reduce(function(a,b){return a+b;})+this.allDurAdjusts(limitDur);}},{key:\"allDurAdjusts\",value:function allDurAdjusts(limitDur){var s=this.adjusts.filter(function(adjust){return limitDur.isIn(adjust.adjustTime);});if(s.length===0){return 0;}return s.map(function(adjust){return adjust.adjust;}).reduce(function(a,b){return a+b;});}},{key:\"getActualDeadline\",value:function getActualDeadline(){if(this.deadlines.length===0){return-1;}return this.deadlines[this.deadlines.length-1];}},{key:\"isHaveDeadline\",value:function isHaveDeadline(){return this.getActualDeadline()>0;}},{key:\"getActualExpectConsume\",value:function getActualExpectConsume(){if(this.expectConsumes.length===0){return-1;}return this.expectConsumes[this.expectConsumes.length-1];}},{key:\"isExpectConsume\",value:function isExpectConsume(){return this.getActualExpectConsume()>0;}// 超出预期时间返回多花的时间，负值\n// 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n},{key:\"getLeftExpectConsumeTime\",value:function getLeftExpectConsumeTime(){var left=this.getActualExpectConsume()-this.getAllDuration();// 不用打印\n// if (left < 0) {\n//     console.error(\"超出预期时间\")\n// }\nreturn left;}}]);return Task;}(),_class2.idCounter=0,_temp),(_descriptor=_applyDecoratedDescriptor(_class.prototype,\"note\",[_dec],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return new Note();}}),_descriptor2=_applyDecoratedDescriptor(_class.prototype,\"adjusts\",[_dec2],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return[];}}),_descriptor3=_applyDecoratedDescriptor(_class.prototype,\"doingDurs\",[_dec3],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return[];}})),_class));var Duration=/*#__PURE__*/function(){function Duration(){_classCallCheck(this,Duration);this.start=-1;this.end=-1;this.name=\"\";}_createClass(Duration,[{key:\"init\",// todo 没法重载\nvalue:function init(start){this.start=start;}},{key:\"init2\",value:function init2(start,end){this.start=start;if(end!=undefined){this.end=end;}}},{key:\"isIn\",value:function isIn(timeStamp){return timeStamp>=this.start&&timeStamp<=this.end;}},{key:\"getDur\",value:function getDur(){var isDoing=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var dur=this.getDurDur(isDoing);if(dur===null){return 0;}return dur.end-dur.start;}},{key:\"getDurDur\",value:function getDurDur(){var isDoing=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var end=this.end;if(end==-1&&isDoing){end=Utils.getTimestamp();}if(end==-1){console.error(\"这段时间未结束\");return null;}return Duration.create(this.start,end);}},{key:\"getLimitDur\",value:function getLimitDur(isDoing,limitDur){var _this$getDurDur;var dur=(_this$getDurDur=this.getDurDur(isDoing))===null||_this$getDurDur===void 0?void 0:_this$getDurDur.getJoin(limitDur);if(dur===null||dur===undefined){return 0;}return dur.end-dur.start;}},{key:\"isValid\",value:function isValid(isDoing){if(!isDoing&&this.end==-1)return false;return true;}},{key:\"getJoin\",value:function getJoin(limitDur){if(this.end<=limitDur.start||this.start>=limitDur.end){return null;}return Duration.create(Math.max(limitDur.start,this.start),Math.min(limitDur.end,this.end));}}],[{key:\"create\",value:function create(start,end,name){var dur=new Duration();if(start!=undefined){dur.start=start;}if(end!=undefined){dur.end=end;}if(name!=undefined){dur.name=name;}return dur;}}]);return Duration;}();var AdjustConsume=/*#__PURE__*/function(){function AdjustConsume(){_classCallCheck(this,AdjustConsume);this.adjust=-1;this.adjustTime=-1;}_createClass(AdjustConsume,null,[{key:\"create\",value:function create(adjust){var dur=new AdjustConsume();dur.adjust=adjust;dur.adjustTime=Utils.getTimestamp();return dur;}}]);return AdjustConsume;}();var CycleRecord=/*#__PURE__*/function(){function CycleRecord(){_classCallCheck(this,CycleRecord);this.id=-1;this._startTime=[];this._gap=[];this.title=\"undefine\";this.level=3;this.expectConsumes=-1;}_createClass(CycleRecord,[{key:\"init\",// ---- 模板\nvalue:function init(gap,title,level){this.id=Utils.generateId();this.title=title;this.level=level;this._gap.push(gap);this._startTime.push(Utils.getTimestamp());}},{key:\"getGap\",value:function getGap(){if(this._gap.length===0){return-1;}return this._gap[this._gap.length-1];}},{key:\"setGap\",value:function setGap(gap){this._gap.push(gap);}},{key:\"getStartTime\",value:function getStartTime(){if(this._startTime.length===0){return-1;}return this._startTime[this._startTime.length-1];}},{key:\"setStartTime\",value:function setStartTime(startTime){this._startTime.push(startTime);}/**\n     * 只要 currentTimeStamp 这天 0点-24点 在 starttime + n*gap 的这天 0点-24点，就创建任务\n     * 创建的方式是找最新创建的一个任务，然后拷贝它的属性（这个有点复杂，要考虑没有最新创建任务的情况，暂时不这么实现，而是使用模板吧）\n     */},{key:\"isTimeToCreateTask\",value:function isTimeToCreateTask(){var currentZero=DateUtils.getCurrentDayStamp(0);var startZero=DateUtils.getSomeDayStamp(this.getStartTime(),0);return(currentZero-startZero)%(this.getGap()*24*3600*1000)===0;}},{key:\"createTask\",value:function createTask(){var newTask=new Task();newTask.init(\"[\\u5468\\u671F|\".concat(Format.formatTimeInDay2(Utils.getTimestamp()),\"] \").concat(this.title));newTask.level=this.level;newTask.expectConsumes.push(this.expectConsumes);newTask.cycleId=this.id;return newTask;}}]);return CycleRecord;}();var Note=(_dec4=Type(function(){return TimeLine;}),(_class3=(_temp2=/*#__PURE__*/function(){function Note(){_classCallCheck(this,Note);this.content=\"\";_initializerDefineProperty(this,\"timeLines\",_descriptor4,this);}_createClass(Note,[{key:\"hasTimeLine\",value:function hasTimeLine(){return this.timeLines.length!==0;}},{key:\"endTimeLine\",value:function endTimeLine(){if(!this.hasTimeLine())return null;return this.timeLines[this.timeLines.length-1];}},{key:\"getFormartTimeLines\",value:function getFormartTimeLines(){return this.timeLines.slice().reverse().map(function(timeline){if(timeline.isDivder){return\"----- \".concat(Format.formatTimeInDay(timeline.timeStamp),\" -----\");}else{return\"\".concat(Format.formatTimeInSecond(timeline.timeStamp),\" \").concat(timeline.content);}}).join(\"\\n\");}}]);return Note;}(),_temp2),(_descriptor4=_applyDecoratedDescriptor(_class3.prototype,\"timeLines\",[_dec4],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return[];}})),_class3));var TimeLine=/*#__PURE__*/function(){function TimeLine(){_classCallCheck(this,TimeLine);this.timeStamp=-1;this.isDivder=false;this.content=\"\";}_createClass(TimeLine,[{key:\"getTitled\",value:function getTitled(title){var copy=Object.assign({},this);// copy.content = `【${title}】${copy.content}`\ncopy.content=\"(\".concat(title,\")\").concat(copy.content);return copy;}}],[{key:\"createContentNode\",value:function createContentNode(content){var t=new TimeLine();t.timeStamp=Utils.getTimestamp();t.content=content;return t;}},{key:\"createDivNode\",value:function createDivNode(){var t=new TimeLine();t.timeStamp=Utils.getTimestamp();t.isDivder=true;return t;}}]);return TimeLine;}();var StoreModel=(_dec5=Type(function(){return Task;}),_dec6=Type(function(){return CycleRecord;}),(_class5=(_temp3=/*#__PURE__*/function(){function StoreModel(){_classCallCheck(this,StoreModel);_initializerDefineProperty(this,\"tasks\",_descriptor5,this);_initializerDefineProperty(this,\"cycleRecords\",_descriptor6,this);this.totalAdjustConsumeTime=0;}_createClass(StoreModel,[{key:\"getTasks\",/**\n     * 筛选规则：\n     * 1. 所有 未完成 且 预期开始时间在今天endtime之前 的任务\n     * 2. 今天完成的任务\n     */value:function getTasks(dur){return this.tasks.filter(function(value){return!value.isDone()&&value.expectStartTime<=dur.end||dur.isIn(value.doneTime);});}},{key:\"getCurrentDayDoingTasks\",value:function getCurrentDayDoingTasks(dur){return this.tasks.filter(function(task){return task.doingDurs.find(function(taskDur){return dur.isIn(taskDur.start);})!==undefined;});}},{key:\"addTask\",value:function addTask(task){if(this.containsProject(task.id))return;this.tasks.push(task);}},{key:\"addCycleRecord\",value:function addCycleRecord(cycleRecord){if(this.containsCycleRecord(cycleRecord.id))return;this.cycleRecords.push(cycleRecord);}},{key:\"invokeAddCycleTask\",value:function invokeAddCycleTask(){var _this3=this;this.cycleRecords.forEach(function(record){if(record.isTimeToCreateTask()){var isNotCreated=_this3.tasks.filter(function(task){var isSameId=task.cycleId===record.id;var isTodayTask=DateUtils.getMyCurrentDayDur2(0).isIn(task.createTime);// console.log(`isNotCreated, isSameId:${isSameId} isTodayTask:${isTodayTask}`)\nreturn isSameId&&isTodayTask;}).length===0;if(isNotCreated){// console.log(`create cycle task, record:${record.title}`)\n_this3.addTask(record.createTask());}}});}},{key:\"removeTask\",value:function removeTask(task){if(!this.containsProject(task.id))return false;var length=this.tasks.length;for(var i=0;i<length;i++){if(this.tasks[i].id===task.id){if(i===0){this.tasks.shift();//删除并返回数组的第一个元素\n}else if(i===length-1){this.tasks.pop();//删除并返回数组的最后一个元素\n}else{this.tasks.splice(i,1);//删除下标为i的元素\n}return true;}}return false;}},{key:\"containsProject\",value:function containsProject(id){return this.tasks.find(function(item){return item.id===id;})!==undefined;}},{key:\"containsCycleRecord\",value:function containsCycleRecord(id){return this.cycleRecords.find(function(item){return item.id===id;})!==undefined;}},{key:\"normalUpdate\",value:function normalUpdate(){this.invokeAddCycleTask();this.orderTasks();}},{key:\"orderTasks\",value:function orderTasks(){this.tasks.sort(function(a,b){// 完成的放最后\nif(a.isDone()&&!b.isDone()){return 1;}else if(!a.isDone()&&b.isDone()){return-1;}else{// 正在做的放最前\nif(a.isDoing()){return-1;}else if(b.isDoing()){return 1;}else{// 到时间的放前面\nif(a.isDangerous()&&!b.isDangerous()){return-1;}else if(!a.isDangerous()&&b.isDangerous()){return 1;}else{// 然后比较level\nif(a.level>b.level){return 1;}else if(a.level<b.level){return-1;}else{// 同样 level 比较创建时间\nif(a.createTime>b.createTime){return-1;}else if(a.createTime<b.createTime){return 1;}else{return 0;}}}}}});}}]);return StoreModel;}(),_temp3),(_descriptor5=_applyDecoratedDescriptor(_class5.prototype,\"tasks\",[_dec5],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return[];}}),_descriptor6=_applyDecoratedDescriptor(_class5.prototype,\"cycleRecords\",[_dec6],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return[];}})),_class5));export{Task,Duration,StoreModel,AdjustConsume,Note,CycleRecord,TimeLine};","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/model/model.ts"],"names":["Utils","Type","DateUtils","Format","Task","Note","AdjustConsume","Duration","id","title","level","createTime","doneTime","pendingDeadline","pendingReason","deadlines","expectConsumes","expectStartTime","cycleId","getTimestamp","generateId","idCounter","task","undefined","doingDurs","length","lastTask","end","start","duration","currentTime","init","push","delay","isTimeDangers","getActualDeadline","isDangerousPending","isDangerousDeadline","deadline","map","value","index","getDur","reduce","a","b","allAdjusts","adjusts","adjust","limitDur","getLimitDur","allDurAdjusts","s","filter","isIn","adjustTime","getActualExpectConsume","left","getAllDuration","name","timeStamp","isDoing","dur","getDurDur","console","error","create","getJoin","Math","max","min","CycleRecord","_startTime","_gap","gap","startTime","currentZero","getCurrentDayStamp","startZero","getSomeDayStamp","getStartTime","getGap","newTask","formatTimeInDay2","TimeLine","content","timeLines","hasTimeLine","slice","reverse","timeline","isDivder","formatTimeInDay","formatTimeInSecond","join","copy","Object","assign","t","StoreModel","totalAdjustConsumeTime","tasks","isDone","find","taskDur","containsProject","cycleRecord","containsCycleRecord","cycleRecords","forEach","record","isTimeToCreateTask","isNotCreated","isSameId","isTodayTask","getMyCurrentDayDur2","addTask","createTask","i","shift","pop","splice","item","invokeAddCycleTask","orderTasks","sort","isDangerous"],"mappings":"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","sourcesContent":["import Utils from '../utils/Utils'\nimport { Type } from \"class-transformer\";\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\nclass Task {\n    // todo delete 内存id增加器（因为mock初始化太快了，都在一个毫秒内）\n    private static idCounter = 0\n\n    public id: number = -1\n\n    public title: string = \"undefine\"\n\n    @Type(() => Note)\n    public note: Note = new Note()\n\n    public level: number = 3\n\n    public createTime: number = -1\n    public doneTime: number = -1\n\n    public pendingDeadline: number = -1\n    public pendingReason: string = \"\"\n\n    // 可修改，最后一个有效\n    public deadlines: number[] = []\n    // 预计花费时间，单位毫秒，可修改，最后一个有效\n    public expectConsumes: number[] = []\n    // 预期开始时间，默认是createTime，可以设置成不同时间，如果在 expectStartTime 前开始任务，此时间会自动变成这个开始任务的时间（显示逻辑一致）\n    public expectStartTime: number = -1\n\n    @Type(() => AdjustConsume)\n    public adjusts: AdjustConsume[] = []\n\n    @Type(() => Duration)\n    public doingDurs: Duration[] = []\n\n    public cycleId: number = -1\n\n    // 反序列化不能有带参数的构造器\n    // public constructor(title: string) {\n    //     this.title = title\n    //     this.createTime = Utils.getTimestamp()\n\n    //     this.id = Utils.generateId() + Task.idCounter\n    //     Task.idCounter = Task.idCounter + 1000\n    // }\n\n    public init(title: string) {\n        this.title = title\n        this.createTime = Utils.getTimestamp()\n        this.expectStartTime = this.createTime\n\n        this.id = Utils.generateId() + Task.idCounter\n        Task.idCounter = Task.idCounter + 1000\n    }\n\n    public adaptData() {\n        if (this.expectStartTime === -1) {\n            this.expectStartTime = this.createTime\n        }\n    }\n\n    public isSameTask(task: Task | undefined): boolean {\n        if (task === undefined) {\n            return false\n        } else {\n            return this.id === task.id\n        }\n    }\n\n    public isDoing(): boolean {\n        if (this.doingDurs.length === 0) {\n            return false\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.end === -1\n        }\n    }\n\n    public isStarted(): boolean {\n        return this.doingDurs.length !== 0\n    }\n\n    public lastStartTime(): number {\n        if (this.doingDurs.length === 0) {\n            return -1\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.start\n        }\n    }\n\n    public start() {\n        let duration = new Duration()\n        const currentTime = Utils.getTimestamp();\n        duration.init(currentTime)\n        this.doingDurs.push(duration)\n\n        if (currentTime < this.expectStartTime) {\n            this.expectStartTime = currentTime\n        }\n    }\n\n    public stop() {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp()\n    }\n\n    public stopDelay(delay: number) {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() + delay\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public isPending(): boolean {\n        return this.pendingDeadline !== -1\n    }\n\n    public isDangerousPending(): boolean {\n        return this.isTimeDangers(this.pendingDeadline)\n    }\n\n    public isDangerousDeadline(): boolean {\n        return this.isTimeDangers(this.getActualDeadline())\n    }\n\n    public isDangerous(): boolean {\n        return this.isDangerousPending() || this.isDangerousDeadline()\n    }\n\n    /**\n     * dealine 距离还有2个小时，或者已经过了\n     */\n    private isTimeDangers(deadline: number): boolean {\n        if (deadline <= 0) {\n            return false\n        }\n\n        if (deadline - Utils.getTimestamp() <= 2 * 60 * 60 * 1000) {\n            return true\n        }\n\n        return false\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    // 返回毫秒数\n    // todo rename getAllDoingDuration\n    public getAllDuration(): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b) + this.allAdjusts()\n    }\n\n    public allAdjusts(): number {\n        if(this.adjusts.length === 0){\n            return 0\n        }\n        return this.adjusts.map((adjust) => adjust.adjust).reduce((a, b) => a + b);\n    }\n\n    public getAllDurationInDur(limitDur: Duration): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getLimitDur(index === this.doingDurs.length - 1, limitDur)).reduce((a, b) => a + b) + this.allDurAdjusts(limitDur)\n    }\n\n    public allDurAdjusts(limitDur: Duration): number {\n        const s = this.adjusts.filter((adjust) => limitDur.isIn(adjust.adjustTime))\n        if(s.length === 0){\n            return 0\n        }\n        return s.map((adjust) => adjust.adjust).reduce((a, b) => a + b);\n    }\n\n    public getActualDeadline(): number {\n        if (this.deadlines.length === 0) {\n            return -1\n        }\n\n        return this.deadlines[this.deadlines.length - 1]\n    }\n\n    public isHaveDeadline(): boolean {\n        return this.getActualDeadline() > 0\n    }\n\n    public getActualExpectConsume(): number {\n        if (this.expectConsumes.length === 0) {\n            return -1\n        }\n\n        return this.expectConsumes[this.expectConsumes.length - 1]\n    }\n\n    public isExpectConsume(): boolean {\n        return this.getActualExpectConsume() > 0\n    }\n\n    // 超出预期时间返回多花的时间，负值\n    // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n    public getLeftExpectConsumeTime(): number {\n        let left = this.getActualExpectConsume() - this.getAllDuration()\n\n        // 不用打印\n        // if (left < 0) {\n        //     console.error(\"超出预期时间\")\n        // }\n\n        return left\n    }\n}\n\nclass Duration {\n    public start: number = -1\n    public end: number = -1\n    public name: string = \"\"\n\n    // todo 没法重载\n    public init(start: number) {\n        this.start = start\n    }\n    public init2(start: number, end?: number) {\n        this.start = start\n        if (end != undefined) {\n            this.end = end\n        }\n    }\n\n    public isIn(timeStamp: number) {\n        return timeStamp >= this.start && timeStamp <= this.end\n    }\n\n    public getDur(isDoing: boolean = false): number {\n        const dur = this.getDurDur(isDoing)\n        if (dur === null) {\n            return 0\n        }\n        return dur.end - dur.start\n    }\n\n    public getDurDur(isDoing: boolean = false): Duration | null {\n        let end = this.end\n        if (end == -1 && isDoing) {\n            end = Utils.getTimestamp()\n        }\n        if (end == -1) {\n            console.error(\"这段时间未结束\")\n            return null\n        }\n        return Duration.create(this.start, end)\n    }\n\n    public getLimitDur(isDoing: boolean, limitDur: Duration): number {\n        const dur = this.getDurDur(isDoing)?.getJoin(limitDur)\n        if (dur === null || dur === undefined) {\n            return 0\n        }\n        return dur.end - dur.start\n    }\n\n    public isValid(isDoing: boolean) {\n        if (!isDoing && this.end == -1) return false\n        return true\n    }\n\n    public static create(start?: number, end?: number, name?: string): Duration {\n        let dur = new Duration()\n        if (start != undefined) {\n            dur.start = start\n        }\n        if (end != undefined) {\n            dur.end = end\n        }\n        if (name != undefined) {\n            dur.name = name\n        }\n        return dur\n    }\n\n    public getJoin(limitDur: Duration): Duration | null {\n        if (this.end <= limitDur.start || this.start >= limitDur.end) {\n            return null\n        }\n\n        return Duration.create(Math.max(limitDur.start, this.start), Math.min(limitDur.end, this.end))\n    }\n}\n\nclass AdjustConsume {\n    // 调整耗时 单位毫秒\n    public adjust: number = -1\n    public adjustTime: number = -1\n\n    public static create(adjust: number): AdjustConsume {\n        let dur = new AdjustConsume()\n        dur.adjust = adjust\n        dur.adjustTime = Utils.getTimestamp()\n        return dur\n    }\n}\n\nclass CycleRecord {\n    public id: number = -1\n    // 可以不断更新\n    public _startTime: number[] = []\n    // 单位天，其实不是gap，是 gap-1\n    public _gap: number[] = []\n\n    // ---- 模板\n    public title: string = \"undefine\"\n    public level: number = 3\n    public expectConsumes: number = -1\n    // ---- 模板\n\n    public init(gap: number, title: string, level: number) {\n        this.id = Utils.generateId()\n        this.title = title\n        this.level = level\n        this._gap.push(gap)\n        this._startTime.push(Utils.getTimestamp())\n    }\n\n    public getGap(): number {\n        if (this._gap.length === 0) {\n            return -1\n        }\n        return this._gap[this._gap.length - 1]\n    }\n\n    public setGap(gap: number) {\n        this._gap.push(gap)\n    }\n\n    public getStartTime(): number {\n        if (this._startTime.length === 0) {\n            return -1\n        }\n        return this._startTime[this._startTime.length - 1]\n    }\n\n    public setStartTime(startTime: number) {\n        this._startTime.push(startTime)\n    }\n\n    /**\n     * 只要 currentTimeStamp 这天 0点-24点 在 starttime + n*gap 的这天 0点-24点，就创建任务\n     * 创建的方式是找最新创建的一个任务，然后拷贝它的属性（这个有点复杂，要考虑没有最新创建任务的情况，暂时不这么实现，而是使用模板吧）\n     */\n    public isTimeToCreateTask(): boolean {\n        let currentZero = DateUtils.getCurrentDayStamp(0)\n        let startZero = DateUtils.getSomeDayStamp(this.getStartTime(), 0)\n        return (currentZero - startZero) % (this.getGap() * 24 * 3600 * 1000) === 0\n    }\n\n    public createTask(): Task {\n        const newTask = new Task()\n        newTask.init(`[周期|${Format.formatTimeInDay2(Utils.getTimestamp())}] ${this.title}`)\n        newTask.level = this.level\n        newTask.expectConsumes.push(this.expectConsumes)\n        newTask.cycleId = this.id\n        return newTask\n    }\n}\n\nclass Note {\n    public content: string = \"\"\n\n    @Type(() => TimeLine)\n    public timeLines: TimeLine[] = []\n\n    public hasTimeLine(): boolean {\n        return this.timeLines.length !== 0\n    }\n\n    public endTimeLine(): TimeLine | null {\n        if (!this.hasTimeLine()) return null\n        return this.timeLines[this.timeLines.length - 1]\n    }\n\n    public getFormartTimeLines(): string {\n        return this.timeLines.slice().reverse().map((timeline) => {\n            if (timeline.isDivder) {\n                return `----- ${Format.formatTimeInDay(timeline.timeStamp)} -----`\n            } else {\n                return `${Format.formatTimeInSecond(timeline.timeStamp)} ${timeline.content}`\n            }\n        }).join(\"\\n\")\n    }\n}\n\nclass TimeLine {\n    public timeStamp: number = -1\n    public isDivder: boolean = false\n    public content: string = \"\"\n\n    public static createContentNode(content: string): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = Utils.getTimestamp()\n        t.content = content\n        return t\n    }\n\n    public static createDivNode(): TimeLine {\n        const t = new TimeLine()\n        t.timeStamp = Utils.getTimestamp()\n        t.isDivder = true\n        return t\n    }\n\n    public getTitled(title: string): TimeLine {\n        const copy = Object.assign({}, this)\n        // copy.content = `【${title}】${copy.content}`\n        copy.content = `(${title})${copy.content}`\n        return copy\n    }\n}\n\nclass StoreModel {\n    @Type(() => Task)\n    public tasks: Task[] = []\n\n    @Type(() => CycleRecord)\n    public cycleRecords: CycleRecord[] = []\n\n    public totalAdjustConsumeTime: number = 0\n\n    /**\n     * 筛选规则：\n     * 1. 所有 未完成 且 预期开始时间在今天endtime之前 的任务\n     * 2. 今天完成的任务\n     */\n    public getTasks(dur: Duration): Task[] {\n        return this.tasks.filter((value) => {\n            return (!value.isDone() && value.expectStartTime <= dur.end) || dur.isIn(value.doneTime)\n        })\n    }\n\n    public getCurrentDayDoingTasks(dur: Duration): Task[] {\n        return this.tasks.filter((task) => {\n            return task.doingDurs.find((taskDur) => {\n                return dur.isIn(taskDur.start)\n            }) !== undefined\n        })\n    }\n\n    public addTask(task: Task) {\n        if (this.containsProject(task.id)) return\n        this.tasks.push(task)\n    }\n\n    public addCycleRecord(cycleRecord: CycleRecord) {\n        if (this.containsCycleRecord(cycleRecord.id)) return\n        this.cycleRecords.push(cycleRecord)\n    }\n\n    public invokeAddCycleTask() {\n        this.cycleRecords.forEach(record => {\n            if (record.isTimeToCreateTask()) {\n                const isNotCreated = this.tasks.filter((task) => {\n                    const isSameId = task.cycleId === record.id\n                    const isTodayTask = DateUtils.getMyCurrentDayDur2(0).isIn(task.createTime)\n                    // console.log(`isNotCreated, isSameId:${isSameId} isTodayTask:${isTodayTask}`)\n                    return isSameId && isTodayTask\n                }).length === 0\n                if (isNotCreated) {\n                    // console.log(`create cycle task, record:${record.title}`)\n                    this.addTask(record.createTask())\n                }\n            }\n        });\n    }\n\n    public removeTask(task: Task): boolean {\n        if (!this.containsProject(task.id)) return false\n\n        let length = this.tasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.tasks[i].id === task.id) {\n                if (i === 0) {\n                    this.tasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.tasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.tasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    private containsProject(id: number): boolean {\n        return this.tasks.find(item => item.id === id) !== undefined\n    }\n\n    private containsCycleRecord(id: number): boolean {\n        return this.cycleRecords.find(item => item.id === id) !== undefined\n    }\n\n    public normalUpdate() {\n        this.invokeAddCycleTask()\n        this.orderTasks()\n    }\n\n    public orderTasks() {\n        this.tasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 正在做的放最前\n                if (a.isDoing()) {\n                    return -1\n                } else if (b.isDoing()) {\n                    return 1\n                } else {\n                    // 到时间的放前面\n                    if (a.isDangerous() && !b.isDangerous()) {\n                        return -1\n                    } else if (!a.isDangerous() && b.isDangerous()) {\n                        return 1\n                    } else {\n                        // 然后比较level\n                        if (a.level > b.level) {\n                            return 1\n                        } else if (a.level < b.level) {\n                            return -1\n                        } else {\n                            // 同样 level 比较创建时间\n                            if (a.createTime > b.createTime) {\n                                return -1\n                            } else if (a.createTime < b.createTime) {\n                                return 1\n                            } else {\n                                return 0\n                            }\n                        }\n                    }\n                }\n            }\n        })\n    }\n}\n\n\nexport { Task, Duration, StoreModel, AdjustConsume, Note, CycleRecord, TimeLine }"]},"metadata":{},"sourceType":"module"}