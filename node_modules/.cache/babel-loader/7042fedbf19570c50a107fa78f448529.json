{"ast":null,"code":"import _initializerDefineProperty from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";import _classCallCheck from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";import _initializerWarningHelper from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";var _dec,_class,_descriptor,_class2,_temp,_dec2,_class3,_descriptor2,_temp2;import Utils from'../utils/Utils';import{Type}from\"class-transformer\";var Task=(_dec=Type(function(){return Duration;}),(_class=(_temp=_class2=/*#__PURE__*/function(){function Task(){_classCallCheck(this,Task);this.id=-1;this.title=\"undefine\";this.note=new Note();this.level=3;this.createTime=-1;this.doneTime=-1;this.pendingDeadline=-1;this.pendingReason=\"\";this.deadlines=[];this.expectConsumes=[];_initializerDefineProperty(this,\"doingDurs\",_descriptor,this);}_createClass(Task,[{key:\"init\",// 反序列化不能有带参数的构造器\n// public constructor(title: string) {\n//     this.title = title\n//     this.createTime = Utils.getTimestamp()\n//     this.id = Utils.generateId() + Task.idCounter\n//     Task.idCounter = Task.idCounter + 1000\n// }\nvalue:function init(title){this.title=title;this.createTime=Utils.getTimestamp();this.id=Utils.generateId()+Task.idCounter;Task.idCounter=Task.idCounter+1000;}},{key:\"isSameTask\",value:function isSameTask(task){if(task===undefined){return false;}else{return this.id===task.id;}}},{key:\"isDoing\",value:function isDoing(){if(this.doingDurs.length===0){return false;}else{var lastTask=this.doingDurs[this.doingDurs.length-1];return lastTask.end===-1;}}},{key:\"lastStartTime\",value:function lastStartTime(){if(this.doingDurs.length===0){return-1;}else{var lastTask=this.doingDurs[this.doingDurs.length-1];return lastTask.start;}}},{key:\"start\",value:function start(){var duration=new Duration();duration.init(Utils.getTimestamp());this.doingDurs.push(duration);}},{key:\"stop\",value:function stop(){this.doingDurs[this.doingDurs.length-1].end=Utils.getTimestamp();}},{key:\"stopDelay\",value:function stopDelay(delay){this.doingDurs[this.doingDurs.length-1].end=Utils.getTimestamp()+delay;}},{key:\"isDone\",value:function isDone(){return this.doneTime!==-1;}},{key:\"isPending\",value:function isPending(){return this.pendingDeadline!==-1;}},{key:\"isDangerousPending\",value:function isDangerousPending(){return this.isTimeDangers(this.pendingDeadline);}},{key:\"isDangerousDeadline\",value:function isDangerousDeadline(){return this.isTimeDangers(this.getActualDeadline());}},{key:\"isDangerous\",value:function isDangerous(){return this.isDangerousPending()||this.isDangerousDeadline();}/**\n     * dealine 距离还有2个小时，或者已经过了\n     */},{key:\"isTimeDangers\",value:function isTimeDangers(deadline){if(deadline<=0){return false;}if(deadline-Utils.getTimestamp()<=2*60*60*1000){return true;}return false;}},{key:\"done\",value:function done(){this.doneTime=Utils.getTimestamp();}// 返回毫秒数\n// todo rename getAllDoingDuration\n},{key:\"getAllDuration\",value:function getAllDuration(){var _this=this;if(this.doingDurs.length===0){return 0;}return this.doingDurs.map(function(value,index){return value.getDur(index===_this.doingDurs.length-1);}).reduce(function(a,b){return a+b;});}},{key:\"getActualDeadline\",value:function getActualDeadline(){if(this.deadlines.length===0){return-1;}return this.deadlines[this.deadlines.length-1];}},{key:\"getActualExpectConsume\",value:function getActualExpectConsume(){if(this.expectConsumes.length===0){return-1;}return this.expectConsumes[this.expectConsumes.length-1];}// 超出预期时间返回多花的时间，负值\n// 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n},{key:\"getLeftExpectConsumeTime\",value:function getLeftExpectConsumeTime(){var left=this.getActualExpectConsume()-this.getAllDuration();if(left<0){console.error(\"超出预期时间\");}return left;}}]);return Task;}(),_class2.idCounter=0,_temp),(_descriptor=_applyDecoratedDescriptor(_class.prototype,\"doingDurs\",[_dec],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return[];}})),_class));var Duration=/*#__PURE__*/function(){function Duration(){_classCallCheck(this,Duration);this.start=-1;this.end=-1;}_createClass(Duration,[{key:\"init\",// todo 没法重载\nvalue:function init(start){this.start=start;}},{key:\"init2\",value:function init2(start,end){this.start=start;if(end!=undefined){this.end=end;}}},{key:\"isIn\",value:function isIn(timeStamp){return timeStamp>=this.start&&timeStamp<=this.end;}},{key:\"getDur\",value:function getDur(isDoing){var end=this.end;if(end==-1&&isDoing){end=Utils.getTimestamp();}if(end==-1){console.error(\"这段时间未结束\");return 0;}return end-this.start;}},{key:\"isValid\",value:function isValid(isDoing){if(!isDoing&&this.end==-1)return false;return true;}}]);return Duration;}();var Note=function Note(){_classCallCheck(this,Note);this.content=\"\";};var StoreModel=(_dec2=Type(function(){return Task;}),(_class3=(_temp2=/*#__PURE__*/function(){function StoreModel(){_classCallCheck(this,StoreModel);_initializerDefineProperty(this,\"tasks\",_descriptor2,this);}_createClass(StoreModel,[{key:\"getTasks\",/**\n     * 筛选规则：\n     * 1. 所有未完成的任务（之后要排除非当天的计划任务）\n     * 2. 今天完成的任务\n     */value:function getTasks(dur){return this.tasks.filter(function(value){return!value.isDone()||dur.isIn(value.doneTime);});}},{key:\"addTask\",value:function addTask(task){if(this.containsProject(task.id))return;this.tasks.push(task);}},{key:\"removeTask\",value:function removeTask(task){if(!this.containsProject(task.id))return false;var length=this.tasks.length;for(var i=0;i<length;i++){if(this.tasks[i].id===task.id){if(i===0){this.tasks.shift();//删除并返回数组的第一个元素\n}else if(i===length-1){this.tasks.pop();//删除并返回数组的最后一个元素\n}else{this.tasks.splice(i,1);//删除下标为i的元素\n}return true;}}return false;}},{key:\"containsProject\",value:function containsProject(id){return this.tasks.find(function(item){return item.id===id;})!==undefined;}},{key:\"orderTasks\",value:function orderTasks(){this.tasks.sort(function(a,b){// 完成的放最后\nif(a.isDone()&&!b.isDone()){return 1;}else if(!a.isDone()&&b.isDone()){return-1;}else{// 正在做的放最前\nif(a.isDoing()){return-1;}else if(b.isDoing()){return 1;}else{// 到时间的放前面\nif(a.isDangerous()&&!b.isDangerous()){return-1;}else if(!a.isDangerous()&&b.isDangerous()){return 1;}else{// 然后比较level\nif(a.level>b.level){return 1;}else if(a.level<b.level){return-1;}else{// 同样 level 比较创建时间\nif(a.createTime>b.createTime){return-1;}else if(a.createTime<b.createTime){return 1;}else{return 0;}}}}}});}}]);return StoreModel;}(),_temp2),(_descriptor2=_applyDecoratedDescriptor(_class3.prototype,\"tasks\",[_dec2],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return[];}})),_class3));export{Task,Duration,StoreModel,Note};","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/model/model.ts"],"names":["Utils","Type","Task","Duration","id","title","note","Note","level","createTime","doneTime","pendingDeadline","pendingReason","deadlines","expectConsumes","getTimestamp","generateId","idCounter","task","undefined","doingDurs","length","lastTask","end","start","duration","init","push","delay","isTimeDangers","getActualDeadline","isDangerousPending","isDangerousDeadline","deadline","map","value","index","getDur","reduce","a","b","left","getActualExpectConsume","getAllDuration","console","error","timeStamp","isDoing","content","StoreModel","dur","tasks","filter","isDone","isIn","containsProject","i","shift","pop","splice","find","item","sort","isDangerous"],"mappings":"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","sourcesContent":["import Utils from '../utils/Utils'\nimport { Type } from \"class-transformer\";\n\nclass Task {\n    // todo delete 内存id增加器（因为mock初始化太快了，都在一个毫秒内）\n    private static idCounter = 0\n\n    public id: number = -1\n\n    public title: string = \"undefine\"\n    public note: Note = new Note()\n\n    public level: number = 3\n\n    public createTime: number = -1\n    public doneTime: number = -1\n\n    public pendingDeadline: number = -1\n    public pendingReason: string = \"\"\n\n    // 可修改，最后一个有效\n    public deadlines: number[] = []\n    // 预计花费时间，单位毫秒，可修改，最后一个有效\n    public expectConsumes: number[] = []\n\n    @Type(() => Duration)\n    public doingDurs: Duration[] = []\n\n    // 反序列化不能有带参数的构造器\n    // public constructor(title: string) {\n    //     this.title = title\n    //     this.createTime = Utils.getTimestamp()\n\n    //     this.id = Utils.generateId() + Task.idCounter\n    //     Task.idCounter = Task.idCounter + 1000\n    // }\n\n    public init(title: string) {\n        this.title = title\n        this.createTime = Utils.getTimestamp()\n\n        this.id = Utils.generateId() + Task.idCounter\n        Task.idCounter = Task.idCounter + 1000\n    }\n\n    public isSameTask(task: Task | undefined): boolean {\n        if (task === undefined) {\n            return false\n        } else {\n            return this.id === task.id\n        }\n    }\n\n    public isDoing(): boolean {\n        if (this.doingDurs.length === 0) {\n            return false\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.end === -1\n        }\n    }\n\n    public lastStartTime(): number {\n        if (this.doingDurs.length === 0) {\n            return -1\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.start\n        }\n    }\n\n    public start() {\n        let duration = new Duration()\n        duration.init(Utils.getTimestamp())\n        this.doingDurs.push(duration)\n    }\n\n    public stop() {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp()\n    }\n\n    public stopDelay(delay: number) {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() + delay\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public isPending(): boolean {\n        return this.pendingDeadline !== -1\n    }\n\n    public isDangerousPending(): boolean {\n        return this.isTimeDangers(this.pendingDeadline)\n    }\n\n    public isDangerousDeadline(): boolean {\n        return this.isTimeDangers(this.getActualDeadline())\n    }\n\n    public isDangerous(): boolean {\n        return this.isDangerousPending() || this.isDangerousDeadline()\n    }\n\n    /**\n     * dealine 距离还有2个小时，或者已经过了\n     */\n    private isTimeDangers(deadline: number): boolean {\n        if (deadline <= 0) {\n            return false\n        }\n\n        if (deadline - Utils.getTimestamp() <= 2 * 60 * 60 * 1000) {\n            return true\n        }\n\n        return false\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    // 返回毫秒数\n    // todo rename getAllDoingDuration\n    public getAllDuration(): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b)\n    }\n\n    public getActualDeadline(): number {\n        if (this.deadlines.length === 0) {\n            return -1\n        }\n\n        return this.deadlines[this.deadlines.length - 1]\n    }\n\n    public getActualExpectConsume(): number {\n        if (this.expectConsumes.length === 0) {\n            return -1\n        }\n\n        return this.expectConsumes[this.expectConsumes.length - 1]\n    }\n\n    // 超出预期时间返回多花的时间，负值\n    // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n    public getLeftExpectConsumeTime(): number {\n        let left = this.getActualExpectConsume() - this.getAllDuration()\n        if (left < 0) {\n            console.error(\"超出预期时间\")\n        }\n        return left\n    }\n}\n\nclass Duration {\n    public start: number = -1\n    public end: number = -1\n\n    // todo 没法重载\n    public init(start: number) {\n        this.start = start\n    }\n    public init2(start: number, end?: number) {\n        this.start = start\n        if (end != undefined) {\n            this.end = end\n        }\n    }\n\n    public isIn(timeStamp: number) {\n        return timeStamp >= this.start && timeStamp <= this.end\n    }\n\n    public getDur(isDoing: boolean): number {\n        let end = this.end\n        if (end == -1 && isDoing) {\n            end = Utils.getTimestamp()\n        }\n        if (end == -1) {\n            console.error(\"这段时间未结束\")\n            return 0\n        }\n        return end - this.start\n    }\n\n    public isValid(isDoing: boolean) {\n        if (!isDoing && this.end == -1) return false\n        return true\n    }\n}\n\nclass Note {\n    public content: string = \"\"\n}\n\nclass StoreModel {\n    @Type(() => Task)\n    public tasks: Task[] = []\n\n    /**\n     * 筛选规则：\n     * 1. 所有未完成的任务（之后要排除非当天的计划任务）\n     * 2. 今天完成的任务\n     */\n    public getTasks(dur: Duration): Task[] {\n        return this.tasks.filter((value) => { return !value.isDone() || dur.isIn(value.doneTime) })\n    }\n\n    public addTask(task: Task) {\n        if (this.containsProject(task.id)) return\n\n        this.tasks.push(task)\n    }\n\n    public removeTask(task: Task): boolean {\n        if (!this.containsProject(task.id)) return false\n\n        let length = this.tasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.tasks[i].id === task.id) {\n                if (i === 0) {\n                    this.tasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.tasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.tasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    private containsProject(id: number): boolean {\n        return this.tasks.find(item => item.id === id) !== undefined\n    }\n\n    public orderTasks() {\n        this.tasks.sort((a, b) => {\n            // 完成的放最后\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                // 正在做的放最前\n                if (a.isDoing()) {\n                    return -1\n                } else if (b.isDoing()) {\n                    return 1\n                } else {\n                    // 到时间的放前面\n                    if (a.isDangerous() && !b.isDangerous()) {\n                        return -1\n                    } else if (!a.isDangerous() && b.isDangerous()) {\n                        return 1\n                    } else {\n                        // 然后比较level\n                        if (a.level > b.level) {\n                            return 1\n                        } else if (a.level < b.level) {\n                            return -1\n                        } else {\n                            // 同样 level 比较创建时间\n                            if (a.createTime > b.createTime) {\n                                return -1\n                            } else if (a.createTime < b.createTime) {\n                                return 1\n                            } else {\n                                return 0\n                            }\n                        }\n                    }\n                }\n            }\n        })\n    }\n}\n\n\nexport { Task, Duration, StoreModel, Note }"]},"metadata":{},"sourceType":"module"}