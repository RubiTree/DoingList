{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Button, Modal } from 'antd';\nimport stores from '../stores';\nimport Format from '../utils/Format';\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`;\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`;\n\nconst ContentLayout = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel');\n  const {\n    currentTask\n  } = stores.useStore(CurrentTaskKey);\n  const {\n    save\n  } = stores.useStore('mainmodel');\n  const [content, setContent] = useState(\"\"); // toolsbar\n\n  const {\n    currentDoingTask,\n    setCurrentDoingTask\n  } = stores.useStore(CurrentDoingTaskKey);\n  /* ---------------------------初始化------------------------------- */\n  // 渲染当前note\n\n  const [lastTask, setLastTask] = useState(undefined);\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return;\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask);\n      setContent(currentTask.note.content);\n    }\n  });\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event) {\n    event.preventDefault();\n    saveToLocal(event, false);\n  }\n\n  function saveToLocal(event, isManual) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return;\n    currentTask.note.content = content;\n    save();\n    if (isManual) message.info(\"已保存\");\n  }\n  /* ---------------------------------------------------------- */\n\n\n  function deleteTask(event) {\n    if (currentTask === undefined) return;\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\");\n          save();\n        } else {\n          message.error(\"删除任务失败\");\n        }\n      }\n\n    });\n  }\n\n  function doneTask(event, task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`);\n      return;\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n\n        onOk() {\n          _realDone(task);\n        }\n\n      });\n      return;\n    }\n\n    task.stop();\n    setCurrentDoingTask(undefined);\n\n    _realDone(task);\n  }\n\n  function _realDone(task) {\n    task.done();\n    storeModel.orderTasks();\n    message.success(\"任务已完成\");\n    save();\n  }\n\n  function startTask(event, task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`);\n      return;\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`);\n      return;\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`);\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop();\n    }\n\n    task.start();\n    setCurrentDoingTask(task);\n    save();\n  }\n  /* ---------------------------------------------------------- */\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: e => deleteTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: e => doneTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: e => startTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(Dropdown, {\n    overlay: getMenu(task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      paddingLeft: 5\n    },\n    className: \"ant-dropdown-link\",\n    onClick: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, formartLevel(task.level), \" \", /*#__PURE__*/React.createElement(DownOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 46\n    }\n  })))), /*#__PURE__*/React.createElement(Editor, {\n    placeholder: \"\\u4EFB\\u52A1\\u65E5\\u5FD7\\uFF08\\u81EA\\u52A8\\u4FDD\\u5B58\\uFF09\",\n    value: content,\n    onChange: event => setContent(event.target.value),\n    onBlur: e => onBlur(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ContentLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx"],"names":["React","useState","useEffect","styled","Input","message","Button","Modal","stores","Format","CurrentTaskKey","CurrentDoingTaskKey","Container","div","Editor","TextArea","ButtonGroup","Group","ContentLayout","storeModel","useStore","currentTask","save","content","setContent","currentDoingTask","setCurrentDoingTask","lastTask","setLastTask","undefined","isSameTask","note","onBlur","event","preventDefault","saveToLocal","isManual","info","deleteTask","confirm","title","onOk","removeTask","success","error","doneTask","task","isDone","formatTimeInMs","doneTime","isDoing","_realDone","stop","done","orderTasks","startTask","id","lastStartTime","start","e","getMenu","paddingLeft","formartLevel","level","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Button, Modal } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n    \n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any, task: Task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.orderTasks()\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function startTask(event: any, task: Task) {\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n      return\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop()\n    }\n\n    task.start()\n    setCurrentDoingTask(task)\n    save()\n  }\n\n  /* ---------------------------------------------------------- */\n\n  return (\n    <Container>\n      <ButtonGroup>\n              {/* 点击整行就是查看且开始，view是只查看不开始。暂时用不着吧 */}\n              {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n              <Button size=\"small\" onClick={(e) => deleteTask(e)}>D</Button>\n              {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n              <Button size=\"small\" onClick={(e) => doneTask(e)}>Done</Button>\n              <Button size=\"small\" onClick={(e) => startTask(e)}>Start</Button>\n\n              <Dropdown  overlay={getMenu(task)}>\n                <a style={{ paddingLeft: 5 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                  {formartLevel(task.level)} <DownOutlined />\n                </a>\n              </Dropdown>\n              \n            </ButtonGroup>\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;"]},"metadata":{},"sourceType":"module"}