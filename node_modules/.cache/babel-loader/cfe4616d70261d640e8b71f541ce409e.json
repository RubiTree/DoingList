{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport TaskInfoFormat from '../utils/TaskInfoFormat';\nimport Format from '../utils/Format';\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport moment from 'moment';\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\nconst Div = styled.div`\n`;\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`;\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`;\n\nconst ContentLayout = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel');\n  const {\n    currentTask\n  } = stores.useStore(CurrentTaskKey);\n  const {\n    save\n  } = stores.useStore('mainmodel');\n  const [content, setContent] = useState(\"\");\n  const [expectTime, setExpectTime] = useState(-1);\n  const [deadline, setDeadlineUI] = useState(null);\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState(null); // toolsbar\n\n  const {\n    currentDoingTask,\n    setCurrentDoingTask\n  } = stores.useStore(CurrentDoingTaskKey);\n  /* ---------------------------初始化------------------------------- */\n  // 渲染当前note\n\n  const [lastTask, setLastTask] = useState(undefined);\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return;\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask);\n      setContent(currentTask.note.content); // todo 这部分逻辑抽出去\n\n      const expectTime = currentTask.getActualExpectConsume();\n\n      if (expectTime == -1) {\n        setExpectTime(expectTime);\n      } else {\n        setExpectTime(expectTime / (3600 * 1000));\n      }\n\n      setPendingUI(currentTask.isPending());\n      setPendingReason(currentTask.pendingReason);\n      setPendingTimeUI(getPendingDeadlineTime(currentTask));\n      setDeadlineUI(getDeadlineTime(currentTask));\n      storeModel.orderTasks();\n    }\n  });\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event) {\n    event.preventDefault();\n    saveToLocal(event, false);\n  }\n\n  function saveToLocal(event, isManual) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return;\n    currentTask.note.content = content;\n    save();\n    if (isManual) message.info(\"已保存\");\n  }\n  /* ------------------------------toolsbar---------------------------- */\n\n\n  function deleteTask(event) {\n    if (currentTask === undefined) return;\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\");\n          save();\n        } else {\n          message.error(\"删除任务失败\");\n        }\n      }\n\n    });\n  }\n\n  function doneTask(event) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`);\n      return;\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n\n        onOk() {\n          _realDone(task);\n        }\n\n      });\n      return;\n    }\n\n    task.stop();\n    setCurrentDoingTask(undefined);\n\n    _realDone(task);\n  }\n\n  function _realDone(task) {\n    task.done();\n    storeModel.orderTasks();\n    message.success(\"任务已完成\");\n    save();\n  }\n\n  function onChooseDeadline(value) {\n    if (currentTask === undefined) return;\n    const task = currentTask; // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf());\n    setDeadlineUI(getDeadlineTime(currentTask));\n    save();\n  }\n\n  function getDeadlineTime(task) {\n    const deadline = task.getActualDeadline();\n\n    if (deadline > 0) {\n      return moment(deadline);\n    }\n\n    return null;\n  }\n\n  function getShowTips() {\n    if (currentTask === undefined) return \"\";\n    const task = currentTask;\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task);\n    return result;\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1); // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000);\n    }\n  }\n  /* ---------------------------------------------------------- */\n\n\n  function onChoosePendingDeadline(value) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`);\n      return;\n    }\n\n    const pendingLine = value.valueOf();\n    const deadline = task.getActualDeadline();\n\n    if (deadline > 0 && pendingLine > deadline) {\n      message.error(`Pending时间(${Format.formatTimeInMinute(pendingLine)})晚于Deadline(${Format.formatTimeInMinute(deadline)})，请重新设置`);\n      return;\n    }\n\n    if (!isTimeValid()) {}\n\n    task.pendingDeadline = pendingLine;\n    setPendingTimeUI(getPendingDeadlineTime(task));\n    save();\n  }\n\n  function onChangeExpectStartTime(value, task) {\n    const expectStartTime = value.valueOf();\n    const deadline = task.getActualDeadline();\n\n    if (deadline > 0 && expectStartTime > deadline) {\n      message.error(`预期开始时间(${Format.formatTimeInMinute(expectStartTime)})晚于Deadline(${Format.formatTimeInMinute(deadline)})，请重新设置`);\n      return;\n    }\n\n    task.pendingDeadline = expectStartTime;\n    setPendingTimeUI(getPendingDeadlineTime(task));\n    save();\n  }\n\n  function isTimeValid(time, timeName, ...limitDurations) {\n    let isValid = true;\n\n    for (let index = 0; index < limitDurations.length; index++) {\n      const dur = limitDurations[index];\n\n      if (dur.start > 0 && time < dur.start) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})早于${dur.start}(${Format.formatTimeInMinute(dur.start)})，请重新设置`);\n        isValid = false;\n      } else if (dur.end > 0 && time > dur.end) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})晚于${dur.end}(${Format.formatTimeInMinute(dur.end)})，请重新设置`);\n        isValid = false;\n      }\n\n      if (!isValid) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getPendingDeadlineTime(task) {\n    const deadline = task.pendingDeadline;\n\n    if (deadline > 0) {\n      return moment(deadline);\n    }\n\n    return null;\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n    task.pendingReason = pendingReason;\n    save();\n  }\n\n  function setPending(pendingStatus) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1;\n    }\n\n    setPendingUI(pendingStatus);\n    save();\n  }\n  /* ---------------------------------------------------------- */\n\n\n  if (currentTask === undefined) return null;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => deleteTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => doneTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, \"Done\")), \"Dead:\", /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    value: deadline,\n    onOk: value => onChooseDeadline(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }), getShowTips(), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '100px'\n    },\n    value: expectTime,\n    placeholder: \"\\u82B1\\u8D39\\u65F6\\u95F4 \\u56DE\\u8F66\\u4FDD\\u5B58\",\n    prefix: \"\\u9884\\u8BA1\",\n    suffix: \"h\",\n    onChange: event => setExpectTime(Number(event.target.value)),\n    onPressEnter: changeExceptTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }), \"Start:\", /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    value: deadline,\n    onOk: value => onChooseDeadline(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }), getShowTips()), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    style: {\n      marginLeft: '9px',\n      marginRight: '5px'\n    },\n    checkedChildren: \"Pending\",\n    unCheckedChildren: \"No Pending\",\n    checked: isPending,\n    onChange: event => setPending(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }), \"Pend:\", /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    value: pendingTime,\n    onOk: value => onChoosePendingDeadline(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: 'auto'\n    },\n    value: pendingReason,\n    prefix: \"\\u539F\\u56E0:\",\n    placeholder: \"\\u81EA\\u52A8\\u4FDD\\u5B58\",\n    onChange: event => setPendingReason(event.target.value),\n    onBlur: savePendingStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  })), currentTask !== undefined && !currentTask.isDoing() && /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, \"\\u9884\\u671F\\u5F00\\u59CB\\u65F6\\u95F4\\uFF1A\", /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    value: moment(currentTask.expectStartTime),\n    onOk: value => onChangeExpectStartTime(value, currentTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Editor, {\n    placeholder: \"\\u4EFB\\u52A1\\u65E5\\u5FD7\\uFF08\\u81EA\\u52A8\\u4FDD\\u5B58\\uFF09\",\n    value: content,\n    onChange: event => setContent(event.target.value),\n    onBlur: e => onBlur(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ContentLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx"],"names":["React","useState","useEffect","styled","Input","message","Switch","Button","Modal","DatePicker","stores","TaskInfoFormat","Format","CurrentTaskKey","CurrentDoingTaskKey","moment","Container","div","Div","Editor","TextArea","ButtonGroup","Group","ContentLayout","storeModel","useStore","currentTask","save","content","setContent","expectTime","setExpectTime","deadline","setDeadlineUI","isPending","setPendingUI","pendingReason","setPendingReason","pendingTime","setPendingTimeUI","currentDoingTask","setCurrentDoingTask","lastTask","setLastTask","undefined","isSameTask","note","getActualExpectConsume","getPendingDeadlineTime","getDeadlineTime","orderTasks","onBlur","event","preventDefault","saveToLocal","isManual","info","deleteTask","confirm","title","onOk","removeTask","success","error","doneTask","task","isDone","formatTimeInMs","doneTime","isDoing","_realDone","stop","done","onChooseDeadline","value","deadlines","push","valueOf","getActualDeadline","getShowTips","result","getDoingStatusTips","getConsumed","getDeadline","getConsumeExpected","changeExceptTime","expectConsumes","onChoosePendingDeadline","pendingLine","formatTimeInMinute","isTimeValid","pendingDeadline","onChangeExpectStartTime","expectStartTime","time","timeName","limitDurations","isValid","index","length","dur","start","end","savePendingStatus","setPending","pendingStatus","e","width","Number","target","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n  const [expectTime, setExpectTime] = useState(-1);\n  const [deadline, setDeadlineUI] = useState<any>(null);\n\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState<any>(null);\n\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      // todo 这部分逻辑抽出去\n      const expectTime = currentTask.getActualExpectConsume()\n      if (expectTime == -1) {\n        setExpectTime(expectTime)\n      } else {\n        setExpectTime(expectTime / (3600 * 1000))\n      }\n\n      setPendingUI(currentTask.isPending())\n      setPendingReason(currentTask.pendingReason)\n      setPendingTimeUI(getPendingDeadlineTime(currentTask))\n\n      setDeadlineUI(getDeadlineTime(currentTask))\n\n      storeModel.orderTasks()\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.orderTasks()\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    setDeadlineUI(getDeadlineTime(currentTask))\n    save()\n  }\n\n  function getDeadlineTime(task: Task): any {\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000)\n    }\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onChoosePendingDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`)\n      return\n    }\n\n    const pendingLine = value.valueOf()\n    const deadline = task.getActualDeadline()\n    if (deadline > 0 && pendingLine > deadline) {\n      message.error(`Pending时间(${Format.formatTimeInMinute(pendingLine)})晚于Deadline(${Format.formatTimeInMinute(deadline)})，请重新设置`)\n      return\n    }\n\n    if(!isTimeValid()){\n\n    }\n\n    task.pendingDeadline = pendingLine\n    setPendingTimeUI(getPendingDeadlineTime(task))\n    save()\n  }\n\n  function onChangeExpectStartTime(value: any, task: Task) {\n    const expectStartTime = value.valueOf()\n\n    const deadline = task.getActualDeadline()\n    if (deadline > 0 && expectStartTime > deadline) {\n      message.error(`预期开始时间(${Format.formatTimeInMinute(expectStartTime)})晚于Deadline(${Format.formatTimeInMinute(deadline)})，请重新设置`)\n      return\n    }\n\n\n    task.pendingDeadline = expectStartTime\n    setPendingTimeUI(getPendingDeadlineTime(task))\n    save()\n  }\n\n  function isTimeValid(time: number, timeName: string, ...limitDurations: Duration[]): boolean {\n    let isValid = true\n    for (let index = 0; index < limitDurations.length; index++) {\n      const dur = limitDurations[index];\n      if (dur.start > 0 && time < dur.start) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})早于${dur.start}(${Format.formatTimeInMinute(dur.start)})，请重新设置`)\n        isValid = false\n      } else if (dur.end > 0 && time > dur.end) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})晚于${dur.end}(${Format.formatTimeInMinute(dur.end)})，请重新设置`)\n        isValid = false\n      }\n      if (!isValid) {\n        return false\n      }\n    }\n    return true\n  }\n\n  function getPendingDeadlineTime(task: Task): any {\n    const deadline = task.pendingDeadline\n\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    task.pendingReason = pendingReason\n    save()\n  }\n\n  function setPending(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1\n    }\n    setPendingUI(pendingStatus)\n    save()\n  }\n\n  /* ---------------------------------------------------------- */\n\n  if (currentTask === undefined) return null\n\n  return (\n    <Container>\n      {/* todo 没有 currentTask 就不展示 */}\n\n      {/* 不加这个 div 会换行 */}\n      <Div>\n        <ButtonGroup>\n          {/* 点击整行就是查看且开始，view是只查看不开始。暂时用不着吧 */}\n          {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n          <Button onClick={(e) => deleteTask(e)}>D</Button>\n          {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n          <Button onClick={(e) => doneTask(e)}>Done</Button>\n\n        </ButtonGroup>\n\n        Dead:\n        <DatePicker showTime value={deadline} onOk={value => onChooseDeadline(value)} />\n        {getShowTips()}\n\n        <Input style={{ width: '100px' }} value={expectTime} placeholder=\"花费时间 回车保存\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onPressEnter={changeExceptTime} />\n\n        Start:\n        <DatePicker showTime value={deadline} onOk={value => onChooseDeadline(value)} />\n        {/* 还有多久开始 */}\n        {getShowTips()}\n      </Div>\n\n      <Div>\n        <Switch style={{ marginLeft: '9px', marginRight: '5px' }} checkedChildren=\"Pending\" unCheckedChildren=\"No Pending\" checked={isPending} onChange={(event) => setPending(event)} />\n\n        Pend:\n        <DatePicker showTime value={pendingTime} onOk={value => onChoosePendingDeadline(value)} />\n\n        <Input style={{ width: 'auto' }} value={pendingReason} prefix=\"原因:\" placeholder=\"自动保存\" onChange={(event) => setPendingReason(event.target.value)} onBlur={savePendingStatus} />\n      </Div>\n\n      {(currentTask !== undefined && !currentTask.isDoing()) &&\n        <Div>\n          预期开始时间：\n        <DatePicker showTime value={moment(currentTask.expectStartTime)} onOk={value => onChangeExpectStartTime(value, currentTask)} />\n        </Div>\n      }\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;"]},"metadata":{},"sourceType":"module"}