{"ast":null,"code":"class Utils {\n  static isStringEmpty(obj) {\n    if (typeof obj === \"undefined\" || obj === null || obj === \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static exportContentToClipboard(content) {\n    let transfer = document.createElement('textarea'); // 不这么设置屏幕会跳，具体哪儿有问题还没确定\n\n    transfer.style.cssText = \"width:30%;padding:2%;min-width: 100px;opacity: 0.5;color: rgb(255, 255, 255);line-height: 18px;text-align: center;border-radius: 5px;position: fixed;top: 50%;left: 30%;z-index: 999999;background: rgb(0, 0, 0);font-size: 15px;\";\n    document.body.appendChild(transfer);\n    transfer.value = content; // 这里表示想要复制的内容\n\n    transfer.focus();\n    transfer.select();\n\n    if (document.execCommand('copy')) {\n      document.execCommand('copy');\n    }\n\n    transfer.blur();\n    document.body.removeChild(transfer);\n  }\n\n  static downloadFile(fileName, content) {\n    console.log(\"download\"); // 创建隐藏的可下载链接\n\n    var eleLink = document.createElement('a');\n    eleLink.download = fileName;\n    eleLink.style.display = 'none'; // 字符内容转变成blob地址\n\n    var blob = new Blob([content]);\n    eleLink.href = URL.createObjectURL(blob); // 触发点击\n\n    document.body.appendChild(eleLink);\n    eleLink.click(); // 然后移除\n\n    document.body.removeChild(eleLink);\n  }\n\n  static generateId() {\n    return new Date().getTime();\n  } // rename currentTimpstamp\n\n\n  static getTimestamp() {\n    return new Date().getTime();\n  }\n\n  static match(src, regex) {\n    return src.search(new RegExp(regex, 'i')) > -1;\n  } // todo 不能重载吗？\n\n\n  static matchs(src, regExp) {\n    return src.search(regExp) > -1;\n  }\n\n  static getRandomColor() {\n    return '#' + (Math.random() * 0xffffff << 0).toString(16);\n  }\n\n  static hasIntersection(start1, end1, start2, end2) {\n    if (end2 < start1 || end1 < start2) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  static removeObject(array, object) {\n    let length = this.length;\n\n    for (let i = 0; i < length; i++) {\n      if (array[i] === object) {\n        if (i === 0) {\n          array.shift(); //删除并返回数组的第一个元素\n        } else if (i === length - 1) {\n          array.pop(); //删除并返回数组的最后一个元素\n        } else {\n          array.splice(i, 1); //删除下标为i的元素\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default Utils;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/utils/Utils.ts"],"names":["Utils","isStringEmpty","obj","exportContentToClipboard","content","transfer","document","createElement","style","cssText","body","appendChild","value","focus","select","execCommand","blur","removeChild","downloadFile","fileName","console","log","eleLink","download","display","blob","Blob","href","URL","createObjectURL","click","generateId","Date","getTime","getTimestamp","match","src","regex","search","RegExp","matchs","regExp","getRandomColor","Math","random","toString","hasIntersection","start1","end1","start2","end2","removeObject","array","object","length","i","shift","pop","splice"],"mappings":"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","sourcesContent":["\nclass Utils {\n    public static isStringEmpty(obj: any): boolean {\n        if (typeof obj === \"undefined\" || obj === null || obj === \"\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static exportContentToClipboard(content: string) {\n        let transfer = document.createElement('textarea');\n        // 不这么设置屏幕会跳，具体哪儿有问题还没确定\n        transfer.style.cssText = \"width:30%;padding:2%;min-width: 100px;opacity: 0.5;color: rgb(255, 255, 255);line-height: 18px;text-align: center;border-radius: 5px;position: fixed;top: 50%;left: 30%;z-index: 999999;background: rgb(0, 0, 0);font-size: 15px;\";\n        document.body.appendChild(transfer);\n        transfer.value = content;  // 这里表示想要复制的内容\n        transfer.focus();\n        transfer.select();\n        if (document.execCommand('copy')) {\n            document.execCommand('copy');\n        }\n        transfer.blur();\n        document.body.removeChild(transfer);\n    }\n\n    public static downloadFile(fileName: string, content: string) {\n        console.log(\"download\")\n        // 创建隐藏的可下载链接\n        var eleLink = document.createElement('a');\n        eleLink.download = fileName;\n        eleLink.style.display = 'none';\n        // 字符内容转变成blob地址\n        var blob = new Blob([content]);\n        eleLink.href = URL.createObjectURL(blob);\n        // 触发点击\n        document.body.appendChild(eleLink);\n        eleLink.click();\n        // 然后移除\n        document.body.removeChild(eleLink);\n    }\n\n    public static generateId(): number {\n        return (new Date()).getTime()\n    }\n\n    // rename currentTimpstamp\n    public static getTimestamp(): number {\n        return (new Date()).getTime()\n    }\n\n    public static match(src: string, regex: string): boolean {\n        return src.search(new RegExp(regex, 'i')) > -1\n    }\n\n    // todo 不能重载吗？\n    public static matchs(src: string, regExp: RegExp): boolean {\n        return src.search(regExp) > -1\n    }\n\n    public static getRandomColor(): string {\n        return '#' + (Math.random() * 0xffffff << 0).toString(16);\n    }\n\n    public static hasIntersection(start1: number, end1: number, start2: number, end2: number): boolean {\n\n        if (end2 < start1 || end1 < start2) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    public static removeObject(array: any[], object: any): boolean {\n        let length = this.length;\n        for (let i = 0; i < length; i++) {\n            if (array[i] === object) {\n                if (i === 0) {\n                    array.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    array.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    array.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n\n        return false\n    }\n}\n\nexport default Utils"]},"metadata":{},"sourceType":"module"}