{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TimeLineLayout.tsx\";\nimport 'reflect-metadata';\nimport React from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport DateUtils from '../utils/DateUtils';\nimport Format from '../utils/Format';\nconst Div = styled.div`\n`;\n\nconst TimeLineLayout = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel'); // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  function getTimelines() {\n    return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0)).flatMap(task => task.note.timeLines).sort(timeline => timeline.timeStamp).reverse().map(timeline => {\n      if (timeline.isDivder) {\n        return `----- ${Format.formatTimeInDay(timeline.timeStamp)} -----`;\n      } else {\n        return `${Format.formatTimeInSecond(timeline.timeStamp)} ${timeline.content} \\n`;\n      }\n    }).join(\"\\n\");\n  }\n\n  return /*#__PURE__*/React.createElement(Div, {\n    style: {\n      overflow: \"scroll\",\n      whiteSpace: \"pre-wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, getTimelines());\n};\n\nexport default TimeLineLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TimeLineLayout.tsx"],"names":["React","styled","stores","DateUtils","Format","Div","div","TimeLineLayout","storeModel","useStore","getTimelines","getTasks","getMyCurrentDayDur","flatMap","task","note","timeLines","sort","timeline","timeStamp","reverse","map","isDivder","formatTimeInDay","formatTimeInSecond","content","join","overflow","whiteSpace"],"mappings":";AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,MAAMC,GAAG,GAAGJ,MAAM,CAACK,GAAI;CAAvB;;AAGA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,MAAM,CAACO,QAAP,CAAgB,WAAhB,CAAvB,CADqC,CAGrC;AACA;AACA;;AAEA,WAASC,YAAT,GAA+B;AAC7B,WAAOF,UAAU,CAACG,QAAX,CAAoBR,SAAS,CAACS,kBAAV,CAA6B,CAA7B,CAApB,EACNC,OADM,CACGC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,SADtB,EACiCC,IADjC,CACuCC,QAAD,IAAcA,QAAQ,CAACC,SAD7D,EAENC,OAFM,GAEIC,GAFJ,CAESH,QAAD,IAAc;AAC3B,UAAIA,QAAQ,CAACI,QAAb,EAAuB;AACnB,eAAQ,SAAQlB,MAAM,CAACmB,eAAP,CAAuBL,QAAQ,CAACC,SAAhC,CAA2C,QAA3D;AACH,OAFD,MAEO;AACH,eAAQ,GAAEf,MAAM,CAACoB,kBAAP,CAA0BN,QAAQ,CAACC,SAAnC,CAA8C,IAAGD,QAAQ,CAACO,OAAQ,KAA5E;AACH;AACF,KARM,EAQJC,IARI,CAQC,IARD,CAAP;AASD;;AAED,sBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,YAAY,EADf,CADF;AAKD,CAxBD;;AA0BA,eAAeH,cAAf","sourcesContent":["import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { StoreModel, Duration, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\n\n\nconst Div = styled.div`\n`\n\nconst TimeLineLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n\n  // React.useEffect(() => {\n  //   console.log(\"app useEffect\")\n  // },[])\n\n  function getTimelines(): string{\n    return storeModel.getTasks(DateUtils.getMyCurrentDayDur(0))\n    .flatMap((task) => task.note.timeLines).sort((timeline) => timeline.timeStamp)\n    .reverse().map((timeline) => {\n      if (timeline.isDivder) {\n          return `----- ${Format.formatTimeInDay(timeline.timeStamp)} -----`\n      } else {\n          return `${Format.formatTimeInSecond(timeline.timeStamp)} ${timeline.content} \\n`\n      }\n    }).join(\"\\n\")\n  }\n\n  return (\n    <Div style={{ overflow: \"scroll\", whiteSpace: \"pre-wrap\" }}>\n      {getTimelines()}\n    </Div>\n  );\n}\n\nexport default TimeLineLayout;\n"]},"metadata":{},"sourceType":"module"}