{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TaskListContainer.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Button, List, Modal } from 'antd';\nimport stores from '../stores';\nimport { StoreModel } from '../model/model';\nimport Utils from '../utils/Utils';\nimport DateUtils from '../utils/DateUtils';\nimport Format from '../utils/Format';\nimport { Task } from '../model/model';\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport 'antd/dist/antd.css';\nimport moment from 'moment';\nimport { plainToClass } from \"class-transformer\";\nconst Container = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n`;\nconst Container2 = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  overflow:auto;\n  /* height: 800px; */\n  height: 85vh;\n  margin-top:10px;\n`;\nconst InputGroup = styled(Input.Group)`\nmargin: 1%;\n`;\nconst ButtonGroup = styled(Button.Group)`\nmargin: 1%;\n`;\n\nconst TaskListContainer = () => {\n  const {\n    storeModel,\n    save,\n    setModel\n  } = stores.useStore('mainmodel');\n  const {\n    currentDayOffset,\n    setCurrentDayOffset\n  } = stores.useStore(CurrentDayOffsetKey);\n  const [title, setTitle] = useState(\"\");\n  const [expectTime, setExpectTime] = useState(2); // React.useEffect(() => {\n  //   console.log(\"TaskListContainer useEffect\")\n  // },[])\n\n  function onAddNote(event) {\n    event.preventDefault();\n\n    if (Utils.isStringEmpty(title)) {\n      message.error(\"请输入内容\");\n      return;\n    }\n\n    const newTask = new Task();\n    newTask.init(title);\n    newTask.expectConsumes.push(expectTime * 3600 * 1000); // 单位小时，转换\n\n    storeModel.addTask(newTask);\n    storeModel.orderTasks();\n    save();\n    setTitle(\"\");\n  }\n\n  function changeOffsetDay(isAdd) {\n    if (isAdd) {\n      setCurrentDayOffset(currentDayOffset + 1);\n    } else {\n      setCurrentDayOffset(currentDayOffset - 1);\n    }\n  }\n\n  function download() {\n    Utils.downloadFile(`DoingList_${Format.formatTimeInMsToFileName(Utils.getTimestamp())}.dl`, JSON.stringify(storeModel));\n  }\n\n  function upload(e) {\n    let file = e.target.files[0];\n    console.log(file);\n    let reader = new FileReader();\n\n    reader.onload = function () {\n      let uploadContent = this.result;\n\n      if (typeof uploadContent === 'string') {\n        Modal.confirm({\n          title: '确定要导入嘛？',\n          content: `导入会覆盖当前所有任务`,\n\n          onOk() {\n            Modal.confirm({\n              title: '是否需要先下载当前任务？',\n              content: ``,\n\n              onOk() {\n                download();\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent)));\n              },\n\n              onCancel() {\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent)));\n              }\n\n            });\n          }\n\n        });\n      } else {\n        message.error(\"导入文件有问题，导入失败\");\n      }\n    }; //读取文件内容\n\n\n    reader.readAsText(file);\n  }\n\n  function getOffsetString() {\n    let base = \"\" + currentDayOffset;\n\n    if (currentDayOffset > 0) {\n      base = \"+\" + base;\n    }\n\n    return base;\n  }\n\n  function getAllTaskStatus() {\n    let notDoneTasks = storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset)).filter(task => {\n      return !task.isDone();\n    });\n\n    if (notDoneTasks.length === 0) {\n      return \"\";\n    }\n\n    let consumeFormat = \"\";\n    let consumes = notDoneTasks.map(task => {\n      let left = task.getLeftExpectConsumeTime();\n      if (left < 0) return 0;\n      return left;\n    }).reduce((a, b) => a + b); // console.log(\"getAllTaskStatus\" + consumes)\n\n    if (consumes > 0) {\n      consumeFormat = `，总剩余预估需要花费${Format.formatDuration(consumes)}`;\n    }\n\n    return `共${notDoneTasks.length}个任务未完成${consumeFormat}`;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: e => changeOffsetDay(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \"\\u2190\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      backgroundColor: \"#ffffff\",\n      padding: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, Format.formatTimeInDay(DateUtils.getMyCurrentDayStamp(currentDayOffset)), \"(\", getOffsetString(), \")\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: e => changeOffsetDay(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"\\u2192\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: e => download(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"\\u5BFC\\u51FA\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"upload-file\",\n    multiple: true,\n    onChange: event => upload(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Input.Group, {\n    compact: true,\n    style: {\n      width: '96%',\n      margin: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '80%'\n    },\n    placeholder: \"\\u8F93\\u5165\\u4EFB\\u52A1\\uFF0C\\u56DE\\u8F66\\u6DFB\\u52A0\",\n    value: title,\n    onChange: event => setTitle(event.target.value),\n    onPressEnter: onAddNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '20%'\n    },\n    defaultValue: expectTime,\n    placeholder: \"\\u82B1\\u8D39\\u65F6\\u95F4\",\n    prefix: \"\\u9884\\u8BA1\",\n    suffix: \"h\",\n    onChange: event => setExpectTime(Number(event.target.value)),\n    onPressEnter: onAddNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      backgroundColor: \"#ffffff\",\n      padding: 4,\n      margin: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, getAllTaskStatus()), /*#__PURE__*/React.createElement(NoteList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst NoteItem = styled.div`\nbackground-color: ${props => {\n  if (props.choosed) {\n    return '#f5b52b';\n  } else {\n    return '#ffffff';\n  }\n}};\n:hover{\n\tbackground-color:#b4e7fc;\n};\nopacity : ${props => {\n  if (props.isDone) {\n    return 0.15;\n  } else {\n    return 1;\n  }\n}};;\n`;\n\nconst NoteList = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel');\n  const {\n    currentTask,\n    setCurrentTask\n  } = stores.useStore(CurrentTaskKey);\n  const {\n    currentDoingTask,\n    setCurrentDoingTask\n  } = stores.useStore(CurrentDoingTaskKey);\n  const {\n    save\n  } = stores.useStore('mainmodel');\n  const {\n    currentDayOffset,\n    setCurrentDayOffset\n  } = stores.useStore(CurrentDayOffsetKey);\n  useEffect(() => {\n    // console.log(\"NoteList useEffect\")\n    if (currentDoingTask === undefined) {\n      let doingTasks = storeModel.tasks.filter(value => {\n        return value.isDoing();\n      });\n\n      if (doingTasks.length === 0) {\n        return;\n      }\n\n      if (doingTasks.length > 1) {\n        console.error(`有 ${doingTasks.length} 个任务在运行中，自动关闭`);\n\n        for (let i = 1; i < doingTasks.length; i++) {\n          doingTasks[i].stop();\n        }\n      }\n\n      setCurrentDoingTask(doingTasks[0]);\n    }\n  });\n\n  function onChooseNote(event, note) {\n    event.preventDefault();\n    setCurrentTask(note);\n  }\n\n  function getDoingStatusTips(task) {\n    if (task.isDoing()) {\n      return \"施工中⛑ \";\n    } else {\n      return \"\";\n    }\n  }\n\n  function getConsumed(task) {\n    let time = Format.formatDuration(task.getAllDuration());\n\n    if (Utils.isStringEmpty(time)) {\n      return \"\";\n    }\n\n    return `进行${time}(${task.doingDurs.length}次) `;\n  }\n\n  function getDeadline(task) {\n    let deadline = task.getActualDeadline();\n\n    if (deadline <= 0) {\n      return \"\";\n    }\n\n    const leftTime = deadline - Utils.getTimestamp();\n\n    if (leftTime <= 1000) {\n      return `已超期😱 `;\n    }\n\n    let time = Format.formatDuration(leftTime);\n    return `剩余${time} `;\n  }\n\n  function getConsumeExpected(task) {\n    if (task.getActualExpectConsume() <= 0) {\n      return \"\";\n    }\n\n    let left = task.getLeftExpectConsumeTime();\n\n    if (left <= 0) {\n      return `超出${Format.formatDuration(-left)}`;\n    } else {\n      return `还需${Format.formatDuration(left)}`;\n    }\n  }\n\n  function getShowTips(task) {\n    let result = \"  \" + getDoingStatusTips(task) + getConsumed(task) + getDeadline(task) + getConsumeExpected(task);\n    return result;\n  }\n\n  function onChooseDeadline(value, task) {\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n    task.deadlines.push(value.valueOf());\n  }\n\n  function getDeadlineTime(task) {\n    const deadline = task.getActualDeadline();\n\n    if (deadline > 0) {\n      return moment(deadline);\n    }\n\n    return undefined;\n  }\n\n  return /*#__PURE__*/React.createElement(Container2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    size: \"small\",\n    style: {\n      backgroundColor: 'white',\n      margin: \"1%\"\n    },\n    bordered: true,\n    dataSource: storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset)),\n    renderItem: task => /*#__PURE__*/React.createElement(NoteItem, {\n      choosed: task.isSameTask(currentTask),\n      key: task.id,\n      onClick: e => onChooseNote(e, task),\n      isDone: task.isDone(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NoteItemInput, {\n      key: task.id,\n      task: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }), getShowTips(task)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst NoteItemInput = props => {\n  const [content, setContent] = useState(props.task.title);\n  const {\n    save\n  } = stores.useStore('mainmodel');\n\n  function saveTaskTitle(event) {\n    props.task.title = content;\n    save();\n  }\n\n  return /*#__PURE__*/React.createElement(Input, {\n    style: {\n      background: \"#ffffff70\",\n      fontWeight: \"bold\"\n    },\n    value: content,\n    onChange: e => setContent(e.target.value),\n    onBlur: saveTaskTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default TaskListContainer;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TaskListContainer.tsx"],"names":["React","useState","useEffect","styled","Input","message","Button","List","Modal","stores","StoreModel","Utils","DateUtils","Format","Task","CurrentTaskKey","CurrentDoingTaskKey","CurrentDayOffsetKey","moment","plainToClass","Container","div","Container2","InputGroup","Group","ButtonGroup","TaskListContainer","storeModel","save","setModel","useStore","currentDayOffset","setCurrentDayOffset","title","setTitle","expectTime","setExpectTime","onAddNote","event","preventDefault","isStringEmpty","error","newTask","init","expectConsumes","push","addTask","orderTasks","changeOffsetDay","isAdd","download","downloadFile","formatTimeInMsToFileName","getTimestamp","JSON","stringify","upload","e","file","target","files","console","log","reader","FileReader","onload","uploadContent","result","confirm","content","onOk","parse","onCancel","readAsText","getOffsetString","base","getAllTaskStatus","notDoneTasks","getTasks","getMyCurrentDayDur","filter","task","isDone","length","consumeFormat","consumes","map","left","getLeftExpectConsumeTime","reduce","a","b","formatDuration","backgroundColor","padding","formatTimeInDay","getMyCurrentDayStamp","paddingLeft","width","margin","value","Number","NoteItem","props","choosed","NoteList","currentTask","setCurrentTask","currentDoingTask","setCurrentDoingTask","undefined","doingTasks","tasks","isDoing","i","stop","onChooseNote","note","getDoingStatusTips","getConsumed","time","getAllDuration","doingDurs","getDeadline","deadline","getActualDeadline","leftTime","getConsumeExpected","getActualExpectConsume","getShowTips","onChooseDeadline","deadlines","valueOf","getDeadlineTime","isSameTask","id","NoteItemInput","setContent","saveTaskTitle","background","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Button, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport { Task, Note } from '../model/model'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { CurrentDayOffsetKey } from '../stores/CurrentDayOffsetStore';\nimport 'antd/dist/antd.css';\nimport moment from 'moment'\nimport { plainToClass } from \"class-transformer\";\n\nconst Container = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n`\n\nconst Container2 = styled.div`\n  /* background: #d1d3a2; */\n  /* background: #d1dfff; */\n  background: #282c34;\n  overflow:auto;\n  /* height: 800px; */\n  height: 85vh;\n  margin-top:10px;\n`\n\nconst InputGroup = styled(Input.Group)`\nmargin: 1%;\n`\nconst ButtonGroup = styled(Button.Group)`\nmargin: 1%;\n`\n\nconst TaskListContainer: React.FC = () => {\n  const { storeModel, save, setModel } = stores.useStore('mainmodel') as { storeModel: StoreModel, save: () => void, setModel: (storeModel: StoreModel) => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n  const [title, setTitle] = useState(\"\");\n  const [expectTime, setExpectTime] = useState(2);\n\n  // React.useEffect(() => {\n  //   console.log(\"TaskListContainer useEffect\")\n  // },[])\n\n  function onAddNote(event: any) {\n    event.preventDefault();\n\n    if (Utils.isStringEmpty(title)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    const newTask = new Task()\n    newTask.init(title)\n    newTask.expectConsumes.push(expectTime * 3600 * 1000) // 单位小时，转换\n    storeModel.addTask(newTask)\n    storeModel.orderTasks()\n    save()\n\n    setTitle(\"\")\n  }\n\n  function changeOffsetDay(isAdd: boolean) {\n    if (isAdd) {\n      setCurrentDayOffset(currentDayOffset + 1)\n    } else {\n      setCurrentDayOffset(currentDayOffset - 1)\n    }\n  }\n\n  function download() {\n    Utils.downloadFile(`DoingList_${Format.formatTimeInMsToFileName(Utils.getTimestamp())}.dl`, JSON.stringify(storeModel))\n  }\n\n  function upload(e: any) {\n    let file = e.target.files[0];\n    console.log(file)\n\n    let reader = new FileReader();\n    reader.onload = function (this) {\n      let uploadContent = this.result\n      if (typeof uploadContent === 'string') {\n        Modal.confirm({\n          title: '确定要导入嘛？',\n          content: `导入会覆盖当前所有任务`,\n          onOk() {\n            Modal.confirm({\n              title: '是否需要先下载当前任务？',\n              content: ``,\n              onOk() {\n                download()\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              },\n              onCancel() {\n                setModel(plainToClass(StoreModel, JSON.parse(uploadContent as string)))\n              }\n            });\n          },\n        })\n      } else {\n        message.error(\"导入文件有问题，导入失败\")\n      }\n    }\n    //读取文件内容\n    reader.readAsText(file);\n  }\n\n  function getOffsetString() {\n    let base = \"\" + currentDayOffset\n    if (currentDayOffset > 0) {\n      base = \"+\" + base\n    }\n    return base\n  }\n\n  function getAllTaskStatus(): string {\n    let notDoneTasks = storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset)).filter((task) => { return !task.isDone() })\n\n    if (notDoneTasks.length === 0) {\n      return \"\"\n    }\n\n    let consumeFormat = \"\"\n    let consumes: number = notDoneTasks.map((task) => {\n      let left = task.getLeftExpectConsumeTime()\n      if (left < 0) return 0\n      return left\n    }).reduce((a, b) => a + b)\n\n    // console.log(\"getAllTaskStatus\" + consumes)\n    if (consumes > 0) {\n      consumeFormat = `，总剩余预估需要花费${Format.formatDuration(consumes)}`\n    }\n\n    return `共${notDoneTasks.length}个任务未完成${consumeFormat}`\n  }\n\n  return (\n    <Container>\n\n      {/* todo 这个组件可以单独抽出去 */}\n      <ButtonGroup>\n        <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(false)}>←</Button>\n\n        {/* 这个取当前时间的操作简直无敌... 蠢 */}\n        {/* <DatePicker defaultValue={moment(moment().format(dateFormat), dateFormat)} format={dateFormat} /> */}\n\n        <span style={{ backgroundColor: \"#ffffff\", padding: 4 }} >\n          {Format.formatTimeInDay(DateUtils.getMyCurrentDayStamp(currentDayOffset))}({getOffsetString()})\n        </span>\n\n        <Button type=\"primary\" size=\"small\" onClick={(e) => changeOffsetDay(true)}>→</Button>\n        <span style={{ paddingLeft: 10 }} ></span>\n        <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导出</Button>\n        <input type=\"file\" id=\"upload-file\" multiple onChange={(event) => upload(event)} />\n        {/* <Button type=\"primary\" size=\"small\" onClick={(e) => download()}>导入</Button> */}\n      </ButtonGroup>\n\n      <Input.Group compact style={{ width: '96%', margin: '2%' }}>\n        <Input style={{ width: '80%' }} placeholder=\"输入任务，回车添加\" value={title} onChange={(event) => setTitle(event.target.value)} onPressEnter={onAddNote} />\n        <Input style={{ width: '20%' }} defaultValue={expectTime} placeholder=\"花费时间\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onPressEnter={onAddNote} />\n      </Input.Group>\n\n      <span style={{ backgroundColor: \"#ffffff\", padding: 4, margin: '2%' }} >\n        {getAllTaskStatus()}\n      </span>\n\n      <NoteList />\n    </Container>\n  );\n}\n\n\nconst NoteItem = styled.div`\nbackground-color: ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#ffffff'\n    }\n  }\n  };\n:hover{\n\tbackground-color:#b4e7fc;\n};\nopacity : ${(props: { choosed: boolean, isDone: boolean }) => {\n    if (props.isDone) {\n      return 0.15\n    } else {\n      return 1\n    }\n  }\n  };;\n`\nconst NoteList: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task) => void }\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const { currentDayOffset, setCurrentDayOffset } = stores.useStore(CurrentDayOffsetKey) as { currentDayOffset: number, setCurrentDayOffset: (offset: number) => void }\n\n  useEffect(() => {\n    // console.log(\"NoteList useEffect\")\n\n    if (currentDoingTask === undefined) {\n      let doingTasks = storeModel.tasks.filter((value) => { return value.isDoing() })\n\n      if (doingTasks.length === 0) {\n        return\n      }\n\n      if (doingTasks.length > 1) {\n        console.error(`有 ${doingTasks.length} 个任务在运行中，自动关闭`)\n\n        for (let i = 1; i < doingTasks.length; i++) {\n          doingTasks[i].stop()\n        }\n      }\n\n      setCurrentDoingTask(doingTasks[0])\n    }\n  });\n\n  function onChooseNote(event: any, note: Task) {\n    event.preventDefault()\n    setCurrentTask(note)\n  }\n\n\n  function getDoingStatusTips(task: Task): string {\n    if (task.isDoing()) {\n      return \"施工中⛑ \"\n    } else {\n      return \"\"\n    }\n  }\n\n  function getConsumed(task: Task): string {\n    let time = Format.formatDuration(task.getAllDuration());\n    if (Utils.isStringEmpty(time)) {\n      return \"\"\n    }\n    return `进行${time}(${task.doingDurs.length}次) `\n  }\n\n  function getDeadline(task: Task): string {\n    let deadline = task.getActualDeadline()\n    if (deadline <= 0) {\n      return \"\"\n    }\n    const leftTime = deadline - Utils.getTimestamp();\n    if (leftTime <= 1000) {\n      return `已超期😱 `\n    }\n    let time = Format.formatDuration(leftTime);\n    return `剩余${time} `\n  }\n\n  function getConsumeExpected(task: Task): string {\n    if (task.getActualExpectConsume() <= 0) {\n      return \"\"\n    }\n\n    let left = task.getLeftExpectConsumeTime()\n    if (left <= 0) {\n      return `超出${Format.formatDuration(-left)}`\n    } else {\n      return `还需${Format.formatDuration(left)}`\n    }\n  }\n\n  function getShowTips(task: Task): string {\n    let result = \"  \" + getDoingStatusTips(task) + getConsumed(task) + getDeadline(task) + getConsumeExpected(task)\n    return result\n  }\n\n  function onChooseDeadline(value: any, task: Task) {\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n  }\n\n  function getDeadlineTime(task: Task): any {\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return undefined\n  }\n\n  return (\n    <Container2>\n      <List\n        size=\"small\"\n        style={{ backgroundColor: 'white', margin: \"1%\" }}\n        bordered\n        dataSource={storeModel.getTasks(DateUtils.getMyCurrentDayDur(currentDayOffset))}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => onChooseNote(e, task)} isDone={task.isDone()}>\n            <NoteItemInput key={task.id} task={task} />\n\n            {/* {task.id} */}\n            \n            {getShowTips(task)}\n          </NoteItem>\n        )}\n      />\n    </Container2>\n  );\n}\n\ninterface NoteItemInputProps {\n  task: Task;\n}\n\nconst NoteItemInput: React.FC<NoteItemInputProps> = (props) => {\n  const [content, setContent] = useState(props.task.title)\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n\n  function saveTaskTitle(event: any) {\n    props.task.title = content\n    save()\n  }\n\n  return (\n    <Input style={{ background: \"#ffffff70\", fontWeight:\"bold\" }} value={content} onChange={(e) => setContent(e.target.value)} onBlur={saveTaskTitle} />\n  );\n}\n\nexport default TaskListContainer;"]},"metadata":{},"sourceType":"module"}