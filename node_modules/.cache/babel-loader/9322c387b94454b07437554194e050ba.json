{"ast":null,"code":"import _classCallCheck from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{Duration}from\"../model/model\";var DateUtils=/*#__PURE__*/function(){function DateUtils(){_classCallCheck(this,DateUtils);}_createClass(DateUtils,null,[{key:\"getCurrentDayStamp\",value:function getCurrentDayStamp(hour){var today=new Date();today.setHours(hour,0,0,0);return today.getTime();}// 暂时 offsetHour 只支持 0-24 之间的数\n},{key:\"getOffsetedDayDur\",value:function getOffsetedDayDur(dayZeroTime,offsetHour){var day=new Date(dayZeroTime);day.setHours(offsetHour,0,0,0);var result=new Duration();result.init(day.getTime());result.end=day.getTime()+DateUtils.dayMills;return result;}//-------------------- 以下业务相关 --------------------\n},{key:\"getMyCurrentDayStamp\",value:function getMyCurrentDayStamp(offsetDay){var now=new Date().getTime();var todayOffset=DateUtils.getCurrentDayStamp(DateUtils.dayOffset);if(now>todayOffset){return DateUtils.getCurrentDayStamp(0)+DateUtils.dayMills*offsetDay;}else{return DateUtils.getCurrentDayStamp(0)-DateUtils.dayMills+DateUtils.dayMills*offsetDay;}}},{key:\"getMyCurrentDayDur\",value:function getMyCurrentDayDur(offsetDay){return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay),DateUtils.dayOffset);}}]);return DateUtils;}();DateUtils.dayMills=24*60*60*1000;DateUtils.dayOffset=6;export default DateUtils;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/utils/DateUtils.ts"],"names":["Duration","DateUtils","hour","today","Date","setHours","getTime","dayZeroTime","offsetHour","day","result","init","end","dayMills","offsetDay","now","todayOffset","getCurrentDayStamp","dayOffset","getOffsetedDayDur","getMyCurrentDayStamp"],"mappings":"0XAAA,OAASA,QAAT,KAAyB,gBAAzB,C,GAEMC,CAAAA,S,wKAI+BC,I,CAAsB,CACnD,GAAIC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CACAD,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,EACA,MAAOC,CAAAA,KAAK,CAACG,OAAN,EAAP,CACH,CAED;4DACgCC,W,CAAqBC,U,CAA8B,CAC/E,GAAIC,CAAAA,GAAG,CAAG,GAAIL,CAAAA,IAAJ,CAASG,WAAT,CAAV,CACAE,GAAG,CAACJ,QAAJ,CAAaG,UAAb,CAAyB,CAAzB,CAA4B,CAA5B,CAA+B,CAA/B,EAEA,GAAIE,CAAAA,MAAM,CAAG,GAAIV,CAAAA,QAAJ,EAAb,CACAU,MAAM,CAACC,IAAP,CAAYF,GAAG,CAACH,OAAJ,EAAZ,EACAI,MAAM,CAACE,GAAP,CAAaH,GAAG,CAACH,OAAJ,GAAgBL,SAAS,CAACY,QAAvC,CACA,MAAOH,CAAAA,MAAP,CACH,CAED;kEAEmCI,S,CAA2B,CAC1D,GAAIC,CAAAA,GAAG,CAAG,GAAIX,CAAAA,IAAJ,GAAWE,OAAX,EAAV,CACA,GAAIU,CAAAA,WAAW,CAAGf,SAAS,CAACgB,kBAAV,CAA6BhB,SAAS,CAACiB,SAAvC,CAAlB,CACA,GAAIH,GAAG,CAAGC,WAAV,CAAuB,CACnB,MAAOf,CAAAA,SAAS,CAACgB,kBAAV,CAA6B,CAA7B,EAAkChB,SAAS,CAACY,QAAV,CAAqBC,SAA9D,CACH,CAFD,IAEO,CACH,MAAOb,CAAAA,SAAS,CAACgB,kBAAV,CAA6B,CAA7B,EAAkChB,SAAS,CAACY,QAA5C,CAAuDZ,SAAS,CAACY,QAAV,CAAqBC,SAAnF,CACH,CACJ,C,8DAEgCA,S,CAA6B,CAC1D,MAAOb,CAAAA,SAAS,CAACkB,iBAAV,CAA4BlB,SAAS,CAACmB,oBAAV,CAA+BN,SAA/B,CAA5B,CAAuEb,SAAS,CAACiB,SAAjF,CAAP,CACH,C,yBAnCCjB,S,CACaY,Q,CAAmB,GAAK,EAAL,CAAU,EAAV,CAAe,I,CAD/CZ,S,CAEaiB,S,CAAoB,C,CAoCvC,cAAejB,CAAAA,SAAf","sourcesContent":["import { Duration } from \"../model/model\";\n\nclass DateUtils {\n    private static dayMills: number = 24 * 60 * 60 * 1000\n    private static dayOffset: number = 6\n\n    public static getCurrentDayStamp(hour: number): number {\n        let today = new Date();\n        today.setHours(hour, 0, 0, 0);\n        return today.getTime();\n    }\n\n    // 暂时 offsetHour 只支持 0-24 之间的数\n    public static getOffsetedDayDur(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    //-------------------- 以下业务相关 --------------------\n\n    public static getMyCurrentDayStamp(offsetDay: number): number {\n        let now = new Date().getTime()\n        let todayOffset = DateUtils.getCurrentDayStamp(DateUtils.dayOffset)\n        if (now > todayOffset) {\n            return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay\n        } else {\n            return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay\n        }\n    }\n\n    public static getMyCurrentDayDur(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay), DateUtils.dayOffset)\n    }\n}\n\nexport default DateUtils"]},"metadata":{},"sourceType":"module"}