{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Button, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport TaskInfoFormat from '../utils/TaskInfoFormat';\nimport Format from '../utils/Format';\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport moment from 'moment';\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\nconst Div = styled.div`\n`;\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`;\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`;\n\nconst ContentLayout = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel');\n  const {\n    currentTask\n  } = stores.useStore(CurrentTaskKey);\n  const {\n    save\n  } = stores.useStore('mainmodel');\n  const [content, setContent] = useState(\"\");\n  const [expectTime, setExpectTime] = useState(-1); // toolsbar\n\n  const {\n    currentDoingTask,\n    setCurrentDoingTask\n  } = stores.useStore(CurrentDoingTaskKey);\n  /* ---------------------------初始化------------------------------- */\n  // 渲染当前note\n\n  const [lastTask, setLastTask] = useState(undefined);\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return;\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask);\n      setContent(currentTask.note.content);\n      const expectTime = currentTask.getActualExpectConsume();\n      setExpectTime(currentTask.getActualExpectConsume());\n\n      if (expectTime == -1) {\n        task.expectConsumes.push(-1); // todo 暂时不优化交互了，-1就是不设置时间\n      } else {\n        task.expectConsumes.push(expectTime * 3600 * 1000);\n      }\n    }\n  });\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event) {\n    event.preventDefault();\n    saveToLocal(event, false);\n  }\n\n  function saveToLocal(event, isManual) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return;\n    currentTask.note.content = content;\n    save();\n    if (isManual) message.info(\"已保存\");\n  }\n  /* ------------------------------toolsbar---------------------------- */\n\n\n  function deleteTask(event) {\n    if (currentTask === undefined) return;\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\");\n          save();\n        } else {\n          message.error(\"删除任务失败\");\n        }\n      }\n\n    });\n  }\n\n  function doneTask(event) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`);\n      return;\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n\n        onOk() {\n          _realDone(task);\n        }\n\n      });\n      return;\n    }\n\n    task.stop();\n    setCurrentDoingTask(undefined);\n\n    _realDone(task);\n  }\n\n  function _realDone(task) {\n    task.done();\n    storeModel.orderTasks();\n    message.success(\"任务已完成\");\n    save();\n  }\n\n  function startTask(event) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`);\n      return;\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`);\n      return;\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`);\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop();\n    }\n\n    task.start();\n    setCurrentDoingTask(task);\n    save();\n  }\n\n  function onChooseDeadline(value) {\n    if (currentTask === undefined) return;\n    const task = currentTask; // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf());\n    save();\n  }\n\n  function getDeadlineTime() {\n    if (currentTask === undefined) return undefined;\n    const task = currentTask;\n    const deadline = task.getActualDeadline();\n\n    if (deadline > 0) {\n      return moment(deadline);\n    }\n\n    return undefined;\n  }\n\n  function getShowTips() {\n    if (currentTask === undefined) return \"\";\n    const task = currentTask;\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task);\n    return result;\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1); // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000);\n    }\n  }\n  /* ---------------------------------------------------------- */\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => deleteTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => doneTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: e => startTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, \"Start\")), /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    defaultValue: getDeadlineTime(),\n    onOk: value => onChooseDeadline(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }), getShowTips(), /*#__PURE__*/React.createElement(Input, {\n    value: expectTime,\n    placeholder: \"\\u82B1\\u8D39\\u65F6\\u95F4\",\n    prefix: \"\\u9884\\u8BA1\",\n    suffix: \"h\",\n    onChange: event => setExpectTime(Number(event.target.value)),\n    onPressEnter: changeExceptTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Editor, {\n    placeholder: \"\\u4EFB\\u52A1\\u65E5\\u5FD7\\uFF08\\u81EA\\u52A8\\u4FDD\\u5B58\\uFF09\",\n    value: content,\n    onChange: event => setContent(event.target.value),\n    onBlur: e => onBlur(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ContentLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx"],"names":["React","useState","useEffect","styled","Input","message","Button","Modal","DatePicker","stores","TaskInfoFormat","Format","CurrentTaskKey","CurrentDoingTaskKey","moment","Container","div","Div","Editor","TextArea","ButtonGroup","Group","ContentLayout","storeModel","useStore","currentTask","save","content","setContent","expectTime","setExpectTime","currentDoingTask","setCurrentDoingTask","lastTask","setLastTask","undefined","isSameTask","note","getActualExpectConsume","task","expectConsumes","push","onBlur","event","preventDefault","saveToLocal","isManual","info","deleteTask","confirm","title","onOk","removeTask","success","error","doneTask","isDone","formatTimeInMs","doneTime","isDoing","_realDone","stop","done","orderTasks","startTask","id","lastStartTime","start","onChooseDeadline","value","deadlines","valueOf","getDeadlineTime","deadline","getActualDeadline","getShowTips","result","getDoingStatusTips","getConsumed","getDeadline","getConsumeExpected","changeExceptTime","e","Number","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAuDC,KAAvD,EAA8DC,UAA9D,QAAgF,MAAhF;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAKA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAO,oBAAP;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAIA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,SAAS,GAAGZ,MAAM,CAACa,GAAI;;;;;CAA7B;AAOA,MAAMC,GAAG,GAAGd,MAAM,CAACa,GAAI;CAAvB;AAGA,MAAME,MAAM,GAAGf,MAAM,CAACC,KAAK,CAACe,QAAP,CAAiB;;CAAtC;AAIA,MAAMC,WAAW,GAAGjB,MAAM,CAACG,MAAM,CAACe,KAAR,CAAe;;CAAzC;;AAIA,MAAMC,aAAuB,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAiBd,MAAM,CAACe,QAAP,CAAgB,WAAhB,CAAvB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBhB,MAAM,CAACe,QAAP,CAAgBZ,cAAhB,CAAxB;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWjB,MAAM,CAACe,QAAP,CAAgB,WAAhB,CAAjB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,CAAC,CAAF,CAA5C,CALoC,CAQpC;;AACA,QAAM;AAAE8B,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CvB,MAAM,CAACe,QAAP,CAAgBX,mBAAhB,CAAlD;AAEA;AAEA;;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAmBkC,SAAnB,CAAxC;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIuB,WAAW,KAAKU,SAApB,EAA+B;;AAE/B,QAAI,CAACV,WAAW,CAACW,UAAZ,CAAuBH,QAAvB,CAAL,EAAuC;AACrC;AACAC,MAAAA,WAAW,CAACT,WAAD,CAAX;AACAG,MAAAA,UAAU,CAACH,WAAW,CAACY,IAAZ,CAAiBV,OAAlB,CAAV;AAEA,YAAME,UAAU,GAAGJ,WAAW,CAACa,sBAAZ,EAAnB;AACAR,MAAAA,aAAa,CAACL,WAAW,CAACa,sBAAZ,EAAD,CAAb;;AACA,UAAIT,UAAU,IAAI,CAAC,CAAnB,EAAsB;AACpBU,QAAAA,IAAI,CAACC,cAAL,CAAoBC,IAApB,CAAyB,CAAC,CAA1B,EADoB,CACS;AAC9B,OAFD,MAEO;AACLF,QAAAA,IAAI,CAACC,cAAL,CAAoBC,IAApB,CAAyBZ,UAAU,GAAG,IAAb,GAAoB,IAA7C;AACD;AACF;AACF,GAjBQ,CAAT;AAmBA;;AAEA,WAASa,MAAT,CAAgBC,KAAhB,EAA4B;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,WAAW,CAACF,KAAD,EAAQ,KAAR,CAAX;AACD;;AAED,WAASE,WAAT,CAAqBF,KAArB,EAAiCG,QAAjC,EAAoD;AAClD,QAAIH,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACX,QAAInB,WAAW,KAAKU,SAApB,EAA+B;AAE/BV,IAAAA,WAAW,CAACY,IAAZ,CAAiBV,OAAjB,GAA2BA,OAA3B;AACAD,IAAAA,IAAI;AAEJ,QAAIoB,QAAJ,EAAczC,OAAO,CAAC0C,IAAR,CAAa,KAAb;AACf;AAED;;;AAEA,WAASC,UAAT,CAAoBL,KAApB,EAAgC;AAC9B,QAAIlB,WAAW,KAAKU,SAApB,EAA+B;AAE/B5B,IAAAA,KAAK,CAAC0C,OAAN,CAAc;AACZC,MAAAA,KAAK,EAAE,SADK;AAEZvB,MAAAA,OAAO,EAAG,UAASF,WAAW,CAACyB,KAAM,EAFzB;;AAGZC,MAAAA,IAAI,GAAG;AACL,YAAI5B,UAAU,CAAC6B,UAAX,CAAsB3B,WAAtB,CAAJ,EAAwC;AACtCpB,UAAAA,OAAO,CAACgD,OAAR,CAAgB,QAAhB;AACA3B,UAAAA,IAAI;AACL,SAHD,MAGO;AACLrB,UAAAA,OAAO,CAACiD,KAAR,CAAc,QAAd;AACD;AACF;;AAVW,KAAd;AAYD;;AAED,WAASC,QAAT,CAAkBZ,KAAlB,EAA8B;AAC5B,QAAIlB,WAAW,KAAKU,SAApB,EAA+B;AAC/B,UAAMI,IAAI,GAAGd,WAAb;;AAEA,QAAIc,IAAI,CAACiB,MAAL,EAAJ,EAAmB;AACjBnD,MAAAA,OAAO,CAACiD,KAAR,CAAe,cAAa3C,MAAM,CAAC8C,cAAP,CAAsBlB,IAAI,CAACmB,QAA3B,CAAqC,EAAjE;AACA;AACD;;AAED,QAAI,CAACnB,IAAI,CAACoB,OAAL,EAAL,EAAqB;AACnBpD,MAAAA,KAAK,CAAC0C,OAAN,CAAc;AACZC,QAAAA,KAAK,EAAE,mBADK;AAEZvB,QAAAA,OAAO,EAAG,UAASY,IAAI,CAACW,KAAM,EAFlB;;AAGZC,QAAAA,IAAI,GAAG;AACLS,UAAAA,SAAS,CAACrB,IAAD,CAAT;AACD;;AALW,OAAd;AAOA;AACD;;AAEDA,IAAAA,IAAI,CAACsB,IAAL;AACA7B,IAAAA,mBAAmB,CAACG,SAAD,CAAnB;;AACAyB,IAAAA,SAAS,CAACrB,IAAD,CAAT;AACD;;AAED,WAASqB,SAAT,CAAmBrB,IAAnB,EAA+B;AAC7BA,IAAAA,IAAI,CAACuB,IAAL;AACAvC,IAAAA,UAAU,CAACwC,UAAX;AACA1D,IAAAA,OAAO,CAACgD,OAAR,CAAgB,OAAhB;AACA3B,IAAAA,IAAI;AACL;;AAED,WAASsC,SAAT,CAAmBrB,KAAnB,EAA+B;AAC7B,QAAIlB,WAAW,KAAKU,SAApB,EAA+B;AAC/B,UAAMI,IAAI,GAAGd,WAAb;;AAEA,QAAIc,IAAI,CAACiB,MAAL,EAAJ,EAAmB;AACjBnD,MAAAA,OAAO,CAACiD,KAAR,CAAe,cAAa3C,MAAM,CAAC8C,cAAP,CAAsBlB,IAAI,CAACmB,QAA3B,CAAqC,EAAjE;AACA;AACD;;AAED,QAAI3B,gBAAgB,IAAII,SAApB,IAAiCJ,gBAAgB,CAACkC,EAAjB,KAAwB1B,IAAI,CAAC0B,EAAlE,EAAsE;AACpE5D,MAAAA,OAAO,CAACiD,KAAR,CAAe,mBAAkB3C,MAAM,CAAC8C,cAAP,CAAsBlB,IAAI,CAAC2B,aAAL,EAAtB,CAA4C,EAA7E;AACA;AACD;;AAED,QAAI3B,IAAI,CAACoB,OAAL,EAAJ,EAAoB;AAClB;AACAtD,MAAAA,OAAO,CAACiD,KAAR,CAAe,sBAAqB3C,MAAM,CAAC8C,cAAP,CAAsBlB,IAAI,CAAC2B,aAAL,EAAtB,CAA4C,EAAhF;AACD;;AAED,QAAInC,gBAAgB,IAAII,SAAxB,EAAmC;AACjCJ,MAAAA,gBAAgB,CAAC8B,IAAjB;AACD;;AAEDtB,IAAAA,IAAI,CAAC4B,KAAL;AACAnC,IAAAA,mBAAmB,CAACO,IAAD,CAAnB;AACAb,IAAAA,IAAI;AACL;;AAED,WAAS0C,gBAAT,CAA0BC,KAA1B,EAAsC;AACpC,QAAI5C,WAAW,KAAKU,SAApB,EAA+B;AAC/B,UAAMI,IAAI,GAAGd,WAAb,CAFoC,CAIpC;AACA;AACA;AACA;AACA;AACA;;AAEAc,IAAAA,IAAI,CAAC+B,SAAL,CAAe7B,IAAf,CAAoB4B,KAAK,CAACE,OAAN,EAApB;AACA7C,IAAAA,IAAI;AACL;;AAED,WAAS8C,eAAT,GAAgC;AAC9B,QAAI/C,WAAW,KAAKU,SAApB,EAA+B,OAAOA,SAAP;AAC/B,UAAMI,IAAI,GAAGd,WAAb;AAEA,UAAMgD,QAAQ,GAAGlC,IAAI,CAACmC,iBAAL,EAAjB;;AACA,QAAID,QAAQ,GAAG,CAAf,EAAkB;AAChB,aAAO3D,MAAM,CAAC2D,QAAD,CAAb;AACD;;AAED,WAAOtC,SAAP;AACD;;AAED,WAASwC,WAAT,GAA+B;AAC7B,QAAIlD,WAAW,KAAKU,SAApB,EAA+B,OAAO,EAAP;AAC/B,UAAMI,IAAI,GAAGd,WAAb;AAEA,QAAImD,MAAM,GAAG,OAAOlE,cAAc,CAACmE,kBAAf,CAAkCtC,IAAlC,CAAP,GAAiD7B,cAAc,CAACoE,WAAf,CAA2BvC,IAA3B,CAAjD,GAAoF7B,cAAc,CAACqE,WAAf,CAA2BxC,IAA3B,CAApF,GAAuH7B,cAAc,CAACsE,kBAAf,CAAkCzC,IAAlC,CAApI;AACA,WAAOqC,MAAP;AACD;;AAED,WAASK,gBAAT,GAA4B;AAC1B,QAAIxD,WAAW,KAAKU,SAApB,EAA+B;AAC/B,UAAMI,IAAI,GAAGd,WAAb;;AAEA,QAAII,UAAU,IAAI,CAAC,CAAnB,EAAsB;AACpBU,MAAAA,IAAI,CAACC,cAAL,CAAoBC,IAApB,CAAyB,CAAC,CAA1B,EADoB,CACS;AAC9B,KAFD,MAEO;AACLF,MAAAA,IAAI,CAACC,cAAL,CAAoBC,IAApB,CAAyBZ,UAAU,GAAG,IAAb,GAAoB,IAA7C;AACD;AACF;AAED;;;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGqD,CAAD,IAAOlC,UAAU,CAACkC,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,eAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGA,CAAD,IAAO3B,QAAQ,CAAC2B,CAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAGA,CAAD,IAAOlB,SAAS,CAACkB,CAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF,eAWE,oBAAC,UAAD;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,YAAY,EAAEV,eAAe,EAAlD;AAAsD,IAAA,IAAI,EAAEH,KAAK,IAAID,gBAAgB,CAACC,KAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYGM,WAAW,EAZd,eAcE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE9C,UAAd;AAA0B,IAAA,WAAW,EAAC,0BAAtC;AAA6C,IAAA,MAAM,EAAC,cAApD;AAAyD,IAAA,MAAM,EAAC,GAAhE;AAAoE,IAAA,QAAQ,EAAGc,KAAD,IAAWb,aAAa,CAACqD,MAAM,CAACxC,KAAK,CAACyC,MAAN,CAAaf,KAAd,CAAP,CAAtG;AAAoI,IAAA,YAAY,EAAEY,gBAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAJF,eAqBE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,8DADd;AAC2B,IAAA,KAAK,EAAEtD,OADlC;AAC2C,IAAA,QAAQ,EAAGgB,KAAD,IAAWf,UAAU,CAACe,KAAK,CAACyC,MAAN,CAAaf,KAAd,CAD1E;AACgG,IAAA,MAAM,EAAGa,CAAD,IAAOxC,MAAM,CAACwC,CAAD,CADrH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AA2BD,CA7MD;;AA+MA,eAAe5D,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Button, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n  const [expectTime, setExpectTime] = useState(-1);\n\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      const expectTime = currentTask.getActualExpectConsume()\n      setExpectTime(currentTask.getActualExpectConsume())\n      if (expectTime == -1) {\n        task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n      } else {\n        task.expectConsumes.push(expectTime * 3600 * 1000) \n      }\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.orderTasks()\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function startTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (currentDoingTask != undefined && currentDoingTask.id === task.id) {\n      message.error(`任务已经在进行中，上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n      return\n    }\n\n    if (task.isDoing()) {\n      // todo 自动恢复\n      message.error(`任务异常中断，重新开始。上次开始时间：${Format.formatTimeInMs(task.lastStartTime())}`)\n    }\n\n    if (currentDoingTask != undefined) {\n      currentDoingTask.stop()\n    }\n\n    task.start()\n    setCurrentDoingTask(task)\n    save()\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    save()\n  }\n\n  function getDeadlineTime(): any {\n    if (currentTask === undefined) return undefined\n    const task = currentTask\n\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return undefined\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = \"  \" + TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task)\n    return result\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000) \n    }\n  }\n\n  /* ---------------------------------------------------------- */\n\n  return (\n    <Container>\n      {/* todo 没有 currentTask 就不展示 */}\n\n      {/* 不加这个 div 会换行 */}\n      <Div>\n        <ButtonGroup>\n          {/* 点击整行就是查看且开始，view是只查看不开始。暂时用不着吧 */}\n          {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n          <Button onClick={(e) => deleteTask(e)}>D</Button>\n          {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n          <Button onClick={(e) => doneTask(e)}>Done</Button>\n          <Button type=\"primary\" onClick={(e) => startTask(e)}>Start</Button>\n\n        </ButtonGroup>\n\n        <DatePicker showTime defaultValue={getDeadlineTime()} onOk={value => onChooseDeadline(value)} />\n        {getShowTips()}\n\n        <Input value={expectTime} placeholder=\"花费时间\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onPressEnter={changeExceptTime} />\n      </Div>\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;"]},"metadata":{},"sourceType":"module"}