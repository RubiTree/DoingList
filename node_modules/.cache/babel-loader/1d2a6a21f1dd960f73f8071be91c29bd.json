{"ast":null,"code":"var _jsxFileName = \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Duration, TimeLine } from '../model/model';\nimport Utils from '../utils/Utils';\nimport DateUtils from '../utils/DateUtils';\nimport TaskInfoFormat from '../utils/TaskInfoFormat';\nimport Format from '../utils/Format';\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport moment from 'moment';\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n`;\nconst Div = styled.div`\n`;\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`;\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`;\n\nconst ContentLayout = () => {\n  const {\n    storeModel\n  } = stores.useStore('mainmodel');\n  const {\n    currentTask\n  } = stores.useStore(CurrentTaskKey);\n  const {\n    save\n  } = stores.useStore('mainmodel');\n  const [content, setContent] = useState(\"\");\n  const [timeline, setTimeline] = useState(\"\");\n  const [isExpectConsume, setExpectConsumeUI] = useState(false);\n  const [expectTime, setExpectTime] = useState(-1);\n  const [newAdjustTime, setNewAdjustTime] = useState(\"\");\n  const [isHaveDeadline, setHaveDeadlineUI] = useState(false);\n  const [deadline, setDeadlineUI] = useState(null);\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState(null);\n  const [expectStartTime, setExpectStartTimeUI] = useState(null); // toolsbar\n\n  const {\n    currentDoingTask,\n    setCurrentDoingTask\n  } = stores.useStore(CurrentDoingTaskKey);\n  /* ---------------------------初始化------------------------------- */\n  // 渲染当前note\n\n  const [lastTask, setLastTask] = useState(undefined);\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return;\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask);\n      setContent(currentTask.note.content); // todo 这部分逻辑抽出去\n\n      const expectTime = currentTask.getActualExpectConsume();\n\n      if (expectTime < 0) {\n        setExpectTime(expectTime);\n        setExpectConsume(false);\n      } else {\n        setExpectConsume(true);\n        setExpectTime(expectTime / (3600 * 1000));\n      }\n\n      setNewAdjustTime(\"\");\n      setPendingUI(currentTask.isPending());\n      setPendingReason(currentTask.pendingReason);\n      setPendingTimeUI(getPendingDeadlineTime(currentTask));\n      setDeadlineUI(getDeadlineTime(currentTask));\n      setHaveDeadline(currentTask.isHaveDeadline());\n\n      if (currentTask !== undefined && !currentTask.isStarted()) {\n        setExpectStartTimeUI(moment(currentTask.expectStartTime));\n      } else {\n        setExpectStartTimeUI(null);\n      }\n\n      storeModel.normalUpdate();\n    }\n  });\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event) {\n    event.preventDefault();\n    saveToLocal(event, false);\n  }\n\n  function saveToLocal(event, isManual) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return;\n    currentTask.note.content = content;\n    save();\n    if (isManual) message.info(\"已保存\");\n  }\n  /* ------------------------------toolsbar---------------------------- */\n\n\n  function deleteTask(event) {\n    if (currentTask === undefined) return;\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\");\n          save();\n        } else {\n          message.error(\"删除任务失败\");\n        }\n      }\n\n    });\n  }\n\n  function doneTask(event) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`);\n      return;\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n\n        onOk() {\n          _realDone(task);\n        }\n\n      });\n      return;\n    }\n\n    task.stop();\n    setCurrentDoingTask(undefined);\n\n    _realDone(task);\n  }\n\n  function _realDone(task) {\n    task.done();\n    storeModel.normalUpdate();\n    message.success(\"任务已完成\");\n    save();\n  }\n\n  function onChooseDeadline(value) {\n    if (currentTask === undefined) return;\n    const task = currentTask; // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf());\n    setDeadlineUI(getDeadlineTime(currentTask));\n    save();\n  }\n\n  function getDeadlineTime(task) {\n    const deadline = task.getActualDeadline();\n\n    if (deadline > 0) {\n      return moment(deadline);\n    }\n\n    return null;\n  }\n\n  function getShowTips() {\n    if (currentTask === undefined) return \"\";\n    const task = currentTask;\n    let result = TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task) + TaskInfoFormat.getStartExpected(task);\n    return result;\n  }\n\n  function setAdjustTime() {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n    const newAdjustTimeNum = Number(newAdjustTime);\n\n    if (newAdjustTimeNum === 0 || newAdjustTimeNum === NaN) {\n      return;\n    }\n\n    task.adjustConsume += newAdjustTimeNum * 3600 * 1000;\n    storeModel.totalAdjustConsumeTime += newAdjustTimeNum * 3600 * 1000;\n    let msg = \"\";\n\n    if (newAdjustTimeNum > 0) {\n      msg = `增加 ${newAdjustTimeNum} `;\n    } else {\n      msg = `减少 ${-newAdjustTimeNum} `;\n    }\n\n    message.success(`耗时已${msg}小时`);\n    setNewAdjustTime(\"\");\n    save();\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1); // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000);\n    }\n\n    save();\n  }\n  /* ---------------------------------------------------------- */\n\n\n  function onChoosePendingDeadline(value) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`);\n      return;\n    }\n\n    const pendingLine = value.valueOf();\n\n    if (!isTimeValid(pendingLine, \"Pending时间\", Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return;\n    }\n\n    task.pendingDeadline = pendingLine;\n    setPendingTimeUI(getPendingDeadlineTime(task));\n    save();\n  }\n\n  function onChangeExpectStartTime(value, task) {\n    const expectStartTime = value.valueOf();\n\n    if (!isTimeValid(expectStartTime, \"预期开始时间\", Duration.create(undefined, task.pendingDeadline, \"PendLine\"), Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return;\n    }\n\n    setExpectStartTimeUI(expectStartTime);\n    task.expectStartTime = expectStartTime;\n    save();\n  }\n\n  function isTimeValid(time, timeName, ...limitDurations) {\n    let isValid = true;\n\n    for (let index = 0; index < limitDurations.length; index++) {\n      const dur = limitDurations[index];\n\n      if (dur.start > 0 && time < dur.start) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})早于${dur.start}(${Format.formatTimeInMinute(dur.start)})，请重新设置`);\n        isValid = false;\n      } else if (dur.end > 0 && time > dur.end) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})晚于${dur.end}(${Format.formatTimeInMinute(dur.end)})，请重新设置`);\n        isValid = false;\n      }\n\n      if (!isValid) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getPendingDeadlineTime(task) {\n    const deadline = task.pendingDeadline;\n\n    if (deadline > 0) {\n      return moment(deadline);\n    }\n\n    return null;\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n    task.pendingReason = pendingReason;\n    save();\n  }\n\n  function setPending(pendingStatus) {\n    if (currentTask === undefined) return;\n    const task = currentTask;\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1;\n      setPendingTimeUI(null);\n      save();\n    }\n\n    setPendingUI(pendingStatus);\n  }\n\n  function setExpectConsume(pendingStatus) {\n    if (currentTask === undefined) return;\n    const task = currentTask; // 关闭就不估时并保存\n\n    if (!pendingStatus) {\n      task.expectConsumes.push(-1);\n      setExpectTime(-1);\n      save();\n    }\n\n    setExpectConsumeUI(pendingStatus);\n  }\n\n  function setHaveDeadline(pendingStatus) {\n    if (currentTask === undefined) return;\n    const task = currentTask; // 关闭就不估时并保存\n\n    if (!pendingStatus) {\n      task.deadlines.push(-1);\n      setDeadlineUI(null);\n      save();\n    }\n\n    setHaveDeadlineUI(pendingStatus);\n  }\n\n  function onAddTimeline(event) {\n    event.preventDefault();\n    if (currentTask === undefined) return;\n\n    if (Utils.isStringEmpty(timeline)) {\n      message.error(\"请输入内容\");\n      return;\n    }\n\n    const endTimeline = currentTask.note.endTimeLine();\n\n    if (endTimeline == null || !DateUtils.isSameDay(endTimeline.timeStamp, Utils.getTimestamp())) {\n      currentTask.note.timeLines.push(TimeLine.createDivNode());\n    }\n\n    currentTask.note.timeLines.push(TimeLine.createContentNode(timeline));\n    save();\n    setTimeline(\"\");\n  }\n  /* ---------------------------------------------------------- */\n\n\n  if (currentTask === undefined) return null;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 5\n    }\n  }, currentTask !== undefined && /*#__PURE__*/React.createElement(Div, {\n    style: {\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => deleteTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => doneTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, \"Done\")), /*#__PURE__*/React.createElement(Switch, {\n    style: {\n      marginLeft: '5px',\n      marginRight: '3px'\n    },\n    checkedChildren: \"\\u4F30\\u65F6\",\n    unCheckedChildren: \"\\u4E0D\\u9650\",\n    checked: isExpectConsume,\n    onChange: event => setExpectConsume(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    style: {\n      marginLeft: '5px',\n      marginRight: '3px'\n    },\n    checkedChildren: \"\\u622A\\u6B62\\u65F6\\u95F4\",\n    unCheckedChildren: \"\\u6CA1\\u6709\\u622A\\u6B62\",\n    checked: isHaveDeadline,\n    onChange: event => setHaveDeadline(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    style: {\n      marginLeft: '9px',\n      marginRight: '5px'\n    },\n    checkedChildren: \"Pending\",\n    unCheckedChildren: \"NoPend\",\n    checked: isPending,\n    onChange: event => setPending(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"15px\",\n      marginRight: \"15px\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }\n  }, getShowTips()), currentTask !== undefined && /*#__PURE__*/React.createElement(Div, {\n    style: {\n      marginTop: \"5px\",\n      marginBottom: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }\n  }, expectStartTime !== null && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }\n  }, \"\\u9884\\u671F\\u5F00\\u59CB\\u65F6\\u95F4\\uFF1A\", /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    value: expectStartTime,\n    onOk: value => onChangeExpectStartTime(value, currentTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 11\n    }\n  })), currentTask.isStarted() && /*#__PURE__*/React.createElement(Input, {\n    style: {\n      marginLeft: \"15px\",\n      width: '130px'\n    },\n    value: newAdjustTime,\n    placeholder: `当前${currentTask.adjustConsume} 回车保存`,\n    prefix: \"\\u8C03\\u6574\\u8017\\u65F6\",\n    suffix: \"h\",\n    onChange: event => setNewAdjustTime(event.target.value),\n    onPressEnter: setAdjustTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }), isExpectConsume && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 13\n    }\n  }, \"\\u4F30\\u65F6\\uFF1A\", /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '100px'\n    },\n    value: expectTime,\n    placeholder: \"\\u82B1\\u8D39\\u65F6\\u95F4 \\u81EA\\u52A8\\u4FDD\\u5B58\",\n    prefix: \"\\u9884\\u8BA1\",\n    suffix: \"h\",\n    onChange: event => setExpectTime(Number(event.target.value)),\n    onBlur: changeExceptTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }\n  })), isHaveDeadline && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, \"DeadLine\\uFF1A\", /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    value: deadline,\n    onOk: value => onChooseDeadline(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }\n  })), isPending && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, \"Pending\\uFF1A\", /*#__PURE__*/React.createElement(DatePicker, {\n    showTime: true,\n    value: pendingTime,\n    onOk: value => onChoosePendingDeadline(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '200px'\n    },\n    value: pendingReason,\n    prefix: \"\\u539F\\u56E0:\",\n    placeholder: \"\\uFF08\\u81EA\\u52A8\\u4FDD\\u5B58\\uFF09\",\n    onChange: event => setPendingReason(event.target.value),\n    onBlur: savePendingStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }))), currentTask !== undefined && /*#__PURE__*/React.createElement(Div, {\n    style: {\n      marginLeft: \"15px\",\n      marginRight: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"\\u8F93\\u5165\\u65F6\\u95F4\\u7EBF\\uFF0C\\u56DE\\u8F66\\u6DFB\\u52A0\",\n    value: timeline,\n    onChange: event => setTimeline(event.target.value),\n    onPressEnter: onAddTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Div, {\n    style: {\n      height: \"250px\",\n      overflow: \"scroll\",\n      whiteSpace: \"pre-wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 11\n    }\n  }, currentTask.note.getFormartTimeLines())), /*#__PURE__*/React.createElement(Editor, {\n    placeholder: \"\\u4EFB\\u52A1\\u65E5\\u5FD7\\uFF08\\u81EA\\u52A8\\u4FDD\\u5B58\\uFF09\",\n    value: content,\n    onChange: event => setContent(event.target.value),\n    onBlur: e => onBlur(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ContentLayout;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/ContentLayout.tsx"],"names":["React","useState","useEffect","styled","Input","message","Switch","Button","Modal","DatePicker","stores","Duration","TimeLine","Utils","DateUtils","TaskInfoFormat","Format","CurrentTaskKey","CurrentDoingTaskKey","moment","Container","div","Div","Editor","TextArea","ButtonGroup","Group","ContentLayout","storeModel","useStore","currentTask","save","content","setContent","timeline","setTimeline","isExpectConsume","setExpectConsumeUI","expectTime","setExpectTime","newAdjustTime","setNewAdjustTime","isHaveDeadline","setHaveDeadlineUI","deadline","setDeadlineUI","isPending","setPendingUI","pendingReason","setPendingReason","pendingTime","setPendingTimeUI","expectStartTime","setExpectStartTimeUI","currentDoingTask","setCurrentDoingTask","lastTask","setLastTask","undefined","isSameTask","note","getActualExpectConsume","setExpectConsume","getPendingDeadlineTime","getDeadlineTime","setHaveDeadline","isStarted","normalUpdate","onBlur","event","preventDefault","saveToLocal","isManual","info","deleteTask","confirm","title","onOk","removeTask","success","error","doneTask","task","isDone","formatTimeInMs","doneTime","isDoing","_realDone","stop","done","onChooseDeadline","value","deadlines","push","valueOf","getActualDeadline","getShowTips","result","getDoingStatusTips","getConsumed","getDeadline","getConsumeExpected","getStartExpected","setAdjustTime","newAdjustTimeNum","Number","NaN","adjustConsume","totalAdjustConsumeTime","msg","changeExceptTime","expectConsumes","onChoosePendingDeadline","pendingLine","isTimeValid","create","pendingDeadline","onChangeExpectStartTime","time","timeName","limitDurations","isValid","index","length","dur","start","formatTimeInMinute","end","savePendingStatus","setPending","pendingStatus","onAddTimeline","isStringEmpty","endTimeline","endTimeLine","isSameDay","timeStamp","getTimestamp","timeLines","createDivNode","createContentNode","margin","e","marginLeft","marginRight","fontWeight","marginTop","marginBottom","width","target","height","overflow","whiteSpace","getFormartTimeLines"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input, message, Switch, Button, List, Dropdown, Menu, Modal, DatePicker } from 'antd';\nimport stores from '../stores';\nimport { Task } from '../model/model'\nimport { StoreModel, Duration, TimeLine } from '../model/model'\nimport Utils from '../utils/Utils'\nimport DateUtils from '../utils/DateUtils'\nimport MomentUtils from '../utils/MomentUtils'\nimport TaskInfoFormat from '../utils/TaskInfoFormat'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\nimport 'antd/dist/antd.css';\nimport { CurrentDoingTaskKey } from '../stores/CurrentDoingTaskStore';\nimport { ClickParam } from 'antd/lib/menu';\n// import { DateType } from 'antd/lib/date-picker';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst Container = styled.div`\n  background: #ffffff;\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n`\n\nconst Div = styled.div`\n`\n\nconst Editor = styled(Input.TextArea)`\n  flex-grow: 1;\n`\n\nconst ButtonGroup = styled(Button.Group)`\nmargin: 2px;\n`\n\nconst ContentLayout: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined }\n  const { save } = stores.useStore('mainmodel') as { save: () => void };\n  const [content, setContent] = useState(\"\")\n  const [timeline, setTimeline] = useState(\"\")\n\n  const [isExpectConsume, setExpectConsumeUI] = useState(false);\n  const [expectTime, setExpectTime] = useState(-1);\n\n  const [newAdjustTime, setNewAdjustTime] = useState(\"\");\n\n  const [isHaveDeadline, setHaveDeadlineUI] = useState(false);\n  const [deadline, setDeadlineUI] = useState<any>(null);\n\n  const [isPending, setPendingUI] = useState(false);\n  const [pendingReason, setPendingReason] = useState(\"\");\n  const [pendingTime, setPendingTimeUI] = useState<any>(null);\n\n  const [expectStartTime, setExpectStartTimeUI] = useState<any>(null);\n\n\n  // toolsbar\n  const { currentDoingTask, setCurrentDoingTask } = stores.useStore(CurrentDoingTaskKey) as { currentDoingTask: Task | undefined, setCurrentDoingTask: (note: Task | undefined) => void }\n\n  /* ---------------------------初始化------------------------------- */\n\n  // 渲染当前note\n  const [lastTask, setLastTask] = useState<Task | undefined>(undefined)\n  useEffect(() => {\n    // console.log(`Current content:${content}`)\n    if (currentTask === undefined) return\n\n    if (!currentTask.isSameTask(lastTask)) {\n      // todo 这里放同步应该不会有问题吧，最大的问题应该是前面切了note但没切content的时候进行保存...\n      setLastTask(currentTask)\n      setContent(currentTask.note.content)\n\n      // todo 这部分逻辑抽出去\n      const expectTime = currentTask.getActualExpectConsume()\n      if (expectTime < 0) {\n        setExpectTime(expectTime)\n        setExpectConsume(false)\n      } else {\n        setExpectConsume(true)\n        setExpectTime(expectTime / (3600 * 1000))\n      }\n\n      setNewAdjustTime(\"\")\n\n      setPendingUI(currentTask.isPending())\n      setPendingReason(currentTask.pendingReason)\n      setPendingTimeUI(getPendingDeadlineTime(currentTask))\n\n      setDeadlineUI(getDeadlineTime(currentTask))\n      setHaveDeadline(currentTask.isHaveDeadline())\n\n      if (currentTask !== undefined && !currentTask.isStarted()) {\n        setExpectStartTimeUI(moment(currentTask.expectStartTime))\n      } else {\n        setExpectStartTimeUI(null)\n      }\n\n      storeModel.normalUpdate()\n    }\n  })\n\n  /* ----------------------------保存Note文本------------------------------ */\n\n  function onBlur(event: any) {\n    event.preventDefault();\n    saveToLocal(event, false)\n  }\n\n  function saveToLocal(event: any, isManual: boolean) {\n    if (event) event.preventDefault();\n    if (currentTask === undefined) return\n\n    currentTask.note.content = content\n    save()\n\n    if (isManual) message.info(\"已保存\")\n  }\n\n  /* ------------------------------toolsbar---------------------------- */\n\n  function deleteTask(event: any) {\n    if (currentTask === undefined) return\n\n    Modal.confirm({\n      title: '确定要删除吗？',\n      content: `是否删除任务：${currentTask.title}`,\n      onOk() {\n        if (storeModel.removeTask(currentTask)) {\n          message.success(\"删除任务成功\")\n          save()\n        } else {\n          message.error(\"删除任务失败\")\n        }\n      },\n    });\n  }\n\n  function doneTask(event: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (task.isDone()) {\n      message.error(`任务已完成，完成时间:${Format.formatTimeInMs(task.doneTime)}`)\n      return\n    }\n\n    if (!task.isDoing()) {\n      Modal.confirm({\n        title: '当前任务不在进行中，确定要完成吗？',\n        content: `是否完成任务：${task.title}`,\n        onOk() {\n          _realDone(task)\n        },\n      });\n      return\n    }\n\n    task.stop()\n    setCurrentDoingTask(undefined)\n    _realDone(task)\n  }\n\n  function _realDone(task: Task) {\n    task.done()\n    storeModel.normalUpdate()\n    message.success(\"任务已完成\")\n    save()\n  }\n\n  function onChooseDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 整了半天，原来直接 valueOf() 就行，百度了半天\n    // if(value instanceof Moment){\n    //   let moment:Moment = value\n    //   console.log('onOk: ', moment.);\n    // }\n    // console.log('onOk: ', value.valueOf());\n\n    task.deadlines.push(value.valueOf())\n    setDeadlineUI(getDeadlineTime(currentTask))\n    save()\n  }\n\n  function getDeadlineTime(task: Task): any {\n    const deadline = task.getActualDeadline();\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function getShowTips(): string {\n    if (currentTask === undefined) return \"\"\n    const task = currentTask\n\n    let result = TaskInfoFormat.getDoingStatusTips(task) + TaskInfoFormat.getConsumed(task) + TaskInfoFormat.getDeadline(task) + TaskInfoFormat.getConsumeExpected(task) + TaskInfoFormat.getStartExpected(task)\n    return result\n  }\n\n  function setAdjustTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    const newAdjustTimeNum = Number(newAdjustTime)\n    if (newAdjustTimeNum === 0 || newAdjustTimeNum === NaN) {\n      return\n    }\n\n    task.adjustConsume += newAdjustTimeNum * 3600 * 1000\n    storeModel.totalAdjustConsumeTime += newAdjustTimeNum * 3600 * 1000\n\n    let msg = \"\"\n    if(newAdjustTimeNum >0){\n      msg = `增加 ${newAdjustTimeNum} `\n    }else{\n      msg = `减少 ${-newAdjustTimeNum} `\n    }\n    message.success(`耗时已${msg}小时`)\n\n    setNewAdjustTime(\"\")\n\n    save()\n  }\n\n  function changeExceptTime() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (expectTime == -1) {\n      task.expectConsumes.push(-1) // todo 暂时不优化交互了，-1就是不设置时间\n    } else {\n      task.expectConsumes.push(expectTime * 3600 * 1000)\n    }\n\n    save()\n  }\n\n  /* ---------------------------------------------------------- */\n\n  function onChoosePendingDeadline(value: any) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!isPending) {\n      message.error(`设置无效，请打开 pending 开关后重新设置`)\n      return\n    }\n\n    const pendingLine = value.valueOf()\n    if (!isTimeValid(pendingLine, \"Pending时间\", Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    task.pendingDeadline = pendingLine\n    setPendingTimeUI(getPendingDeadlineTime(task))\n    save()\n  }\n\n  function onChangeExpectStartTime(value: any, task: Task) {\n    const expectStartTime = value.valueOf()\n\n    if (!isTimeValid(expectStartTime, \"预期开始时间\", Duration.create(undefined, task.pendingDeadline, \"PendLine\"), Duration.create(undefined, task.getActualDeadline(), \"Deadline\"))) {\n      return\n    }\n\n    setExpectStartTimeUI(expectStartTime)\n    task.expectStartTime = expectStartTime\n    save()\n  }\n\n  function isTimeValid(time: number, timeName: string, ...limitDurations: Duration[]): boolean {\n    let isValid = true\n    for (let index = 0; index < limitDurations.length; index++) {\n      const dur = limitDurations[index];\n      if (dur.start > 0 && time < dur.start) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})早于${dur.start}(${Format.formatTimeInMinute(dur.start)})，请重新设置`)\n        isValid = false\n      } else if (dur.end > 0 && time > dur.end) {\n        message.error(`${timeName}(${Format.formatTimeInMinute(time)})晚于${dur.end}(${Format.formatTimeInMinute(dur.end)})，请重新设置`)\n        isValid = false\n      }\n      if (!isValid) {\n        return false\n      }\n    }\n    return true\n  }\n\n  function getPendingDeadlineTime(task: Task): any {\n    const deadline = task.pendingDeadline\n\n    if (deadline > 0) {\n      return moment(deadline)\n    }\n\n    return null\n  }\n\n  function savePendingStatus() {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    task.pendingReason = pendingReason\n    save()\n  }\n\n  function setPending(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    if (!pendingStatus) {\n      task.pendingDeadline = -1\n      setPendingTimeUI(null)\n      save()\n    }\n    setPendingUI(pendingStatus)\n  }\n\n  function setExpectConsume(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      task.expectConsumes.push(-1)\n      setExpectTime(-1)\n      save()\n    }\n    setExpectConsumeUI(pendingStatus)\n  }\n\n  function setHaveDeadline(pendingStatus: boolean) {\n    if (currentTask === undefined) return\n    const task = currentTask\n\n    // 关闭就不估时并保存\n    if (!pendingStatus) {\n      task.deadlines.push(-1)\n      setDeadlineUI(null)\n      save()\n    }\n    setHaveDeadlineUI(pendingStatus)\n  }\n\n  function onAddTimeline(event: any) {\n    event.preventDefault();\n\n    if (currentTask === undefined) return\n\n    if (Utils.isStringEmpty(timeline)) {\n      message.error(\"请输入内容\")\n      return\n    }\n\n    const endTimeline = currentTask.note.endTimeLine();\n    if (endTimeline == null || !DateUtils.isSameDay(endTimeline.timeStamp, Utils.getTimestamp())) {\n      currentTask.note.timeLines.push(TimeLine.createDivNode())\n    }\n\n    currentTask.note.timeLines.push(TimeLine.createContentNode(timeline))\n\n    save()\n\n    setTimeline(\"\")\n  }\n\n  /* ---------------------------------------------------------- */\n\n  if (currentTask === undefined) return null\n\n  return (\n    <Container >\n      {/* 不加这个 div 会换行 */}\n      {currentTask !== undefined &&\n        <Div style={{ margin: \"5px\" }}>\n          <ButtonGroup>\n            {/* <Button type=\"primary\" size=\"small\">view</Button> */}\n            <Button onClick={(e) => deleteTask(e)}>D</Button>\n            {/* <Button type=\"primary\" size=\"small\" onClick={(e) => startTask(e, task)}>Stop</Button> */}\n            <Button onClick={(e) => doneTask(e)}>Done</Button>\n          </ButtonGroup>\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"估时\" unCheckedChildren=\"不限\" checked={isExpectConsume} onChange={(event) => setExpectConsume(event)} />\n\n          <Switch style={{ marginLeft: '5px', marginRight: '3px' }} checkedChildren=\"截止时间\" unCheckedChildren=\"没有截止\" checked={isHaveDeadline} onChange={(event) => setHaveDeadline(event)} />\n\n          <Switch style={{ marginLeft: '9px', marginRight: '5px' }} checkedChildren=\"Pending\" unCheckedChildren=\"NoPend\" checked={isPending} onChange={(event) => setPending(event)} />\n\n        </Div>\n      }\n\n\n      <div style={{ marginLeft: \"15px\", marginRight: \"15px\", fontWeight: \"bold\" }} >{getShowTips()}</div>\n\n\n      {currentTask !== undefined &&\n        <Div style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n          {expectStartTime !== null &&\n            <span style={{ marginLeft: \"15px\" }} >预期开始时间：\n          <DatePicker showTime value={expectStartTime} onOk={value => onChangeExpectStartTime(value, currentTask)} />\n            </span>\n          }\n\n          {currentTask.isStarted() &&\n            <Input style={{ marginLeft: \"15px\", width: '130px' }} value={newAdjustTime} placeholder={`当前${currentTask.adjustConsume} 回车保存`} prefix=\"调整耗时\" suffix=\"h\" onChange={(event) => setNewAdjustTime(event.target.value)} onPressEnter={setAdjustTime} />\n          }\n\n          {isExpectConsume &&\n            <span style={{ marginLeft: \"15px\" }} >估时：\n        <Input style={{ width: '100px' }} value={expectTime} placeholder=\"花费时间 自动保存\" prefix=\"预计\" suffix=\"h\" onChange={(event) => setExpectTime(Number(event.target.value))} onBlur={changeExceptTime} />\n            </span>\n          }\n\n\n          {isHaveDeadline &&\n            <span style={{ marginLeft: \"15px\" }} >DeadLine：\n        <DatePicker showTime value={deadline} onOk={value => onChooseDeadline(value)} />\n            </span>\n          }\n\n          {isPending &&\n            <span style={{ marginLeft: \"15px\" }} >Pending：\n      <DatePicker showTime value={pendingTime} onOk={value => onChoosePendingDeadline(value)} />\n\n              <Input style={{ width: '200px' }} value={pendingReason} prefix=\"原因:\" placeholder=\"（自动保存）\" onChange={(event) => setPendingReason(event.target.value)} onBlur={savePendingStatus} />\n            </span>\n          }\n\n        </Div>\n      }\n\n\n      {currentTask !== undefined &&\n        <Div style={{ marginLeft: \"15px\", marginRight: \"15px\" }} >\n          <Input placeholder=\"输入时间线，回车添加\" value={timeline} onChange={(event) => setTimeline(event.target.value)} onPressEnter={onAddTimeline} />\n          <Div style={{ height: \"250px\", overflow: \"scroll\", whiteSpace: \"pre-wrap\" }}>\n            {currentTask.note.getFormartTimeLines()}\n          </Div>\n        </Div>\n      }\n\n      <Editor\n        placeholder=\"任务日志（自动保存）\" value={content} onChange={(event) => setContent(event.target.value)} onBlur={(e) => onBlur(e)}\n      />\n    </Container>\n  );\n}\n\nexport default ContentLayout;"]},"metadata":{},"sourceType":"module"}