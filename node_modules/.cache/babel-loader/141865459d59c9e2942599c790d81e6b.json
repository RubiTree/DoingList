{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\npadding:2px;\\nmargin:1px;\\n:hover{\\n  background-color: \",\"\\n};\\nbackground-color: \",\";\\n\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\nheight: 45vh;\\noverflow-y: scroll;\\nwhite-space: pre-wrap;\\nbackground-color:#ffffff;\\n\\n::-webkit-scrollbar {\\n            -webkit-appearance: none;\\n            width: 7px;\\n        }\\n        ::-webkit-scrollbar-thumb {\\n            border-radius: 4px;\\n            background-color: rgba(0, 0, 0, .5);\\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n        }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import'reflect-metadata';import React from'react';import styled from'styled-components';import stores from'../stores';import{List}from'antd';import DateUtils from'../utils/DateUtils';import Format from'../utils/Format';import{CurrentTaskKey}from'../stores/CurrentTaskStore';var Div=styled.div(_templateObject());var NoteItem=styled.div(_templateObject2(),function(props){if(props.choosed){return'#f5b52b';}else{return'#b4e7fc';}},function(props){if(props.choosed){return'#f5b52b';}else{return'rgba(194, 226, 255, 0.495)';}});var TodayWorkConatiner=function TodayWorkConatiner(){var _ref=stores.useStore('mainmodel'),storeModel=_ref.storeModel;var _ref2=stores.useStore(CurrentTaskKey),currentTask=_ref2.currentTask,setCurrentTask=_ref2.setCurrentTask;function getCurrentDayDoingTasks(){return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(0)).sort(function(a,b){if(a.lastStartTime()>b.lastStartTime()){return-1;}else if(a.lastStartTime()<b.lastStartTime()){return 1;}else{return 0;}});}return/*#__PURE__*/React.createElement(Div,null,/*#__PURE__*/React.createElement(List,{size:\"small\",bordered:true,dataSource:getCurrentDayDoingTasks(),renderItem:function renderItem(task){return/*#__PURE__*/React.createElement(NoteItem,{choosed:task.isSameTask(currentTask),key:task.id,onClick:function onClick(e){return setCurrentTask(task);}},task.title,\" \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"#0295d2\"}},Format.formatDuration3(task.getAllDurationInDur(DateUtils.getMyCurrentDayDur(0)))));}}));};export default TodayWorkConatiner;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/layouts/TodayWorkConatiner.tsx"],"names":["React","styled","stores","List","DateUtils","Format","CurrentTaskKey","Div","div","NoteItem","props","choosed","TodayWorkConatiner","useStore","storeModel","currentTask","setCurrentTask","getCurrentDayDoingTasks","getMyCurrentDayDur","sort","a","b","lastStartTime","task","isSameTask","id","e","title","color","formatDuration3","getAllDurationInDur"],"mappings":"s7BAAA,MAAO,kBAAP,CACA,MAAOA,CAAAA,KAAP,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,OAASC,IAAT,KAAqB,MAArB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,OAASC,cAAT,KAA+B,4BAA/B,CAIA,GAAMC,CAAAA,GAAG,CAAGN,MAAM,CAACO,GAAV,mBAAT,CAiBA,GAAMC,CAAAA,QAAQ,CAAGR,MAAM,CAACO,GAAV,oBAIQ,SAACE,KAAD,CAAiC,CACnD,GAAIA,KAAK,CAACC,OAAV,CAAmB,CACjB,MAAO,SAAP,CACD,CAFD,IAEO,CACL,MAAO,SAAP,CACD,CACF,CAVW,CAaM,SAACD,KAAD,CAAiC,CACjD,GAAIA,KAAK,CAACC,OAAV,CAAmB,CACjB,MAAO,SAAP,CACD,CAFD,IAEO,CACL,MAAO,4BAAP,CACD,CACF,CAnBW,CAAd,CAwBA,GAAMC,CAAAA,kBAA4B,CAAG,QAA/BA,CAAAA,kBAA+B,EAAM,UAClBV,MAAM,CAACW,QAAP,CAAgB,WAAhB,CADkB,CACjCC,UADiC,MACjCA,UADiC,WAEDZ,MAAM,CAACW,QAAP,CAAgBP,cAAhB,CAFC,CAEjCS,WAFiC,OAEjCA,WAFiC,CAEpBC,cAFoB,OAEpBA,cAFoB,CAIzC,QAASC,CAAAA,uBAAT,EAA2C,CACzC,MAAOH,CAAAA,UAAU,CAACG,uBAAX,CAAmCb,SAAS,CAACc,kBAAV,CAA6B,CAA7B,CAAnC,EACJC,IADI,CACC,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACd,GAAID,CAAC,CAACE,aAAF,GAAoBD,CAAC,CAACC,aAAF,EAAxB,CAA2C,CACzC,MAAO,CAAC,CAAR,CACD,CAFD,IAEO,IAAIF,CAAC,CAACE,aAAF,GAAoBD,CAAC,CAACC,aAAF,EAAxB,CAA2C,CAChD,MAAO,EAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CATI,CAAP,CAWD,CAED,mBACE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EACE,IAAI,CAAC,OADP,CAEE,QAAQ,KAFV,CAGE,UAAU,CAAEL,uBAAuB,EAHrC,CAIE,UAAU,CAAE,oBAAAM,IAAI,qBACd,oBAAC,QAAD,EAAU,OAAO,CAAEA,IAAI,CAACC,UAAL,CAAgBT,WAAhB,CAAnB,CAAiD,GAAG,CAAEQ,IAAI,CAACE,EAA3D,CAA+D,OAAO,CAAE,iBAACC,CAAD,QAAOV,CAAAA,cAAc,CAACO,IAAD,CAArB,EAAxE,EACGA,IAAI,CAACI,KADR,kBACe,4BAAM,KAAK,CAAE,CAAEC,KAAK,CAAC,SAAR,CAAb,EAAmCvB,MAAM,CAACwB,eAAP,CAAuBN,IAAI,CAACO,mBAAL,CAAyB1B,SAAS,CAACc,kBAAV,CAA6B,CAA7B,CAAzB,CAAvB,CAAnC,CADf,CADc,EAJlB,EADF,CADF,CAcD,CAhCD,CAkCA,cAAeN,CAAAA,kBAAf","sourcesContent":["import 'reflect-metadata'\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport stores from '../stores';\nimport { List } from 'antd';\nimport { StoreModel, Task, TimeLine } from '../model/model'\nimport DateUtils from '../utils/DateUtils'\nimport Format from '../utils/Format'\nimport { CurrentTaskKey } from '../stores/CurrentTaskStore';\n\n\n\nconst Div = styled.div`\nheight: 45vh;\noverflow-y: scroll;\nwhite-space: pre-wrap;\nbackground-color:#ffffff;\n\n::-webkit-scrollbar {\n            -webkit-appearance: none;\n            width: 7px;\n        }\n        ::-webkit-scrollbar-thumb {\n            border-radius: 4px;\n            background-color: rgba(0, 0, 0, .5);\n            box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n        }\n`\n\nconst NoteItem = styled.div`\npadding:2px;\nmargin:1px;\n:hover{\n  background-color: ${(props: { choosed: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return '#b4e7fc'\n    }\n  }\n  }\n};\nbackground-color: ${(props: { choosed: boolean }) => {\n    if (props.choosed) {\n      return '#f5b52b'\n    } else {\n      return 'rgba(194, 226, 255, 0.495)'\n    }\n  }\n  };\n\n`\n\nconst TodayWorkConatiner: React.FC = () => {\n  const { storeModel } = stores.useStore('mainmodel') as { storeModel: StoreModel };\n  const { currentTask, setCurrentTask } = stores.useStore(CurrentTaskKey) as { currentTask: Task | undefined, setCurrentTask: (note: Task) => void }\n\n  function getCurrentDayDoingTasks(): Task[] {\n    return storeModel.getCurrentDayDoingTasks(DateUtils.getMyCurrentDayDur(0))\n      .sort((a, b) => {\n        if (a.lastStartTime() > b.lastStartTime()) {\n          return -1\n        } else if (a.lastStartTime() < b.lastStartTime()) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n      )\n  }\n\n  return (\n    <Div>\n      <List\n        size=\"small\"\n        bordered\n        dataSource={getCurrentDayDoingTasks()}\n        renderItem={task => (\n          <NoteItem choosed={task.isSameTask(currentTask)} key={task.id} onClick={(e) => setCurrentTask(task)}>\n            {task.title} <span style={{ color:\"#0295d2\" }}>{Format.formatDuration3(task.getAllDurationInDur(DateUtils.getMyCurrentDayDur(0)))}</span>\n          </NoteItem>\n        )}\n      />\n    </Div>\n  );\n}\n\nexport default TodayWorkConatiner;\n"]},"metadata":{},"sourceType":"module"}