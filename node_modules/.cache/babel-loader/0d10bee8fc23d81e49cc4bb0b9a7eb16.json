{"ast":null,"code":"import _initializerDefineProperty from \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _class2, _temp, _dec2, _class3, _descriptor2, _temp2;\n\nimport Utils from '../utils/Utils';\nimport { Type } from \"class-transformer\";\nlet Task = (_dec = Type(() => Duration), (_class = (_temp = _class2 = class Task {\n  constructor() {\n    this.id = -1;\n    this.title = \"undefine\";\n    this.note = new Note();\n    this.level = 3;\n    this.createTime = -1;\n    this.doneTime = -1;\n    this.doneTime = -1;\n    this.deadlines = [];\n    this.expectConsumes = [];\n\n    _initializerDefineProperty(this, \"doingDurs\", _descriptor, this);\n  }\n\n  // 反序列化不能有带参数的构造器\n  // public constructor(title: string) {\n  //     this.title = title\n  //     this.createTime = Utils.getTimestamp()\n  //     this.id = Utils.generateId() + Task.idCounter\n  //     Task.idCounter = Task.idCounter + 1000\n  // }\n  init(title) {\n    this.title = title;\n    this.createTime = Utils.getTimestamp();\n    this.id = Utils.generateId() + Task.idCounter;\n    Task.idCounter = Task.idCounter + 1000;\n  }\n\n  isSameTask(task) {\n    if (task === undefined) {\n      return false;\n    } else {\n      return this.id === task.id;\n    }\n  }\n\n  isDoing() {\n    if (this.doingDurs.length === 0) {\n      return false;\n    } else {\n      let lastTask = this.doingDurs[this.doingDurs.length - 1];\n      return lastTask.end === -1;\n    }\n  }\n\n  lastStartTime() {\n    if (this.doingDurs.length === 0) {\n      return -1;\n    } else {\n      let lastTask = this.doingDurs[this.doingDurs.length - 1];\n      return lastTask.start;\n    }\n  }\n\n  start() {\n    let duration = new Duration();\n    duration.init(Utils.getTimestamp());\n    this.doingDurs.push(duration);\n  }\n\n  stop() {\n    this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp();\n  }\n\n  stopDelay(delay) {\n    this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp() + delay;\n  }\n\n  isDone() {\n    return this.doneTime !== -1;\n  }\n\n  done() {\n    this.doneTime = Utils.getTimestamp();\n  } // 返回毫秒数\n  // todo rename getAllDoingDuration\n\n\n  getAllDuration() {\n    if (this.doingDurs.length === 0) {\n      return 0;\n    }\n\n    return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b);\n  }\n\n  getActualDeadline() {\n    if (this.deadlines.length === 0) {\n      return -1;\n    }\n\n    return this.deadlines[this.deadlines.length - 1];\n  }\n\n  getActualExpectConsume() {\n    if (this.expectConsumes.length === 0) {\n      return -1;\n    }\n\n    return this.expectConsumes[this.expectConsumes.length - 1];\n  } // 超出预期时间返回多花的时间，负值\n  // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n\n\n  getLeftExpectConsumeTime() {\n    let left = this.getActualExpectConsume() - this.getAllDuration();\n\n    if (left < 0) {\n      console.error(\"超出预期时间\");\n    }\n\n    return left;\n  }\n\n}, _class2.idCounter = 0, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"doingDurs\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n})), _class));\n\nclass Duration {\n  constructor() {\n    this.start = -1;\n    this.end = -1;\n  }\n\n  // todo 没法重载\n  init(start) {\n    this.start = start;\n  }\n\n  init2(start, end) {\n    this.start = start;\n\n    if (end != undefined) {\n      this.end = end;\n    }\n  }\n\n  isIn(timeStamp) {\n    return timeStamp >= this.start && timeStamp <= this.end;\n  }\n\n  getDur(isDoing) {\n    let end = this.end;\n\n    if (end == -1 && isDoing) {\n      end = Utils.getTimestamp();\n    }\n\n    if (end == -1) {\n      console.error(\"这段时间未结束\");\n      return 0;\n    }\n\n    return end - this.start;\n  }\n\n  isValid(isDoing) {\n    if (!isDoing && this.end == -1) return false;\n    return true;\n  }\n\n}\n\nclass Note {\n  constructor() {\n    this.content = \"\";\n  }\n\n}\n\nlet StoreModel = (_dec2 = Type(() => Task), (_class3 = (_temp2 = class StoreModel {\n  constructor() {\n    _initializerDefineProperty(this, \"tasks\", _descriptor2, this);\n  }\n\n  /**\n   * 筛选规则：\n   * 1. 所有未完成的任务（之后要排除非当天的计划任务）\n   * 2. 今天完成的任务\n   */\n  getTasks(dur) {\n    return this.tasks.filter(value => {\n      return !value.isDone() || dur.isIn(value.doneTime);\n    });\n  }\n\n  addTask(task) {\n    if (this.containsProject(task.id)) return;\n    this.tasks.push(task);\n  }\n\n  removeTask(task) {\n    if (!this.containsProject(task.id)) return false;\n    let length = this.tasks.length;\n\n    for (let i = 0; i < length; i++) {\n      if (this.tasks[i].id === task.id) {\n        if (i === 0) {\n          this.tasks.shift(); //删除并返回数组的第一个元素\n        } else if (i === length - 1) {\n          this.tasks.pop(); //删除并返回数组的最后一个元素\n        } else {\n          this.tasks.splice(i, 1); //删除下标为i的元素\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  containsProject(id) {\n    return this.tasks.find(item => item.id === id) !== undefined;\n  }\n\n  orderTasks() {\n    this.tasks.sort((a, b) => {\n      if (a.isDone() && !b.isDone()) {\n        return 1;\n      } else if (!a.isDone() && b.isDone()) {\n        return -1;\n      } else {\n        if (a.level > b.level) {\n          return 1;\n        } else if (a.level < b.level) {\n          return -1;\n        } else {\n          if (a.createTime > b.createTime) {\n            return 1;\n          } else if (a.createTime < b.createTime) {\n            return -1;\n          } else {\n            return 0;\n          }\n        }\n      }\n    });\n  }\n\n}, _temp2), (_descriptor2 = _applyDecoratedDescriptor(_class3.prototype, \"tasks\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n})), _class3));\nexport { Task, Duration, StoreModel, Note };","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/model/model.ts"],"names":["Utils","Type","Task","Duration","id","title","note","Note","level","createTime","doneTime","deadlines","expectConsumes","init","getTimestamp","generateId","idCounter","isSameTask","task","undefined","isDoing","doingDurs","length","lastTask","end","lastStartTime","start","duration","push","stop","stopDelay","delay","isDone","done","getAllDuration","map","value","index","getDur","reduce","a","b","getActualDeadline","getActualExpectConsume","getLeftExpectConsumeTime","left","console","error","init2","isIn","timeStamp","isValid","content","StoreModel","getTasks","dur","tasks","filter","addTask","containsProject","removeTask","i","shift","pop","splice","find","item","orderTasks","sort"],"mappings":"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","sourcesContent":["import Utils from '../utils/Utils'\nimport {Type} from \"class-transformer\";\n\nclass Task {\n    // todo delete 内存id增加器（因为mock初始化太快了，都在一个毫秒内）\n    private static idCounter = 0\n\n    public id: number = -1\n\n    public title: string = \"undefine\"\n    public note: Note = new Note()\n\n    public level: number = 3\n\n    public createTime: number = -1\n    public doneTime: number = -1\n    \n    public doneTime: number = -1\n\n    // 可修改，最后一个有效\n    public deadlines: number[] = []\n    // 预计花费时间，单位毫秒，可修改，最后一个有效\n    public expectConsumes: number[] = []\n\n    @Type(() => Duration)\n    public doingDurs: Duration[] = []\n\n    // 反序列化不能有带参数的构造器\n    // public constructor(title: string) {\n    //     this.title = title\n    //     this.createTime = Utils.getTimestamp()\n\n    //     this.id = Utils.generateId() + Task.idCounter\n    //     Task.idCounter = Task.idCounter + 1000\n    // }\n\n    public init(title: string) {\n        this.title = title\n        this.createTime = Utils.getTimestamp()\n\n        this.id = Utils.generateId() + Task.idCounter\n        Task.idCounter = Task.idCounter + 1000\n    }\n\n    public isSameTask(task: Task | undefined): boolean {\n        if (task === undefined) {\n            return false\n        } else {\n            return this.id === task.id\n        }\n    }\n\n    public isDoing(): boolean {\n        if (this.doingDurs.length === 0) {\n            return false\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.end === -1\n        }\n    }\n\n    public lastStartTime(): number {\n        if (this.doingDurs.length === 0) {\n            return -1\n        } else {\n            let lastTask = this.doingDurs[this.doingDurs.length - 1]\n            return lastTask.start\n        }\n    }\n\n    public start() {\n        let duration = new Duration()\n        duration.init(Utils.getTimestamp())\n        this.doingDurs.push(duration)\n    }\n\n    public stop() {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp()\n    }\n\n    public stopDelay(delay:number) {\n        this.doingDurs[this.doingDurs.length - 1].end = Utils.getTimestamp()+ delay\n    }\n\n    public isDone(): boolean {\n        return this.doneTime !== -1\n    }\n\n    public done() {\n        this.doneTime = Utils.getTimestamp()\n    }\n\n    // 返回毫秒数\n    // todo rename getAllDoingDuration\n    public getAllDuration(): number {\n        if (this.doingDurs.length === 0) {\n            return 0\n        }\n\n        return this.doingDurs.map((value, index) => value.getDur(index === this.doingDurs.length - 1)).reduce((a, b) => a + b)\n    }\n\n    public getActualDeadline(): number {\n        if (this.deadlines.length === 0) {\n            return -1\n        }\n\n        return this.deadlines[this.deadlines.length - 1]\n    }\n\n    public getActualExpectConsume(): number {\n        if (this.expectConsumes.length === 0) {\n            return -1\n        }\n\n        return this.expectConsumes[this.expectConsumes.length - 1]\n    }\n\n    // 超出预期时间返回多花的时间，负值\n    // 用的时候有提前判断 getActualExpectConsume 是不是返回负值\n    public getLeftExpectConsumeTime(): number {\n        let left = this.getActualExpectConsume() - this.getAllDuration()\n        if (left < 0) {\n            console.error(\"超出预期时间\")\n        }\n        return left\n    }\n}\n\nclass Duration {\n    public start: number = -1\n    public end: number = -1\n\n    // todo 没法重载\n    public init(start: number) {\n        this.start = start\n    }\n    public init2(start: number, end?: number) {\n        this.start = start\n        if (end != undefined) {\n            this.end = end\n        }\n    }\n\n    public isIn(timeStamp: number) {\n        return timeStamp >= this.start && timeStamp <= this.end\n    }\n\n    public getDur(isDoing: boolean): number {\n        let end = this.end\n        if (end == -1 && isDoing) {\n            end = Utils.getTimestamp()\n        }\n        if (end == -1) {\n            console.error(\"这段时间未结束\")\n            return 0\n        }\n        return end - this.start\n    }\n\n    public isValid(isDoing: boolean) {\n        if (!isDoing && this.end == -1) return false\n        return true\n    }\n}\n\nclass Note {\n    public content: string = \"\"\n}\n\nclass StoreModel {\n    @Type(() => Task)\n    public tasks: Task[] = []\n\n    /**\n     * 筛选规则：\n     * 1. 所有未完成的任务（之后要排除非当天的计划任务）\n     * 2. 今天完成的任务\n     */\n    public getTasks(dur: Duration): Task[] {\n        return this.tasks.filter((value) => { return !value.isDone() || dur.isIn(value.doneTime) })\n    }\n\n    public addTask(task: Task) {\n        if (this.containsProject(task.id)) return\n\n        this.tasks.push(task)\n    }\n\n    public removeTask(task: Task): boolean {\n        if (!this.containsProject(task.id)) return false\n\n        let length = this.tasks.length;\n        for (let i = 0; i < length; i++) {\n            if (this.tasks[i].id === task.id) {\n                if (i === 0) {\n                    this.tasks.shift(); //删除并返回数组的第一个元素\n                } else if (i === length - 1) {\n                    this.tasks.pop();  //删除并返回数组的最后一个元素\n                } else {\n                    this.tasks.splice(i, 1); //删除下标为i的元素\n                }\n                return true\n            }\n        }\n        return false\n    }\n\n    private containsProject(id: number): boolean {\n        return this.tasks.find(item => item.id === id) !== undefined\n    }\n\n    public orderTasks() {\n        this.tasks.sort((a, b) => {\n            if (a.isDone() && !b.isDone()) {\n                return 1\n            } else if (!a.isDone() && b.isDone()) {\n                return -1\n            } else {\n                if (a.level > b.level) {\n                    return 1\n                } else if (a.level < b.level) {\n                    return -1\n                } else {\n                    if (a.createTime > b.createTime) {\n                        return 1\n                    } else if (a.createTime < b.createTime) {\n                        return -1\n                    } else {\n                        return 0\n                    }\n                }\n            }\n        })\n    }\n}\n\n\nexport { Task, Duration, StoreModel, Note }"]},"metadata":{},"sourceType":"module"}