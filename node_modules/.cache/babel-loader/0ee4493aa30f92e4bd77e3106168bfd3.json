{"ast":null,"code":"import _classCallCheck from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{Duration}from\"../model/model\";var DateUtils=/*#__PURE__*/function(){function DateUtils(){_classCallCheck(this,DateUtils);}_createClass(DateUtils,null,[{key:\"getCurrentDayStamp\",// 获得今天某个小时的时间戳\nvalue:function getCurrentDayStamp(hour){var today=new Date();today.setHours(hour,0,0,0);return today.getTime();}// 获得某个时间戳那天某个小时的时间戳\n},{key:\"getSomeDayStamp\",value:function getSomeDayStamp(someStamp,hour){var day=new Date(someStamp);day.setHours(hour,0,0,0);return day.getTime();}// 获得某天偏移某个小时后的dur\n// 暂时 offsetHour 只支持 0-24 之间的数\n},{key:\"getOffsetedDayDur\",value:function getOffsetedDayDur(dayZeroTime,offsetHour){var day=new Date(dayZeroTime);day.setHours(offsetHour,0,0,0);var result=new Duration();result.init(day.getTime());result.end=day.getTime()+DateUtils.dayMills;return result;}//-------------------- 以下业务相关 --------------------\n/**\n     * 获得今天（是否当天按6点判断） offset 某些天的 0 点时间戳\n     */},{key:\"getMyCurrentDayStamp\",value:function getMyCurrentDayStamp(offsetDay,dayOffset){var now=new Date().getTime();// 今天6点\nvar todayOffset=DateUtils.getCurrentDayStamp(dayOffset);if(now>todayOffset){return DateUtils.getCurrentDayStamp(0)+DateUtils.dayMills*offsetDay;}else{return DateUtils.getCurrentDayStamp(0)-DateUtils.dayMills+DateUtils.dayMills*offsetDay;}}/**\n     * 获得今天（是否当天按6点判断） offset 某些天的 dur，这个某些天本身也 offset 6\n     */},{key:\"getMyCurrentDayDur\",value:function getMyCurrentDayDur(offsetDay){return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay,DateUtils.dayOffset),DateUtils.dayOffset);}/**\n     * 获得今天（是否当天按0点判断） offset 某些天的 dur, 这个是0\n     */},{key:\"getMyCurrentDayDur2\",value:function getMyCurrentDayDur2(offsetDay){return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay,0),0);}},{key:\"isSameDay\",value:function isSameDay(time1,time2){return new Date(time1).getDay()===new Date(time2).getDay();}}]);return DateUtils;}();DateUtils.dayMills=24*60*60*1000;DateUtils.dayOffset=6;export default DateUtils;","map":{"version":3,"sources":["/Users/bear/Develop/vscode/self/study/study1/React/DoingList/doinglist2/src/utils/DateUtils.ts"],"names":["Duration","DateUtils","hour","today","Date","setHours","getTime","someStamp","day","dayZeroTime","offsetHour","result","init","end","dayMills","offsetDay","dayOffset","now","todayOffset","getCurrentDayStamp","getOffsetedDayDur","getMyCurrentDayStamp","time1","time2","getDay"],"mappings":"0XAAA,OAASA,QAAT,KAAyB,gBAAzB,C,GAEMC,CAAAA,S,sIAIF;kCACiCC,I,CAAsB,CACnD,GAAIC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CACAD,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,EACA,MAAOC,CAAAA,KAAK,CAACG,OAAN,EAAP,CACH,CAED;wDAC8BC,S,CAAmBL,I,CAAsB,CACnE,GAAIM,CAAAA,GAAG,CAAG,GAAIJ,CAAAA,IAAJ,CAASG,SAAT,CAAV,CACAC,GAAG,CAACH,QAAJ,CAAaH,IAAb,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,EACA,MAAOM,CAAAA,GAAG,CAACF,OAAJ,EAAP,CACH,CAED;AACA;4DACgCG,W,CAAqBC,U,CAA8B,CAC/E,GAAIF,CAAAA,GAAG,CAAG,GAAIJ,CAAAA,IAAJ,CAASK,WAAT,CAAV,CACAD,GAAG,CAACH,QAAJ,CAAaK,UAAb,CAAyB,CAAzB,CAA4B,CAA5B,CAA+B,CAA/B,EAEA,GAAIC,CAAAA,MAAM,CAAG,GAAIX,CAAAA,QAAJ,EAAb,CACAW,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACF,OAAJ,EAAZ,EACAK,MAAM,CAACE,GAAP,CAAaL,GAAG,CAACF,OAAJ,GAAgBL,SAAS,CAACa,QAAvC,CACA,MAAOH,CAAAA,MAAP,CACH,CAED;AAEA;;yEAGmCI,S,CAAmBC,S,CAA2B,CAC7E,GAAIC,CAAAA,GAAG,CAAG,GAAIb,CAAAA,IAAJ,GAAWE,OAAX,EAAV,CACA;AACA,GAAIY,CAAAA,WAAW,CAAGjB,SAAS,CAACkB,kBAAV,CAA6BH,SAA7B,CAAlB,CAEA,GAAIC,GAAG,CAAGC,WAAV,CAAuB,CACnB,MAAOjB,CAAAA,SAAS,CAACkB,kBAAV,CAA6B,CAA7B,EAAkClB,SAAS,CAACa,QAAV,CAAqBC,SAA9D,CACH,CAFD,IAEO,CACH,MAAOd,CAAAA,SAAS,CAACkB,kBAAV,CAA6B,CAA7B,EAAkClB,SAAS,CAACa,QAA5C,CAAuDb,SAAS,CAACa,QAAV,CAAqBC,SAAnF,CACH,CACJ,CAED;;qEAGiCA,S,CAA6B,CAC1D,MAAOd,CAAAA,SAAS,CAACmB,iBAAV,CAA4BnB,SAAS,CAACoB,oBAAV,CAA+BN,SAA/B,CAA0Cd,SAAS,CAACe,SAApD,CAA5B,CAA4Ff,SAAS,CAACe,SAAtG,CAAP,CACH,CAED;;uEAGkCD,S,CAA6B,CAC3D,MAAOd,CAAAA,SAAS,CAACmB,iBAAV,CAA4BnB,SAAS,CAACoB,oBAAV,CAA+BN,SAA/B,CAA0C,CAA1C,CAA5B,CAA0E,CAA1E,CAAP,CACH,C,4CAEuBO,K,CAAeC,K,CAAwB,CAC3D,MAAO,IAAInB,CAAAA,IAAJ,CAASkB,KAAT,EAAgBE,MAAhB,KAA8B,GAAIpB,CAAAA,IAAJ,CAASmB,KAAT,EAAgBC,MAAhB,EAArC,CACH,C,yBA/DCvB,S,CACaa,Q,CAAmB,GAAK,EAAL,CAAU,EAAV,CAAe,I,CAD/Cb,S,CAEYe,S,CAAoB,C,CAgEtC,cAAef,CAAAA,SAAf","sourcesContent":["import { Duration } from \"../model/model\";\n\nclass DateUtils {\n    private static dayMills: number = 24 * 60 * 60 * 1000\n    public static dayOffset: number = 6\n\n    // 获得今天某个小时的时间戳\n    public static getCurrentDayStamp(hour: number): number {\n        let today = new Date();\n        today.setHours(hour, 0, 0, 0);\n        return today.getTime();\n    }\n\n    // 获得某个时间戳那天某个小时的时间戳\n    public static getSomeDayStamp(someStamp: number, hour: number): number {\n        let day = new Date(someStamp)\n        day.setHours(hour, 0, 0, 0)\n        return day.getTime();\n    }\n\n    // 获得某天偏移某个小时后的dur\n    // 暂时 offsetHour 只支持 0-24 之间的数\n    public static getOffsetedDayDur(dayZeroTime: number, offsetHour: number): Duration {\n        let day = new Date(dayZeroTime)\n        day.setHours(offsetHour, 0, 0, 0)\n\n        let result = new Duration()\n        result.init(day.getTime())\n        result.end = day.getTime() + DateUtils.dayMills\n        return result\n    }\n\n    //-------------------- 以下业务相关 --------------------\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 0 点时间戳\n     */\n    public static getMyCurrentDayStamp(offsetDay: number, dayOffset: number): number {\n        let now = new Date().getTime()\n        // 今天6点\n        let todayOffset = DateUtils.getCurrentDayStamp(dayOffset)\n\n        if (now > todayOffset) {\n            return DateUtils.getCurrentDayStamp(0) + DateUtils.dayMills * offsetDay\n        } else {\n            return DateUtils.getCurrentDayStamp(0) - DateUtils.dayMills + DateUtils.dayMills * offsetDay\n        }\n    }\n\n    /**\n     * 获得今天（是否当天按6点判断） offset 某些天的 dur，这个某些天本身也 offset 6\n     */\n    public static getMyCurrentDayDur(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, DateUtils.dayOffset), DateUtils.dayOffset)\n    }\n\n    /**\n     * 获得今天（是否当天按0点判断） offset 某些天的 dur, 这个是0\n     */\n    public static getMyCurrentDayDur2(offsetDay: number): Duration {\n        return DateUtils.getOffsetedDayDur(DateUtils.getMyCurrentDayStamp(offsetDay, 0), 0)\n    }\n\n    public static isSameDay(time1: number, time2: number): boolean {\n        return new Date(time1).getDay() ===  new Date(time2).getDay()\n    }\n}\n\nexport default DateUtils"]},"metadata":{},"sourceType":"module"}